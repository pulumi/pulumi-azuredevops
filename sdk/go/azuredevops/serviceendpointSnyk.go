// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package azuredevops

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azuredevops/sdk/v3/go/azuredevops/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Snyk Security Scan service endpoint within Azure DevOps. Using this service endpoint requires you to install: [Snyk Security Scan](https://marketplace.visualstudio.com/items?itemName=Snyk.snyk-security-scan)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azuredevops/sdk/v3/go/azuredevops"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := azuredevops.NewProject(ctx, "example", &azuredevops.ProjectArgs{
//				Name:             pulumi.String("Example Project"),
//				Visibility:       pulumi.String("private"),
//				VersionControl:   pulumi.String("Git"),
//				WorkItemTemplate: pulumi.String("Agile"),
//				Description:      pulumi.String("Managed by Pulumi"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = azuredevops.NewServiceendpointSnyk(ctx, "example", &azuredevops.ServiceendpointSnykArgs{
//				ProjectId:           example.ID(),
//				ServerUrl:           pulumi.String("https://snyk.io/"),
//				ApiToken:            pulumi.String("00000000-0000-0000-0000-000000000000"),
//				ServiceEndpointName: pulumi.String("Example Snyk"),
//				Description:         pulumi.String("Managed by Pulumi"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Relevant Links
//
// - [Azure DevOps Service REST API 7.0 - Endpoints](https://docs.microsoft.com/en-us/rest/api/azure/devops/serviceendpoint/endpoints?view=azure-devops-rest-7.0)
//
// ## Import
//
// Azure DevOps Service Endpoint Snyk can be imported using **projectID/serviceEndpointID** or **projectName/serviceEndpointID**
//
// ```sh
// $ pulumi import azuredevops:index/serviceendpointSnyk:ServiceendpointSnyk example 00000000-0000-0000-0000-000000000000/00000000-0000-0000-0000-000000000000
// ```
type ServiceendpointSnyk struct {
	pulumi.CustomResourceState

	// The API token of the Snyk Security Scan.
	ApiToken      pulumi.StringOutput    `pulumi:"apiToken"`
	Authorization pulumi.StringMapOutput `pulumi:"authorization"`
	Description   pulumi.StringPtrOutput `pulumi:"description"`
	// The ID of the project.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// The server URL of the Snyk Security Scan.
	ServerUrl pulumi.StringOutput `pulumi:"serverUrl"`
	// The Service Endpoint name.
	ServiceEndpointName pulumi.StringOutput `pulumi:"serviceEndpointName"`
}

// NewServiceendpointSnyk registers a new resource with the given unique name, arguments, and options.
func NewServiceendpointSnyk(ctx *pulumi.Context,
	name string, args *ServiceendpointSnykArgs, opts ...pulumi.ResourceOption) (*ServiceendpointSnyk, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ApiToken == nil {
		return nil, errors.New("invalid value for required argument 'ApiToken'")
	}
	if args.ProjectId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectId'")
	}
	if args.ServerUrl == nil {
		return nil, errors.New("invalid value for required argument 'ServerUrl'")
	}
	if args.ServiceEndpointName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceEndpointName'")
	}
	if args.ApiToken != nil {
		args.ApiToken = pulumi.ToSecret(args.ApiToken).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"apiToken",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceendpointSnyk
	err := ctx.RegisterResource("azuredevops:index/serviceendpointSnyk:ServiceendpointSnyk", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceendpointSnyk gets an existing ServiceendpointSnyk resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceendpointSnyk(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceendpointSnykState, opts ...pulumi.ResourceOption) (*ServiceendpointSnyk, error) {
	var resource ServiceendpointSnyk
	err := ctx.ReadResource("azuredevops:index/serviceendpointSnyk:ServiceendpointSnyk", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceendpointSnyk resources.
type serviceendpointSnykState struct {
	// The API token of the Snyk Security Scan.
	ApiToken      *string           `pulumi:"apiToken"`
	Authorization map[string]string `pulumi:"authorization"`
	Description   *string           `pulumi:"description"`
	// The ID of the project.
	ProjectId *string `pulumi:"projectId"`
	// The server URL of the Snyk Security Scan.
	ServerUrl *string `pulumi:"serverUrl"`
	// The Service Endpoint name.
	ServiceEndpointName *string `pulumi:"serviceEndpointName"`
}

type ServiceendpointSnykState struct {
	// The API token of the Snyk Security Scan.
	ApiToken      pulumi.StringPtrInput
	Authorization pulumi.StringMapInput
	Description   pulumi.StringPtrInput
	// The ID of the project.
	ProjectId pulumi.StringPtrInput
	// The server URL of the Snyk Security Scan.
	ServerUrl pulumi.StringPtrInput
	// The Service Endpoint name.
	ServiceEndpointName pulumi.StringPtrInput
}

func (ServiceendpointSnykState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceendpointSnykState)(nil)).Elem()
}

type serviceendpointSnykArgs struct {
	// The API token of the Snyk Security Scan.
	ApiToken      string            `pulumi:"apiToken"`
	Authorization map[string]string `pulumi:"authorization"`
	Description   *string           `pulumi:"description"`
	// The ID of the project.
	ProjectId string `pulumi:"projectId"`
	// The server URL of the Snyk Security Scan.
	ServerUrl string `pulumi:"serverUrl"`
	// The Service Endpoint name.
	ServiceEndpointName string `pulumi:"serviceEndpointName"`
}

// The set of arguments for constructing a ServiceendpointSnyk resource.
type ServiceendpointSnykArgs struct {
	// The API token of the Snyk Security Scan.
	ApiToken      pulumi.StringInput
	Authorization pulumi.StringMapInput
	Description   pulumi.StringPtrInput
	// The ID of the project.
	ProjectId pulumi.StringInput
	// The server URL of the Snyk Security Scan.
	ServerUrl pulumi.StringInput
	// The Service Endpoint name.
	ServiceEndpointName pulumi.StringInput
}

func (ServiceendpointSnykArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceendpointSnykArgs)(nil)).Elem()
}

type ServiceendpointSnykInput interface {
	pulumi.Input

	ToServiceendpointSnykOutput() ServiceendpointSnykOutput
	ToServiceendpointSnykOutputWithContext(ctx context.Context) ServiceendpointSnykOutput
}

func (*ServiceendpointSnyk) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceendpointSnyk)(nil)).Elem()
}

func (i *ServiceendpointSnyk) ToServiceendpointSnykOutput() ServiceendpointSnykOutput {
	return i.ToServiceendpointSnykOutputWithContext(context.Background())
}

func (i *ServiceendpointSnyk) ToServiceendpointSnykOutputWithContext(ctx context.Context) ServiceendpointSnykOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceendpointSnykOutput)
}

// ServiceendpointSnykArrayInput is an input type that accepts ServiceendpointSnykArray and ServiceendpointSnykArrayOutput values.
// You can construct a concrete instance of `ServiceendpointSnykArrayInput` via:
//
//	ServiceendpointSnykArray{ ServiceendpointSnykArgs{...} }
type ServiceendpointSnykArrayInput interface {
	pulumi.Input

	ToServiceendpointSnykArrayOutput() ServiceendpointSnykArrayOutput
	ToServiceendpointSnykArrayOutputWithContext(context.Context) ServiceendpointSnykArrayOutput
}

type ServiceendpointSnykArray []ServiceendpointSnykInput

func (ServiceendpointSnykArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceendpointSnyk)(nil)).Elem()
}

func (i ServiceendpointSnykArray) ToServiceendpointSnykArrayOutput() ServiceendpointSnykArrayOutput {
	return i.ToServiceendpointSnykArrayOutputWithContext(context.Background())
}

func (i ServiceendpointSnykArray) ToServiceendpointSnykArrayOutputWithContext(ctx context.Context) ServiceendpointSnykArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceendpointSnykArrayOutput)
}

// ServiceendpointSnykMapInput is an input type that accepts ServiceendpointSnykMap and ServiceendpointSnykMapOutput values.
// You can construct a concrete instance of `ServiceendpointSnykMapInput` via:
//
//	ServiceendpointSnykMap{ "key": ServiceendpointSnykArgs{...} }
type ServiceendpointSnykMapInput interface {
	pulumi.Input

	ToServiceendpointSnykMapOutput() ServiceendpointSnykMapOutput
	ToServiceendpointSnykMapOutputWithContext(context.Context) ServiceendpointSnykMapOutput
}

type ServiceendpointSnykMap map[string]ServiceendpointSnykInput

func (ServiceendpointSnykMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceendpointSnyk)(nil)).Elem()
}

func (i ServiceendpointSnykMap) ToServiceendpointSnykMapOutput() ServiceendpointSnykMapOutput {
	return i.ToServiceendpointSnykMapOutputWithContext(context.Background())
}

func (i ServiceendpointSnykMap) ToServiceendpointSnykMapOutputWithContext(ctx context.Context) ServiceendpointSnykMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceendpointSnykMapOutput)
}

type ServiceendpointSnykOutput struct{ *pulumi.OutputState }

func (ServiceendpointSnykOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceendpointSnyk)(nil)).Elem()
}

func (o ServiceendpointSnykOutput) ToServiceendpointSnykOutput() ServiceendpointSnykOutput {
	return o
}

func (o ServiceendpointSnykOutput) ToServiceendpointSnykOutputWithContext(ctx context.Context) ServiceendpointSnykOutput {
	return o
}

// The API token of the Snyk Security Scan.
func (o ServiceendpointSnykOutput) ApiToken() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceendpointSnyk) pulumi.StringOutput { return v.ApiToken }).(pulumi.StringOutput)
}

func (o ServiceendpointSnykOutput) Authorization() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServiceendpointSnyk) pulumi.StringMapOutput { return v.Authorization }).(pulumi.StringMapOutput)
}

func (o ServiceendpointSnykOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceendpointSnyk) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The ID of the project.
func (o ServiceendpointSnykOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceendpointSnyk) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// The server URL of the Snyk Security Scan.
func (o ServiceendpointSnykOutput) ServerUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceendpointSnyk) pulumi.StringOutput { return v.ServerUrl }).(pulumi.StringOutput)
}

// The Service Endpoint name.
func (o ServiceendpointSnykOutput) ServiceEndpointName() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceendpointSnyk) pulumi.StringOutput { return v.ServiceEndpointName }).(pulumi.StringOutput)
}

type ServiceendpointSnykArrayOutput struct{ *pulumi.OutputState }

func (ServiceendpointSnykArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceendpointSnyk)(nil)).Elem()
}

func (o ServiceendpointSnykArrayOutput) ToServiceendpointSnykArrayOutput() ServiceendpointSnykArrayOutput {
	return o
}

func (o ServiceendpointSnykArrayOutput) ToServiceendpointSnykArrayOutputWithContext(ctx context.Context) ServiceendpointSnykArrayOutput {
	return o
}

func (o ServiceendpointSnykArrayOutput) Index(i pulumi.IntInput) ServiceendpointSnykOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceendpointSnyk {
		return vs[0].([]*ServiceendpointSnyk)[vs[1].(int)]
	}).(ServiceendpointSnykOutput)
}

type ServiceendpointSnykMapOutput struct{ *pulumi.OutputState }

func (ServiceendpointSnykMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceendpointSnyk)(nil)).Elem()
}

func (o ServiceendpointSnykMapOutput) ToServiceendpointSnykMapOutput() ServiceendpointSnykMapOutput {
	return o
}

func (o ServiceendpointSnykMapOutput) ToServiceendpointSnykMapOutputWithContext(ctx context.Context) ServiceendpointSnykMapOutput {
	return o
}

func (o ServiceendpointSnykMapOutput) MapIndex(k pulumi.StringInput) ServiceendpointSnykOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceendpointSnyk {
		return vs[0].(map[string]*ServiceendpointSnyk)[vs[1].(string)]
	}).(ServiceendpointSnykOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceendpointSnykInput)(nil)).Elem(), &ServiceendpointSnyk{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceendpointSnykArrayInput)(nil)).Elem(), ServiceendpointSnykArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceendpointSnykMapInput)(nil)).Elem(), ServiceendpointSnykMap{})
	pulumi.RegisterOutputType(ServiceendpointSnykOutput{})
	pulumi.RegisterOutputType(ServiceendpointSnykArrayOutput{})
	pulumi.RegisterOutputType(ServiceendpointSnykMapOutput{})
}
