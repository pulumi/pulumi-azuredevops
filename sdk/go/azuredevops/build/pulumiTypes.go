// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package build

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi/sdk/v2/go/pulumi"
)

type BuildDefinitionCiTrigger struct {
	// Override the azure-pipeline file and use a this configuration for all builds.
	Override *BuildDefinitionCiTriggerOverride `pulumi:"override"`
	// Use the azure-pipeline file for the build configuration. Defaults to `false`.
	UseYaml *bool `pulumi:"useYaml"`
}

// BuildDefinitionCiTriggerInput is an input type that accepts BuildDefinitionCiTriggerArgs and BuildDefinitionCiTriggerOutput values.
// You can construct a concrete instance of `BuildDefinitionCiTriggerInput` via:
//
//          BuildDefinitionCiTriggerArgs{...}
type BuildDefinitionCiTriggerInput interface {
	pulumi.Input

	ToBuildDefinitionCiTriggerOutput() BuildDefinitionCiTriggerOutput
	ToBuildDefinitionCiTriggerOutputWithContext(context.Context) BuildDefinitionCiTriggerOutput
}

type BuildDefinitionCiTriggerArgs struct {
	// Override the azure-pipeline file and use a this configuration for all builds.
	Override BuildDefinitionCiTriggerOverridePtrInput `pulumi:"override"`
	// Use the azure-pipeline file for the build configuration. Defaults to `false`.
	UseYaml pulumi.BoolPtrInput `pulumi:"useYaml"`
}

func (BuildDefinitionCiTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildDefinitionCiTrigger)(nil)).Elem()
}

func (i BuildDefinitionCiTriggerArgs) ToBuildDefinitionCiTriggerOutput() BuildDefinitionCiTriggerOutput {
	return i.ToBuildDefinitionCiTriggerOutputWithContext(context.Background())
}

func (i BuildDefinitionCiTriggerArgs) ToBuildDefinitionCiTriggerOutputWithContext(ctx context.Context) BuildDefinitionCiTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildDefinitionCiTriggerOutput)
}

func (i BuildDefinitionCiTriggerArgs) ToBuildDefinitionCiTriggerPtrOutput() BuildDefinitionCiTriggerPtrOutput {
	return i.ToBuildDefinitionCiTriggerPtrOutputWithContext(context.Background())
}

func (i BuildDefinitionCiTriggerArgs) ToBuildDefinitionCiTriggerPtrOutputWithContext(ctx context.Context) BuildDefinitionCiTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildDefinitionCiTriggerOutput).ToBuildDefinitionCiTriggerPtrOutputWithContext(ctx)
}

// BuildDefinitionCiTriggerPtrInput is an input type that accepts BuildDefinitionCiTriggerArgs, BuildDefinitionCiTriggerPtr and BuildDefinitionCiTriggerPtrOutput values.
// You can construct a concrete instance of `BuildDefinitionCiTriggerPtrInput` via:
//
//          BuildDefinitionCiTriggerArgs{...}
//
//  or:
//
//          nil
type BuildDefinitionCiTriggerPtrInput interface {
	pulumi.Input

	ToBuildDefinitionCiTriggerPtrOutput() BuildDefinitionCiTriggerPtrOutput
	ToBuildDefinitionCiTriggerPtrOutputWithContext(context.Context) BuildDefinitionCiTriggerPtrOutput
}

type buildDefinitionCiTriggerPtrType BuildDefinitionCiTriggerArgs

func BuildDefinitionCiTriggerPtr(v *BuildDefinitionCiTriggerArgs) BuildDefinitionCiTriggerPtrInput {
	return (*buildDefinitionCiTriggerPtrType)(v)
}

func (*buildDefinitionCiTriggerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildDefinitionCiTrigger)(nil)).Elem()
}

func (i *buildDefinitionCiTriggerPtrType) ToBuildDefinitionCiTriggerPtrOutput() BuildDefinitionCiTriggerPtrOutput {
	return i.ToBuildDefinitionCiTriggerPtrOutputWithContext(context.Background())
}

func (i *buildDefinitionCiTriggerPtrType) ToBuildDefinitionCiTriggerPtrOutputWithContext(ctx context.Context) BuildDefinitionCiTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildDefinitionCiTriggerPtrOutput)
}

type BuildDefinitionCiTriggerOutput struct{ *pulumi.OutputState }

func (BuildDefinitionCiTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildDefinitionCiTrigger)(nil)).Elem()
}

func (o BuildDefinitionCiTriggerOutput) ToBuildDefinitionCiTriggerOutput() BuildDefinitionCiTriggerOutput {
	return o
}

func (o BuildDefinitionCiTriggerOutput) ToBuildDefinitionCiTriggerOutputWithContext(ctx context.Context) BuildDefinitionCiTriggerOutput {
	return o
}

func (o BuildDefinitionCiTriggerOutput) ToBuildDefinitionCiTriggerPtrOutput() BuildDefinitionCiTriggerPtrOutput {
	return o.ToBuildDefinitionCiTriggerPtrOutputWithContext(context.Background())
}

func (o BuildDefinitionCiTriggerOutput) ToBuildDefinitionCiTriggerPtrOutputWithContext(ctx context.Context) BuildDefinitionCiTriggerPtrOutput {
	return o.ApplyT(func(v BuildDefinitionCiTrigger) *BuildDefinitionCiTrigger {
		return &v
	}).(BuildDefinitionCiTriggerPtrOutput)
}

// Override the azure-pipeline file and use a this configuration for all builds.
func (o BuildDefinitionCiTriggerOutput) Override() BuildDefinitionCiTriggerOverridePtrOutput {
	return o.ApplyT(func(v BuildDefinitionCiTrigger) *BuildDefinitionCiTriggerOverride { return v.Override }).(BuildDefinitionCiTriggerOverridePtrOutput)
}

// Use the azure-pipeline file for the build configuration. Defaults to `false`.
func (o BuildDefinitionCiTriggerOutput) UseYaml() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildDefinitionCiTrigger) *bool { return v.UseYaml }).(pulumi.BoolPtrOutput)
}

type BuildDefinitionCiTriggerPtrOutput struct{ *pulumi.OutputState }

func (BuildDefinitionCiTriggerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildDefinitionCiTrigger)(nil)).Elem()
}

func (o BuildDefinitionCiTriggerPtrOutput) ToBuildDefinitionCiTriggerPtrOutput() BuildDefinitionCiTriggerPtrOutput {
	return o
}

func (o BuildDefinitionCiTriggerPtrOutput) ToBuildDefinitionCiTriggerPtrOutputWithContext(ctx context.Context) BuildDefinitionCiTriggerPtrOutput {
	return o
}

func (o BuildDefinitionCiTriggerPtrOutput) Elem() BuildDefinitionCiTriggerOutput {
	return o.ApplyT(func(v *BuildDefinitionCiTrigger) BuildDefinitionCiTrigger { return *v }).(BuildDefinitionCiTriggerOutput)
}

// Override the azure-pipeline file and use a this configuration for all builds.
func (o BuildDefinitionCiTriggerPtrOutput) Override() BuildDefinitionCiTriggerOverridePtrOutput {
	return o.ApplyT(func(v *BuildDefinitionCiTrigger) *BuildDefinitionCiTriggerOverride {
		if v == nil {
			return nil
		}
		return v.Override
	}).(BuildDefinitionCiTriggerOverridePtrOutput)
}

// Use the azure-pipeline file for the build configuration. Defaults to `false`.
func (o BuildDefinitionCiTriggerPtrOutput) UseYaml() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildDefinitionCiTrigger) *bool {
		if v == nil {
			return nil
		}
		return v.UseYaml
	}).(pulumi.BoolPtrOutput)
}

type BuildDefinitionCiTriggerOverride struct {
	// If you set batch to true, when a pipeline is running, the system waits until the run is completed, then starts another run with all changes that have not yet been built. Defaults to `true`.
	Batch *bool `pulumi:"batch"`
	// The branches to include and exclude from the trigger.
	BranchFilters []BuildDefinitionCiTriggerOverrideBranchFilter `pulumi:"branchFilters"`
	// The number of max builds per branch. Defaults to `1`.
	MaxConcurrentBuildsPerBranch *int `pulumi:"maxConcurrentBuildsPerBranch"`
	// Specify file paths to include or exclude. Note that the wildcard syntax is different between branches/tags and file paths.
	PathFilters []BuildDefinitionCiTriggerOverridePathFilter `pulumi:"pathFilters"`
	// How often the external repository is polled. Defaults to `0`.
	PollingInterval *int `pulumi:"pollingInterval"`
	// This is the ID of the polling job that polls the external repository. Once the build definition is saved/updated, this value is set.
	PollingJobId *string `pulumi:"pollingJobId"`
}

// BuildDefinitionCiTriggerOverrideInput is an input type that accepts BuildDefinitionCiTriggerOverrideArgs and BuildDefinitionCiTriggerOverrideOutput values.
// You can construct a concrete instance of `BuildDefinitionCiTriggerOverrideInput` via:
//
//          BuildDefinitionCiTriggerOverrideArgs{...}
type BuildDefinitionCiTriggerOverrideInput interface {
	pulumi.Input

	ToBuildDefinitionCiTriggerOverrideOutput() BuildDefinitionCiTriggerOverrideOutput
	ToBuildDefinitionCiTriggerOverrideOutputWithContext(context.Context) BuildDefinitionCiTriggerOverrideOutput
}

type BuildDefinitionCiTriggerOverrideArgs struct {
	// If you set batch to true, when a pipeline is running, the system waits until the run is completed, then starts another run with all changes that have not yet been built. Defaults to `true`.
	Batch pulumi.BoolPtrInput `pulumi:"batch"`
	// The branches to include and exclude from the trigger.
	BranchFilters BuildDefinitionCiTriggerOverrideBranchFilterArrayInput `pulumi:"branchFilters"`
	// The number of max builds per branch. Defaults to `1`.
	MaxConcurrentBuildsPerBranch pulumi.IntPtrInput `pulumi:"maxConcurrentBuildsPerBranch"`
	// Specify file paths to include or exclude. Note that the wildcard syntax is different between branches/tags and file paths.
	PathFilters BuildDefinitionCiTriggerOverridePathFilterArrayInput `pulumi:"pathFilters"`
	// How often the external repository is polled. Defaults to `0`.
	PollingInterval pulumi.IntPtrInput `pulumi:"pollingInterval"`
	// This is the ID of the polling job that polls the external repository. Once the build definition is saved/updated, this value is set.
	PollingJobId pulumi.StringPtrInput `pulumi:"pollingJobId"`
}

func (BuildDefinitionCiTriggerOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildDefinitionCiTriggerOverride)(nil)).Elem()
}

func (i BuildDefinitionCiTriggerOverrideArgs) ToBuildDefinitionCiTriggerOverrideOutput() BuildDefinitionCiTriggerOverrideOutput {
	return i.ToBuildDefinitionCiTriggerOverrideOutputWithContext(context.Background())
}

func (i BuildDefinitionCiTriggerOverrideArgs) ToBuildDefinitionCiTriggerOverrideOutputWithContext(ctx context.Context) BuildDefinitionCiTriggerOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildDefinitionCiTriggerOverrideOutput)
}

func (i BuildDefinitionCiTriggerOverrideArgs) ToBuildDefinitionCiTriggerOverridePtrOutput() BuildDefinitionCiTriggerOverridePtrOutput {
	return i.ToBuildDefinitionCiTriggerOverridePtrOutputWithContext(context.Background())
}

func (i BuildDefinitionCiTriggerOverrideArgs) ToBuildDefinitionCiTriggerOverridePtrOutputWithContext(ctx context.Context) BuildDefinitionCiTriggerOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildDefinitionCiTriggerOverrideOutput).ToBuildDefinitionCiTriggerOverridePtrOutputWithContext(ctx)
}

// BuildDefinitionCiTriggerOverridePtrInput is an input type that accepts BuildDefinitionCiTriggerOverrideArgs, BuildDefinitionCiTriggerOverridePtr and BuildDefinitionCiTriggerOverridePtrOutput values.
// You can construct a concrete instance of `BuildDefinitionCiTriggerOverridePtrInput` via:
//
//          BuildDefinitionCiTriggerOverrideArgs{...}
//
//  or:
//
//          nil
type BuildDefinitionCiTriggerOverridePtrInput interface {
	pulumi.Input

	ToBuildDefinitionCiTriggerOverridePtrOutput() BuildDefinitionCiTriggerOverridePtrOutput
	ToBuildDefinitionCiTriggerOverridePtrOutputWithContext(context.Context) BuildDefinitionCiTriggerOverridePtrOutput
}

type buildDefinitionCiTriggerOverridePtrType BuildDefinitionCiTriggerOverrideArgs

func BuildDefinitionCiTriggerOverridePtr(v *BuildDefinitionCiTriggerOverrideArgs) BuildDefinitionCiTriggerOverridePtrInput {
	return (*buildDefinitionCiTriggerOverridePtrType)(v)
}

func (*buildDefinitionCiTriggerOverridePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildDefinitionCiTriggerOverride)(nil)).Elem()
}

func (i *buildDefinitionCiTriggerOverridePtrType) ToBuildDefinitionCiTriggerOverridePtrOutput() BuildDefinitionCiTriggerOverridePtrOutput {
	return i.ToBuildDefinitionCiTriggerOverridePtrOutputWithContext(context.Background())
}

func (i *buildDefinitionCiTriggerOverridePtrType) ToBuildDefinitionCiTriggerOverridePtrOutputWithContext(ctx context.Context) BuildDefinitionCiTriggerOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildDefinitionCiTriggerOverridePtrOutput)
}

type BuildDefinitionCiTriggerOverrideOutput struct{ *pulumi.OutputState }

func (BuildDefinitionCiTriggerOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildDefinitionCiTriggerOverride)(nil)).Elem()
}

func (o BuildDefinitionCiTriggerOverrideOutput) ToBuildDefinitionCiTriggerOverrideOutput() BuildDefinitionCiTriggerOverrideOutput {
	return o
}

func (o BuildDefinitionCiTriggerOverrideOutput) ToBuildDefinitionCiTriggerOverrideOutputWithContext(ctx context.Context) BuildDefinitionCiTriggerOverrideOutput {
	return o
}

func (o BuildDefinitionCiTriggerOverrideOutput) ToBuildDefinitionCiTriggerOverridePtrOutput() BuildDefinitionCiTriggerOverridePtrOutput {
	return o.ToBuildDefinitionCiTriggerOverridePtrOutputWithContext(context.Background())
}

func (o BuildDefinitionCiTriggerOverrideOutput) ToBuildDefinitionCiTriggerOverridePtrOutputWithContext(ctx context.Context) BuildDefinitionCiTriggerOverridePtrOutput {
	return o.ApplyT(func(v BuildDefinitionCiTriggerOverride) *BuildDefinitionCiTriggerOverride {
		return &v
	}).(BuildDefinitionCiTriggerOverridePtrOutput)
}

// If you set batch to true, when a pipeline is running, the system waits until the run is completed, then starts another run with all changes that have not yet been built. Defaults to `true`.
func (o BuildDefinitionCiTriggerOverrideOutput) Batch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildDefinitionCiTriggerOverride) *bool { return v.Batch }).(pulumi.BoolPtrOutput)
}

// The branches to include and exclude from the trigger.
func (o BuildDefinitionCiTriggerOverrideOutput) BranchFilters() BuildDefinitionCiTriggerOverrideBranchFilterArrayOutput {
	return o.ApplyT(func(v BuildDefinitionCiTriggerOverride) []BuildDefinitionCiTriggerOverrideBranchFilter {
		return v.BranchFilters
	}).(BuildDefinitionCiTriggerOverrideBranchFilterArrayOutput)
}

// The number of max builds per branch. Defaults to `1`.
func (o BuildDefinitionCiTriggerOverrideOutput) MaxConcurrentBuildsPerBranch() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildDefinitionCiTriggerOverride) *int { return v.MaxConcurrentBuildsPerBranch }).(pulumi.IntPtrOutput)
}

// Specify file paths to include or exclude. Note that the wildcard syntax is different between branches/tags and file paths.
func (o BuildDefinitionCiTriggerOverrideOutput) PathFilters() BuildDefinitionCiTriggerOverridePathFilterArrayOutput {
	return o.ApplyT(func(v BuildDefinitionCiTriggerOverride) []BuildDefinitionCiTriggerOverridePathFilter {
		return v.PathFilters
	}).(BuildDefinitionCiTriggerOverridePathFilterArrayOutput)
}

// How often the external repository is polled. Defaults to `0`.
func (o BuildDefinitionCiTriggerOverrideOutput) PollingInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v BuildDefinitionCiTriggerOverride) *int { return v.PollingInterval }).(pulumi.IntPtrOutput)
}

// This is the ID of the polling job that polls the external repository. Once the build definition is saved/updated, this value is set.
func (o BuildDefinitionCiTriggerOverrideOutput) PollingJobId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildDefinitionCiTriggerOverride) *string { return v.PollingJobId }).(pulumi.StringPtrOutput)
}

type BuildDefinitionCiTriggerOverridePtrOutput struct{ *pulumi.OutputState }

func (BuildDefinitionCiTriggerOverridePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildDefinitionCiTriggerOverride)(nil)).Elem()
}

func (o BuildDefinitionCiTriggerOverridePtrOutput) ToBuildDefinitionCiTriggerOverridePtrOutput() BuildDefinitionCiTriggerOverridePtrOutput {
	return o
}

func (o BuildDefinitionCiTriggerOverridePtrOutput) ToBuildDefinitionCiTriggerOverridePtrOutputWithContext(ctx context.Context) BuildDefinitionCiTriggerOverridePtrOutput {
	return o
}

func (o BuildDefinitionCiTriggerOverridePtrOutput) Elem() BuildDefinitionCiTriggerOverrideOutput {
	return o.ApplyT(func(v *BuildDefinitionCiTriggerOverride) BuildDefinitionCiTriggerOverride { return *v }).(BuildDefinitionCiTriggerOverrideOutput)
}

// If you set batch to true, when a pipeline is running, the system waits until the run is completed, then starts another run with all changes that have not yet been built. Defaults to `true`.
func (o BuildDefinitionCiTriggerOverridePtrOutput) Batch() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildDefinitionCiTriggerOverride) *bool {
		if v == nil {
			return nil
		}
		return v.Batch
	}).(pulumi.BoolPtrOutput)
}

// The branches to include and exclude from the trigger.
func (o BuildDefinitionCiTriggerOverridePtrOutput) BranchFilters() BuildDefinitionCiTriggerOverrideBranchFilterArrayOutput {
	return o.ApplyT(func(v *BuildDefinitionCiTriggerOverride) []BuildDefinitionCiTriggerOverrideBranchFilter {
		if v == nil {
			return nil
		}
		return v.BranchFilters
	}).(BuildDefinitionCiTriggerOverrideBranchFilterArrayOutput)
}

// The number of max builds per branch. Defaults to `1`.
func (o BuildDefinitionCiTriggerOverridePtrOutput) MaxConcurrentBuildsPerBranch() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BuildDefinitionCiTriggerOverride) *int {
		if v == nil {
			return nil
		}
		return v.MaxConcurrentBuildsPerBranch
	}).(pulumi.IntPtrOutput)
}

// Specify file paths to include or exclude. Note that the wildcard syntax is different between branches/tags and file paths.
func (o BuildDefinitionCiTriggerOverridePtrOutput) PathFilters() BuildDefinitionCiTriggerOverridePathFilterArrayOutput {
	return o.ApplyT(func(v *BuildDefinitionCiTriggerOverride) []BuildDefinitionCiTriggerOverridePathFilter {
		if v == nil {
			return nil
		}
		return v.PathFilters
	}).(BuildDefinitionCiTriggerOverridePathFilterArrayOutput)
}

// How often the external repository is polled. Defaults to `0`.
func (o BuildDefinitionCiTriggerOverridePtrOutput) PollingInterval() pulumi.IntPtrOutput {
	return o.ApplyT(func(v *BuildDefinitionCiTriggerOverride) *int {
		if v == nil {
			return nil
		}
		return v.PollingInterval
	}).(pulumi.IntPtrOutput)
}

// This is the ID of the polling job that polls the external repository. Once the build definition is saved/updated, this value is set.
func (o BuildDefinitionCiTriggerOverridePtrOutput) PollingJobId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildDefinitionCiTriggerOverride) *string {
		if v == nil {
			return nil
		}
		return v.PollingJobId
	}).(pulumi.StringPtrOutput)
}

type BuildDefinitionCiTriggerOverrideBranchFilter struct {
	// List of branch patterns to exclude.
	Excludes []string `pulumi:"excludes"`
	// List of branch patterns to include.
	Includes []string `pulumi:"includes"`
}

// BuildDefinitionCiTriggerOverrideBranchFilterInput is an input type that accepts BuildDefinitionCiTriggerOverrideBranchFilterArgs and BuildDefinitionCiTriggerOverrideBranchFilterOutput values.
// You can construct a concrete instance of `BuildDefinitionCiTriggerOverrideBranchFilterInput` via:
//
//          BuildDefinitionCiTriggerOverrideBranchFilterArgs{...}
type BuildDefinitionCiTriggerOverrideBranchFilterInput interface {
	pulumi.Input

	ToBuildDefinitionCiTriggerOverrideBranchFilterOutput() BuildDefinitionCiTriggerOverrideBranchFilterOutput
	ToBuildDefinitionCiTriggerOverrideBranchFilterOutputWithContext(context.Context) BuildDefinitionCiTriggerOverrideBranchFilterOutput
}

type BuildDefinitionCiTriggerOverrideBranchFilterArgs struct {
	// List of branch patterns to exclude.
	Excludes pulumi.StringArrayInput `pulumi:"excludes"`
	// List of branch patterns to include.
	Includes pulumi.StringArrayInput `pulumi:"includes"`
}

func (BuildDefinitionCiTriggerOverrideBranchFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildDefinitionCiTriggerOverrideBranchFilter)(nil)).Elem()
}

func (i BuildDefinitionCiTriggerOverrideBranchFilterArgs) ToBuildDefinitionCiTriggerOverrideBranchFilterOutput() BuildDefinitionCiTriggerOverrideBranchFilterOutput {
	return i.ToBuildDefinitionCiTriggerOverrideBranchFilterOutputWithContext(context.Background())
}

func (i BuildDefinitionCiTriggerOverrideBranchFilterArgs) ToBuildDefinitionCiTriggerOverrideBranchFilterOutputWithContext(ctx context.Context) BuildDefinitionCiTriggerOverrideBranchFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildDefinitionCiTriggerOverrideBranchFilterOutput)
}

// BuildDefinitionCiTriggerOverrideBranchFilterArrayInput is an input type that accepts BuildDefinitionCiTriggerOverrideBranchFilterArray and BuildDefinitionCiTriggerOverrideBranchFilterArrayOutput values.
// You can construct a concrete instance of `BuildDefinitionCiTriggerOverrideBranchFilterArrayInput` via:
//
//          BuildDefinitionCiTriggerOverrideBranchFilterArray{ BuildDefinitionCiTriggerOverrideBranchFilterArgs{...} }
type BuildDefinitionCiTriggerOverrideBranchFilterArrayInput interface {
	pulumi.Input

	ToBuildDefinitionCiTriggerOverrideBranchFilterArrayOutput() BuildDefinitionCiTriggerOverrideBranchFilterArrayOutput
	ToBuildDefinitionCiTriggerOverrideBranchFilterArrayOutputWithContext(context.Context) BuildDefinitionCiTriggerOverrideBranchFilterArrayOutput
}

type BuildDefinitionCiTriggerOverrideBranchFilterArray []BuildDefinitionCiTriggerOverrideBranchFilterInput

func (BuildDefinitionCiTriggerOverrideBranchFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildDefinitionCiTriggerOverrideBranchFilter)(nil)).Elem()
}

func (i BuildDefinitionCiTriggerOverrideBranchFilterArray) ToBuildDefinitionCiTriggerOverrideBranchFilterArrayOutput() BuildDefinitionCiTriggerOverrideBranchFilterArrayOutput {
	return i.ToBuildDefinitionCiTriggerOverrideBranchFilterArrayOutputWithContext(context.Background())
}

func (i BuildDefinitionCiTriggerOverrideBranchFilterArray) ToBuildDefinitionCiTriggerOverrideBranchFilterArrayOutputWithContext(ctx context.Context) BuildDefinitionCiTriggerOverrideBranchFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildDefinitionCiTriggerOverrideBranchFilterArrayOutput)
}

type BuildDefinitionCiTriggerOverrideBranchFilterOutput struct{ *pulumi.OutputState }

func (BuildDefinitionCiTriggerOverrideBranchFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildDefinitionCiTriggerOverrideBranchFilter)(nil)).Elem()
}

func (o BuildDefinitionCiTriggerOverrideBranchFilterOutput) ToBuildDefinitionCiTriggerOverrideBranchFilterOutput() BuildDefinitionCiTriggerOverrideBranchFilterOutput {
	return o
}

func (o BuildDefinitionCiTriggerOverrideBranchFilterOutput) ToBuildDefinitionCiTriggerOverrideBranchFilterOutputWithContext(ctx context.Context) BuildDefinitionCiTriggerOverrideBranchFilterOutput {
	return o
}

// List of branch patterns to exclude.
func (o BuildDefinitionCiTriggerOverrideBranchFilterOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildDefinitionCiTriggerOverrideBranchFilter) []string { return v.Excludes }).(pulumi.StringArrayOutput)
}

// List of branch patterns to include.
func (o BuildDefinitionCiTriggerOverrideBranchFilterOutput) Includes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildDefinitionCiTriggerOverrideBranchFilter) []string { return v.Includes }).(pulumi.StringArrayOutput)
}

type BuildDefinitionCiTriggerOverrideBranchFilterArrayOutput struct{ *pulumi.OutputState }

func (BuildDefinitionCiTriggerOverrideBranchFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildDefinitionCiTriggerOverrideBranchFilter)(nil)).Elem()
}

func (o BuildDefinitionCiTriggerOverrideBranchFilterArrayOutput) ToBuildDefinitionCiTriggerOverrideBranchFilterArrayOutput() BuildDefinitionCiTriggerOverrideBranchFilterArrayOutput {
	return o
}

func (o BuildDefinitionCiTriggerOverrideBranchFilterArrayOutput) ToBuildDefinitionCiTriggerOverrideBranchFilterArrayOutputWithContext(ctx context.Context) BuildDefinitionCiTriggerOverrideBranchFilterArrayOutput {
	return o
}

func (o BuildDefinitionCiTriggerOverrideBranchFilterArrayOutput) Index(i pulumi.IntInput) BuildDefinitionCiTriggerOverrideBranchFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildDefinitionCiTriggerOverrideBranchFilter {
		return vs[0].([]BuildDefinitionCiTriggerOverrideBranchFilter)[vs[1].(int)]
	}).(BuildDefinitionCiTriggerOverrideBranchFilterOutput)
}

type BuildDefinitionCiTriggerOverridePathFilter struct {
	// List of branch patterns to exclude.
	Excludes []string `pulumi:"excludes"`
	// List of branch patterns to include.
	Includes []string `pulumi:"includes"`
}

// BuildDefinitionCiTriggerOverridePathFilterInput is an input type that accepts BuildDefinitionCiTriggerOverridePathFilterArgs and BuildDefinitionCiTriggerOverridePathFilterOutput values.
// You can construct a concrete instance of `BuildDefinitionCiTriggerOverridePathFilterInput` via:
//
//          BuildDefinitionCiTriggerOverridePathFilterArgs{...}
type BuildDefinitionCiTriggerOverridePathFilterInput interface {
	pulumi.Input

	ToBuildDefinitionCiTriggerOverridePathFilterOutput() BuildDefinitionCiTriggerOverridePathFilterOutput
	ToBuildDefinitionCiTriggerOverridePathFilterOutputWithContext(context.Context) BuildDefinitionCiTriggerOverridePathFilterOutput
}

type BuildDefinitionCiTriggerOverridePathFilterArgs struct {
	// List of branch patterns to exclude.
	Excludes pulumi.StringArrayInput `pulumi:"excludes"`
	// List of branch patterns to include.
	Includes pulumi.StringArrayInput `pulumi:"includes"`
}

func (BuildDefinitionCiTriggerOverridePathFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildDefinitionCiTriggerOverridePathFilter)(nil)).Elem()
}

func (i BuildDefinitionCiTriggerOverridePathFilterArgs) ToBuildDefinitionCiTriggerOverridePathFilterOutput() BuildDefinitionCiTriggerOverridePathFilterOutput {
	return i.ToBuildDefinitionCiTriggerOverridePathFilterOutputWithContext(context.Background())
}

func (i BuildDefinitionCiTriggerOverridePathFilterArgs) ToBuildDefinitionCiTriggerOverridePathFilterOutputWithContext(ctx context.Context) BuildDefinitionCiTriggerOverridePathFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildDefinitionCiTriggerOverridePathFilterOutput)
}

// BuildDefinitionCiTriggerOverridePathFilterArrayInput is an input type that accepts BuildDefinitionCiTriggerOverridePathFilterArray and BuildDefinitionCiTriggerOverridePathFilterArrayOutput values.
// You can construct a concrete instance of `BuildDefinitionCiTriggerOverridePathFilterArrayInput` via:
//
//          BuildDefinitionCiTriggerOverridePathFilterArray{ BuildDefinitionCiTriggerOverridePathFilterArgs{...} }
type BuildDefinitionCiTriggerOverridePathFilterArrayInput interface {
	pulumi.Input

	ToBuildDefinitionCiTriggerOverridePathFilterArrayOutput() BuildDefinitionCiTriggerOverridePathFilterArrayOutput
	ToBuildDefinitionCiTriggerOverridePathFilterArrayOutputWithContext(context.Context) BuildDefinitionCiTriggerOverridePathFilterArrayOutput
}

type BuildDefinitionCiTriggerOverridePathFilterArray []BuildDefinitionCiTriggerOverridePathFilterInput

func (BuildDefinitionCiTriggerOverridePathFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildDefinitionCiTriggerOverridePathFilter)(nil)).Elem()
}

func (i BuildDefinitionCiTriggerOverridePathFilterArray) ToBuildDefinitionCiTriggerOverridePathFilterArrayOutput() BuildDefinitionCiTriggerOverridePathFilterArrayOutput {
	return i.ToBuildDefinitionCiTriggerOverridePathFilterArrayOutputWithContext(context.Background())
}

func (i BuildDefinitionCiTriggerOverridePathFilterArray) ToBuildDefinitionCiTriggerOverridePathFilterArrayOutputWithContext(ctx context.Context) BuildDefinitionCiTriggerOverridePathFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildDefinitionCiTriggerOverridePathFilterArrayOutput)
}

type BuildDefinitionCiTriggerOverridePathFilterOutput struct{ *pulumi.OutputState }

func (BuildDefinitionCiTriggerOverridePathFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildDefinitionCiTriggerOverridePathFilter)(nil)).Elem()
}

func (o BuildDefinitionCiTriggerOverridePathFilterOutput) ToBuildDefinitionCiTriggerOverridePathFilterOutput() BuildDefinitionCiTriggerOverridePathFilterOutput {
	return o
}

func (o BuildDefinitionCiTriggerOverridePathFilterOutput) ToBuildDefinitionCiTriggerOverridePathFilterOutputWithContext(ctx context.Context) BuildDefinitionCiTriggerOverridePathFilterOutput {
	return o
}

// List of branch patterns to exclude.
func (o BuildDefinitionCiTriggerOverridePathFilterOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildDefinitionCiTriggerOverridePathFilter) []string { return v.Excludes }).(pulumi.StringArrayOutput)
}

// List of branch patterns to include.
func (o BuildDefinitionCiTriggerOverridePathFilterOutput) Includes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildDefinitionCiTriggerOverridePathFilter) []string { return v.Includes }).(pulumi.StringArrayOutput)
}

type BuildDefinitionCiTriggerOverridePathFilterArrayOutput struct{ *pulumi.OutputState }

func (BuildDefinitionCiTriggerOverridePathFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildDefinitionCiTriggerOverridePathFilter)(nil)).Elem()
}

func (o BuildDefinitionCiTriggerOverridePathFilterArrayOutput) ToBuildDefinitionCiTriggerOverridePathFilterArrayOutput() BuildDefinitionCiTriggerOverridePathFilterArrayOutput {
	return o
}

func (o BuildDefinitionCiTriggerOverridePathFilterArrayOutput) ToBuildDefinitionCiTriggerOverridePathFilterArrayOutputWithContext(ctx context.Context) BuildDefinitionCiTriggerOverridePathFilterArrayOutput {
	return o
}

func (o BuildDefinitionCiTriggerOverridePathFilterArrayOutput) Index(i pulumi.IntInput) BuildDefinitionCiTriggerOverridePathFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildDefinitionCiTriggerOverridePathFilter {
		return vs[0].([]BuildDefinitionCiTriggerOverridePathFilter)[vs[1].(int)]
	}).(BuildDefinitionCiTriggerOverridePathFilterOutput)
}

type BuildDefinitionPullRequestTrigger struct {
	CommentRequired *string `pulumi:"commentRequired"`
	// Set permissions for Forked repositories.
	Forks         BuildDefinitionPullRequestTriggerForks `pulumi:"forks"`
	InitialBranch *string                                `pulumi:"initialBranch"`
	// Override the azure-pipeline file and use a this configuration for all builds.
	Override *BuildDefinitionPullRequestTriggerOverride `pulumi:"override"`
	// Use the azure-pipeline file for the build configuration. Defaults to `false`.
	UseYaml *bool `pulumi:"useYaml"`
}

// BuildDefinitionPullRequestTriggerInput is an input type that accepts BuildDefinitionPullRequestTriggerArgs and BuildDefinitionPullRequestTriggerOutput values.
// You can construct a concrete instance of `BuildDefinitionPullRequestTriggerInput` via:
//
//          BuildDefinitionPullRequestTriggerArgs{...}
type BuildDefinitionPullRequestTriggerInput interface {
	pulumi.Input

	ToBuildDefinitionPullRequestTriggerOutput() BuildDefinitionPullRequestTriggerOutput
	ToBuildDefinitionPullRequestTriggerOutputWithContext(context.Context) BuildDefinitionPullRequestTriggerOutput
}

type BuildDefinitionPullRequestTriggerArgs struct {
	CommentRequired pulumi.StringPtrInput `pulumi:"commentRequired"`
	// Set permissions for Forked repositories.
	Forks         BuildDefinitionPullRequestTriggerForksInput `pulumi:"forks"`
	InitialBranch pulumi.StringPtrInput                       `pulumi:"initialBranch"`
	// Override the azure-pipeline file and use a this configuration for all builds.
	Override BuildDefinitionPullRequestTriggerOverridePtrInput `pulumi:"override"`
	// Use the azure-pipeline file for the build configuration. Defaults to `false`.
	UseYaml pulumi.BoolPtrInput `pulumi:"useYaml"`
}

func (BuildDefinitionPullRequestTriggerArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildDefinitionPullRequestTrigger)(nil)).Elem()
}

func (i BuildDefinitionPullRequestTriggerArgs) ToBuildDefinitionPullRequestTriggerOutput() BuildDefinitionPullRequestTriggerOutput {
	return i.ToBuildDefinitionPullRequestTriggerOutputWithContext(context.Background())
}

func (i BuildDefinitionPullRequestTriggerArgs) ToBuildDefinitionPullRequestTriggerOutputWithContext(ctx context.Context) BuildDefinitionPullRequestTriggerOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildDefinitionPullRequestTriggerOutput)
}

func (i BuildDefinitionPullRequestTriggerArgs) ToBuildDefinitionPullRequestTriggerPtrOutput() BuildDefinitionPullRequestTriggerPtrOutput {
	return i.ToBuildDefinitionPullRequestTriggerPtrOutputWithContext(context.Background())
}

func (i BuildDefinitionPullRequestTriggerArgs) ToBuildDefinitionPullRequestTriggerPtrOutputWithContext(ctx context.Context) BuildDefinitionPullRequestTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildDefinitionPullRequestTriggerOutput).ToBuildDefinitionPullRequestTriggerPtrOutputWithContext(ctx)
}

// BuildDefinitionPullRequestTriggerPtrInput is an input type that accepts BuildDefinitionPullRequestTriggerArgs, BuildDefinitionPullRequestTriggerPtr and BuildDefinitionPullRequestTriggerPtrOutput values.
// You can construct a concrete instance of `BuildDefinitionPullRequestTriggerPtrInput` via:
//
//          BuildDefinitionPullRequestTriggerArgs{...}
//
//  or:
//
//          nil
type BuildDefinitionPullRequestTriggerPtrInput interface {
	pulumi.Input

	ToBuildDefinitionPullRequestTriggerPtrOutput() BuildDefinitionPullRequestTriggerPtrOutput
	ToBuildDefinitionPullRequestTriggerPtrOutputWithContext(context.Context) BuildDefinitionPullRequestTriggerPtrOutput
}

type buildDefinitionPullRequestTriggerPtrType BuildDefinitionPullRequestTriggerArgs

func BuildDefinitionPullRequestTriggerPtr(v *BuildDefinitionPullRequestTriggerArgs) BuildDefinitionPullRequestTriggerPtrInput {
	return (*buildDefinitionPullRequestTriggerPtrType)(v)
}

func (*buildDefinitionPullRequestTriggerPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildDefinitionPullRequestTrigger)(nil)).Elem()
}

func (i *buildDefinitionPullRequestTriggerPtrType) ToBuildDefinitionPullRequestTriggerPtrOutput() BuildDefinitionPullRequestTriggerPtrOutput {
	return i.ToBuildDefinitionPullRequestTriggerPtrOutputWithContext(context.Background())
}

func (i *buildDefinitionPullRequestTriggerPtrType) ToBuildDefinitionPullRequestTriggerPtrOutputWithContext(ctx context.Context) BuildDefinitionPullRequestTriggerPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildDefinitionPullRequestTriggerPtrOutput)
}

type BuildDefinitionPullRequestTriggerOutput struct{ *pulumi.OutputState }

func (BuildDefinitionPullRequestTriggerOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildDefinitionPullRequestTrigger)(nil)).Elem()
}

func (o BuildDefinitionPullRequestTriggerOutput) ToBuildDefinitionPullRequestTriggerOutput() BuildDefinitionPullRequestTriggerOutput {
	return o
}

func (o BuildDefinitionPullRequestTriggerOutput) ToBuildDefinitionPullRequestTriggerOutputWithContext(ctx context.Context) BuildDefinitionPullRequestTriggerOutput {
	return o
}

func (o BuildDefinitionPullRequestTriggerOutput) ToBuildDefinitionPullRequestTriggerPtrOutput() BuildDefinitionPullRequestTriggerPtrOutput {
	return o.ToBuildDefinitionPullRequestTriggerPtrOutputWithContext(context.Background())
}

func (o BuildDefinitionPullRequestTriggerOutput) ToBuildDefinitionPullRequestTriggerPtrOutputWithContext(ctx context.Context) BuildDefinitionPullRequestTriggerPtrOutput {
	return o.ApplyT(func(v BuildDefinitionPullRequestTrigger) *BuildDefinitionPullRequestTrigger {
		return &v
	}).(BuildDefinitionPullRequestTriggerPtrOutput)
}
func (o BuildDefinitionPullRequestTriggerOutput) CommentRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildDefinitionPullRequestTrigger) *string { return v.CommentRequired }).(pulumi.StringPtrOutput)
}

// Set permissions for Forked repositories.
func (o BuildDefinitionPullRequestTriggerOutput) Forks() BuildDefinitionPullRequestTriggerForksOutput {
	return o.ApplyT(func(v BuildDefinitionPullRequestTrigger) BuildDefinitionPullRequestTriggerForks { return v.Forks }).(BuildDefinitionPullRequestTriggerForksOutput)
}

func (o BuildDefinitionPullRequestTriggerOutput) InitialBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildDefinitionPullRequestTrigger) *string { return v.InitialBranch }).(pulumi.StringPtrOutput)
}

// Override the azure-pipeline file and use a this configuration for all builds.
func (o BuildDefinitionPullRequestTriggerOutput) Override() BuildDefinitionPullRequestTriggerOverridePtrOutput {
	return o.ApplyT(func(v BuildDefinitionPullRequestTrigger) *BuildDefinitionPullRequestTriggerOverride {
		return v.Override
	}).(BuildDefinitionPullRequestTriggerOverridePtrOutput)
}

// Use the azure-pipeline file for the build configuration. Defaults to `false`.
func (o BuildDefinitionPullRequestTriggerOutput) UseYaml() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildDefinitionPullRequestTrigger) *bool { return v.UseYaml }).(pulumi.BoolPtrOutput)
}

type BuildDefinitionPullRequestTriggerPtrOutput struct{ *pulumi.OutputState }

func (BuildDefinitionPullRequestTriggerPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildDefinitionPullRequestTrigger)(nil)).Elem()
}

func (o BuildDefinitionPullRequestTriggerPtrOutput) ToBuildDefinitionPullRequestTriggerPtrOutput() BuildDefinitionPullRequestTriggerPtrOutput {
	return o
}

func (o BuildDefinitionPullRequestTriggerPtrOutput) ToBuildDefinitionPullRequestTriggerPtrOutputWithContext(ctx context.Context) BuildDefinitionPullRequestTriggerPtrOutput {
	return o
}

func (o BuildDefinitionPullRequestTriggerPtrOutput) Elem() BuildDefinitionPullRequestTriggerOutput {
	return o.ApplyT(func(v *BuildDefinitionPullRequestTrigger) BuildDefinitionPullRequestTrigger { return *v }).(BuildDefinitionPullRequestTriggerOutput)
}

func (o BuildDefinitionPullRequestTriggerPtrOutput) CommentRequired() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildDefinitionPullRequestTrigger) *string {
		if v == nil {
			return nil
		}
		return v.CommentRequired
	}).(pulumi.StringPtrOutput)
}

// Set permissions for Forked repositories.
func (o BuildDefinitionPullRequestTriggerPtrOutput) Forks() BuildDefinitionPullRequestTriggerForksPtrOutput {
	return o.ApplyT(func(v *BuildDefinitionPullRequestTrigger) *BuildDefinitionPullRequestTriggerForks {
		if v == nil {
			return nil
		}
		return &v.Forks
	}).(BuildDefinitionPullRequestTriggerForksPtrOutput)
}

func (o BuildDefinitionPullRequestTriggerPtrOutput) InitialBranch() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildDefinitionPullRequestTrigger) *string {
		if v == nil {
			return nil
		}
		return v.InitialBranch
	}).(pulumi.StringPtrOutput)
}

// Override the azure-pipeline file and use a this configuration for all builds.
func (o BuildDefinitionPullRequestTriggerPtrOutput) Override() BuildDefinitionPullRequestTriggerOverridePtrOutput {
	return o.ApplyT(func(v *BuildDefinitionPullRequestTrigger) *BuildDefinitionPullRequestTriggerOverride {
		if v == nil {
			return nil
		}
		return v.Override
	}).(BuildDefinitionPullRequestTriggerOverridePtrOutput)
}

// Use the azure-pipeline file for the build configuration. Defaults to `false`.
func (o BuildDefinitionPullRequestTriggerPtrOutput) UseYaml() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildDefinitionPullRequestTrigger) *bool {
		if v == nil {
			return nil
		}
		return v.UseYaml
	}).(pulumi.BoolPtrOutput)
}

type BuildDefinitionPullRequestTriggerForks struct {
	// Build pull requests form forms of this repository.
	Enabled bool `pulumi:"enabled"`
	// Make secrets available to builds of forks.
	ShareSecrets bool `pulumi:"shareSecrets"`
}

// BuildDefinitionPullRequestTriggerForksInput is an input type that accepts BuildDefinitionPullRequestTriggerForksArgs and BuildDefinitionPullRequestTriggerForksOutput values.
// You can construct a concrete instance of `BuildDefinitionPullRequestTriggerForksInput` via:
//
//          BuildDefinitionPullRequestTriggerForksArgs{...}
type BuildDefinitionPullRequestTriggerForksInput interface {
	pulumi.Input

	ToBuildDefinitionPullRequestTriggerForksOutput() BuildDefinitionPullRequestTriggerForksOutput
	ToBuildDefinitionPullRequestTriggerForksOutputWithContext(context.Context) BuildDefinitionPullRequestTriggerForksOutput
}

type BuildDefinitionPullRequestTriggerForksArgs struct {
	// Build pull requests form forms of this repository.
	Enabled pulumi.BoolInput `pulumi:"enabled"`
	// Make secrets available to builds of forks.
	ShareSecrets pulumi.BoolInput `pulumi:"shareSecrets"`
}

func (BuildDefinitionPullRequestTriggerForksArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildDefinitionPullRequestTriggerForks)(nil)).Elem()
}

func (i BuildDefinitionPullRequestTriggerForksArgs) ToBuildDefinitionPullRequestTriggerForksOutput() BuildDefinitionPullRequestTriggerForksOutput {
	return i.ToBuildDefinitionPullRequestTriggerForksOutputWithContext(context.Background())
}

func (i BuildDefinitionPullRequestTriggerForksArgs) ToBuildDefinitionPullRequestTriggerForksOutputWithContext(ctx context.Context) BuildDefinitionPullRequestTriggerForksOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildDefinitionPullRequestTriggerForksOutput)
}

func (i BuildDefinitionPullRequestTriggerForksArgs) ToBuildDefinitionPullRequestTriggerForksPtrOutput() BuildDefinitionPullRequestTriggerForksPtrOutput {
	return i.ToBuildDefinitionPullRequestTriggerForksPtrOutputWithContext(context.Background())
}

func (i BuildDefinitionPullRequestTriggerForksArgs) ToBuildDefinitionPullRequestTriggerForksPtrOutputWithContext(ctx context.Context) BuildDefinitionPullRequestTriggerForksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildDefinitionPullRequestTriggerForksOutput).ToBuildDefinitionPullRequestTriggerForksPtrOutputWithContext(ctx)
}

// BuildDefinitionPullRequestTriggerForksPtrInput is an input type that accepts BuildDefinitionPullRequestTriggerForksArgs, BuildDefinitionPullRequestTriggerForksPtr and BuildDefinitionPullRequestTriggerForksPtrOutput values.
// You can construct a concrete instance of `BuildDefinitionPullRequestTriggerForksPtrInput` via:
//
//          BuildDefinitionPullRequestTriggerForksArgs{...}
//
//  or:
//
//          nil
type BuildDefinitionPullRequestTriggerForksPtrInput interface {
	pulumi.Input

	ToBuildDefinitionPullRequestTriggerForksPtrOutput() BuildDefinitionPullRequestTriggerForksPtrOutput
	ToBuildDefinitionPullRequestTriggerForksPtrOutputWithContext(context.Context) BuildDefinitionPullRequestTriggerForksPtrOutput
}

type buildDefinitionPullRequestTriggerForksPtrType BuildDefinitionPullRequestTriggerForksArgs

func BuildDefinitionPullRequestTriggerForksPtr(v *BuildDefinitionPullRequestTriggerForksArgs) BuildDefinitionPullRequestTriggerForksPtrInput {
	return (*buildDefinitionPullRequestTriggerForksPtrType)(v)
}

func (*buildDefinitionPullRequestTriggerForksPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildDefinitionPullRequestTriggerForks)(nil)).Elem()
}

func (i *buildDefinitionPullRequestTriggerForksPtrType) ToBuildDefinitionPullRequestTriggerForksPtrOutput() BuildDefinitionPullRequestTriggerForksPtrOutput {
	return i.ToBuildDefinitionPullRequestTriggerForksPtrOutputWithContext(context.Background())
}

func (i *buildDefinitionPullRequestTriggerForksPtrType) ToBuildDefinitionPullRequestTriggerForksPtrOutputWithContext(ctx context.Context) BuildDefinitionPullRequestTriggerForksPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildDefinitionPullRequestTriggerForksPtrOutput)
}

type BuildDefinitionPullRequestTriggerForksOutput struct{ *pulumi.OutputState }

func (BuildDefinitionPullRequestTriggerForksOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildDefinitionPullRequestTriggerForks)(nil)).Elem()
}

func (o BuildDefinitionPullRequestTriggerForksOutput) ToBuildDefinitionPullRequestTriggerForksOutput() BuildDefinitionPullRequestTriggerForksOutput {
	return o
}

func (o BuildDefinitionPullRequestTriggerForksOutput) ToBuildDefinitionPullRequestTriggerForksOutputWithContext(ctx context.Context) BuildDefinitionPullRequestTriggerForksOutput {
	return o
}

func (o BuildDefinitionPullRequestTriggerForksOutput) ToBuildDefinitionPullRequestTriggerForksPtrOutput() BuildDefinitionPullRequestTriggerForksPtrOutput {
	return o.ToBuildDefinitionPullRequestTriggerForksPtrOutputWithContext(context.Background())
}

func (o BuildDefinitionPullRequestTriggerForksOutput) ToBuildDefinitionPullRequestTriggerForksPtrOutputWithContext(ctx context.Context) BuildDefinitionPullRequestTriggerForksPtrOutput {
	return o.ApplyT(func(v BuildDefinitionPullRequestTriggerForks) *BuildDefinitionPullRequestTriggerForks {
		return &v
	}).(BuildDefinitionPullRequestTriggerForksPtrOutput)
}

// Build pull requests form forms of this repository.
func (o BuildDefinitionPullRequestTriggerForksOutput) Enabled() pulumi.BoolOutput {
	return o.ApplyT(func(v BuildDefinitionPullRequestTriggerForks) bool { return v.Enabled }).(pulumi.BoolOutput)
}

// Make secrets available to builds of forks.
func (o BuildDefinitionPullRequestTriggerForksOutput) ShareSecrets() pulumi.BoolOutput {
	return o.ApplyT(func(v BuildDefinitionPullRequestTriggerForks) bool { return v.ShareSecrets }).(pulumi.BoolOutput)
}

type BuildDefinitionPullRequestTriggerForksPtrOutput struct{ *pulumi.OutputState }

func (BuildDefinitionPullRequestTriggerForksPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildDefinitionPullRequestTriggerForks)(nil)).Elem()
}

func (o BuildDefinitionPullRequestTriggerForksPtrOutput) ToBuildDefinitionPullRequestTriggerForksPtrOutput() BuildDefinitionPullRequestTriggerForksPtrOutput {
	return o
}

func (o BuildDefinitionPullRequestTriggerForksPtrOutput) ToBuildDefinitionPullRequestTriggerForksPtrOutputWithContext(ctx context.Context) BuildDefinitionPullRequestTriggerForksPtrOutput {
	return o
}

func (o BuildDefinitionPullRequestTriggerForksPtrOutput) Elem() BuildDefinitionPullRequestTriggerForksOutput {
	return o.ApplyT(func(v *BuildDefinitionPullRequestTriggerForks) BuildDefinitionPullRequestTriggerForks { return *v }).(BuildDefinitionPullRequestTriggerForksOutput)
}

// Build pull requests form forms of this repository.
func (o BuildDefinitionPullRequestTriggerForksPtrOutput) Enabled() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildDefinitionPullRequestTriggerForks) *bool {
		if v == nil {
			return nil
		}
		return &v.Enabled
	}).(pulumi.BoolPtrOutput)
}

// Make secrets available to builds of forks.
func (o BuildDefinitionPullRequestTriggerForksPtrOutput) ShareSecrets() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildDefinitionPullRequestTriggerForks) *bool {
		if v == nil {
			return nil
		}
		return &v.ShareSecrets
	}).(pulumi.BoolPtrOutput)
}

type BuildDefinitionPullRequestTriggerOverride struct {
	// . Defaults to `true`.
	AutoCancel *bool `pulumi:"autoCancel"`
	// The branches to include and exclude from the trigger.
	BranchFilters []BuildDefinitionPullRequestTriggerOverrideBranchFilter `pulumi:"branchFilters"`
	// Specify file paths to include or exclude. Note that the wildcard syntax is different between branches/tags and file paths.
	PathFilters []BuildDefinitionPullRequestTriggerOverridePathFilter `pulumi:"pathFilters"`
}

// BuildDefinitionPullRequestTriggerOverrideInput is an input type that accepts BuildDefinitionPullRequestTriggerOverrideArgs and BuildDefinitionPullRequestTriggerOverrideOutput values.
// You can construct a concrete instance of `BuildDefinitionPullRequestTriggerOverrideInput` via:
//
//          BuildDefinitionPullRequestTriggerOverrideArgs{...}
type BuildDefinitionPullRequestTriggerOverrideInput interface {
	pulumi.Input

	ToBuildDefinitionPullRequestTriggerOverrideOutput() BuildDefinitionPullRequestTriggerOverrideOutput
	ToBuildDefinitionPullRequestTriggerOverrideOutputWithContext(context.Context) BuildDefinitionPullRequestTriggerOverrideOutput
}

type BuildDefinitionPullRequestTriggerOverrideArgs struct {
	// . Defaults to `true`.
	AutoCancel pulumi.BoolPtrInput `pulumi:"autoCancel"`
	// The branches to include and exclude from the trigger.
	BranchFilters BuildDefinitionPullRequestTriggerOverrideBranchFilterArrayInput `pulumi:"branchFilters"`
	// Specify file paths to include or exclude. Note that the wildcard syntax is different between branches/tags and file paths.
	PathFilters BuildDefinitionPullRequestTriggerOverridePathFilterArrayInput `pulumi:"pathFilters"`
}

func (BuildDefinitionPullRequestTriggerOverrideArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildDefinitionPullRequestTriggerOverride)(nil)).Elem()
}

func (i BuildDefinitionPullRequestTriggerOverrideArgs) ToBuildDefinitionPullRequestTriggerOverrideOutput() BuildDefinitionPullRequestTriggerOverrideOutput {
	return i.ToBuildDefinitionPullRequestTriggerOverrideOutputWithContext(context.Background())
}

func (i BuildDefinitionPullRequestTriggerOverrideArgs) ToBuildDefinitionPullRequestTriggerOverrideOutputWithContext(ctx context.Context) BuildDefinitionPullRequestTriggerOverrideOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildDefinitionPullRequestTriggerOverrideOutput)
}

func (i BuildDefinitionPullRequestTriggerOverrideArgs) ToBuildDefinitionPullRequestTriggerOverridePtrOutput() BuildDefinitionPullRequestTriggerOverridePtrOutput {
	return i.ToBuildDefinitionPullRequestTriggerOverridePtrOutputWithContext(context.Background())
}

func (i BuildDefinitionPullRequestTriggerOverrideArgs) ToBuildDefinitionPullRequestTriggerOverridePtrOutputWithContext(ctx context.Context) BuildDefinitionPullRequestTriggerOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildDefinitionPullRequestTriggerOverrideOutput).ToBuildDefinitionPullRequestTriggerOverridePtrOutputWithContext(ctx)
}

// BuildDefinitionPullRequestTriggerOverridePtrInput is an input type that accepts BuildDefinitionPullRequestTriggerOverrideArgs, BuildDefinitionPullRequestTriggerOverridePtr and BuildDefinitionPullRequestTriggerOverridePtrOutput values.
// You can construct a concrete instance of `BuildDefinitionPullRequestTriggerOverridePtrInput` via:
//
//          BuildDefinitionPullRequestTriggerOverrideArgs{...}
//
//  or:
//
//          nil
type BuildDefinitionPullRequestTriggerOverridePtrInput interface {
	pulumi.Input

	ToBuildDefinitionPullRequestTriggerOverridePtrOutput() BuildDefinitionPullRequestTriggerOverridePtrOutput
	ToBuildDefinitionPullRequestTriggerOverridePtrOutputWithContext(context.Context) BuildDefinitionPullRequestTriggerOverridePtrOutput
}

type buildDefinitionPullRequestTriggerOverridePtrType BuildDefinitionPullRequestTriggerOverrideArgs

func BuildDefinitionPullRequestTriggerOverridePtr(v *BuildDefinitionPullRequestTriggerOverrideArgs) BuildDefinitionPullRequestTriggerOverridePtrInput {
	return (*buildDefinitionPullRequestTriggerOverridePtrType)(v)
}

func (*buildDefinitionPullRequestTriggerOverridePtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildDefinitionPullRequestTriggerOverride)(nil)).Elem()
}

func (i *buildDefinitionPullRequestTriggerOverridePtrType) ToBuildDefinitionPullRequestTriggerOverridePtrOutput() BuildDefinitionPullRequestTriggerOverridePtrOutput {
	return i.ToBuildDefinitionPullRequestTriggerOverridePtrOutputWithContext(context.Background())
}

func (i *buildDefinitionPullRequestTriggerOverridePtrType) ToBuildDefinitionPullRequestTriggerOverridePtrOutputWithContext(ctx context.Context) BuildDefinitionPullRequestTriggerOverridePtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildDefinitionPullRequestTriggerOverridePtrOutput)
}

type BuildDefinitionPullRequestTriggerOverrideOutput struct{ *pulumi.OutputState }

func (BuildDefinitionPullRequestTriggerOverrideOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildDefinitionPullRequestTriggerOverride)(nil)).Elem()
}

func (o BuildDefinitionPullRequestTriggerOverrideOutput) ToBuildDefinitionPullRequestTriggerOverrideOutput() BuildDefinitionPullRequestTriggerOverrideOutput {
	return o
}

func (o BuildDefinitionPullRequestTriggerOverrideOutput) ToBuildDefinitionPullRequestTriggerOverrideOutputWithContext(ctx context.Context) BuildDefinitionPullRequestTriggerOverrideOutput {
	return o
}

func (o BuildDefinitionPullRequestTriggerOverrideOutput) ToBuildDefinitionPullRequestTriggerOverridePtrOutput() BuildDefinitionPullRequestTriggerOverridePtrOutput {
	return o.ToBuildDefinitionPullRequestTriggerOverridePtrOutputWithContext(context.Background())
}

func (o BuildDefinitionPullRequestTriggerOverrideOutput) ToBuildDefinitionPullRequestTriggerOverridePtrOutputWithContext(ctx context.Context) BuildDefinitionPullRequestTriggerOverridePtrOutput {
	return o.ApplyT(func(v BuildDefinitionPullRequestTriggerOverride) *BuildDefinitionPullRequestTriggerOverride {
		return &v
	}).(BuildDefinitionPullRequestTriggerOverridePtrOutput)
}

// . Defaults to `true`.
func (o BuildDefinitionPullRequestTriggerOverrideOutput) AutoCancel() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildDefinitionPullRequestTriggerOverride) *bool { return v.AutoCancel }).(pulumi.BoolPtrOutput)
}

// The branches to include and exclude from the trigger.
func (o BuildDefinitionPullRequestTriggerOverrideOutput) BranchFilters() BuildDefinitionPullRequestTriggerOverrideBranchFilterArrayOutput {
	return o.ApplyT(func(v BuildDefinitionPullRequestTriggerOverride) []BuildDefinitionPullRequestTriggerOverrideBranchFilter {
		return v.BranchFilters
	}).(BuildDefinitionPullRequestTriggerOverrideBranchFilterArrayOutput)
}

// Specify file paths to include or exclude. Note that the wildcard syntax is different between branches/tags and file paths.
func (o BuildDefinitionPullRequestTriggerOverrideOutput) PathFilters() BuildDefinitionPullRequestTriggerOverridePathFilterArrayOutput {
	return o.ApplyT(func(v BuildDefinitionPullRequestTriggerOverride) []BuildDefinitionPullRequestTriggerOverridePathFilter {
		return v.PathFilters
	}).(BuildDefinitionPullRequestTriggerOverridePathFilterArrayOutput)
}

type BuildDefinitionPullRequestTriggerOverridePtrOutput struct{ *pulumi.OutputState }

func (BuildDefinitionPullRequestTriggerOverridePtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildDefinitionPullRequestTriggerOverride)(nil)).Elem()
}

func (o BuildDefinitionPullRequestTriggerOverridePtrOutput) ToBuildDefinitionPullRequestTriggerOverridePtrOutput() BuildDefinitionPullRequestTriggerOverridePtrOutput {
	return o
}

func (o BuildDefinitionPullRequestTriggerOverridePtrOutput) ToBuildDefinitionPullRequestTriggerOverridePtrOutputWithContext(ctx context.Context) BuildDefinitionPullRequestTriggerOverridePtrOutput {
	return o
}

func (o BuildDefinitionPullRequestTriggerOverridePtrOutput) Elem() BuildDefinitionPullRequestTriggerOverrideOutput {
	return o.ApplyT(func(v *BuildDefinitionPullRequestTriggerOverride) BuildDefinitionPullRequestTriggerOverride {
		return *v
	}).(BuildDefinitionPullRequestTriggerOverrideOutput)
}

// . Defaults to `true`.
func (o BuildDefinitionPullRequestTriggerOverridePtrOutput) AutoCancel() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v *BuildDefinitionPullRequestTriggerOverride) *bool {
		if v == nil {
			return nil
		}
		return v.AutoCancel
	}).(pulumi.BoolPtrOutput)
}

// The branches to include and exclude from the trigger.
func (o BuildDefinitionPullRequestTriggerOverridePtrOutput) BranchFilters() BuildDefinitionPullRequestTriggerOverrideBranchFilterArrayOutput {
	return o.ApplyT(func(v *BuildDefinitionPullRequestTriggerOverride) []BuildDefinitionPullRequestTriggerOverrideBranchFilter {
		if v == nil {
			return nil
		}
		return v.BranchFilters
	}).(BuildDefinitionPullRequestTriggerOverrideBranchFilterArrayOutput)
}

// Specify file paths to include or exclude. Note that the wildcard syntax is different between branches/tags and file paths.
func (o BuildDefinitionPullRequestTriggerOverridePtrOutput) PathFilters() BuildDefinitionPullRequestTriggerOverridePathFilterArrayOutput {
	return o.ApplyT(func(v *BuildDefinitionPullRequestTriggerOverride) []BuildDefinitionPullRequestTriggerOverridePathFilter {
		if v == nil {
			return nil
		}
		return v.PathFilters
	}).(BuildDefinitionPullRequestTriggerOverridePathFilterArrayOutput)
}

type BuildDefinitionPullRequestTriggerOverrideBranchFilter struct {
	// List of branch patterns to exclude.
	Excludes []string `pulumi:"excludes"`
	// List of branch patterns to include.
	Includes []string `pulumi:"includes"`
}

// BuildDefinitionPullRequestTriggerOverrideBranchFilterInput is an input type that accepts BuildDefinitionPullRequestTriggerOverrideBranchFilterArgs and BuildDefinitionPullRequestTriggerOverrideBranchFilterOutput values.
// You can construct a concrete instance of `BuildDefinitionPullRequestTriggerOverrideBranchFilterInput` via:
//
//          BuildDefinitionPullRequestTriggerOverrideBranchFilterArgs{...}
type BuildDefinitionPullRequestTriggerOverrideBranchFilterInput interface {
	pulumi.Input

	ToBuildDefinitionPullRequestTriggerOverrideBranchFilterOutput() BuildDefinitionPullRequestTriggerOverrideBranchFilterOutput
	ToBuildDefinitionPullRequestTriggerOverrideBranchFilterOutputWithContext(context.Context) BuildDefinitionPullRequestTriggerOverrideBranchFilterOutput
}

type BuildDefinitionPullRequestTriggerOverrideBranchFilterArgs struct {
	// List of branch patterns to exclude.
	Excludes pulumi.StringArrayInput `pulumi:"excludes"`
	// List of branch patterns to include.
	Includes pulumi.StringArrayInput `pulumi:"includes"`
}

func (BuildDefinitionPullRequestTriggerOverrideBranchFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildDefinitionPullRequestTriggerOverrideBranchFilter)(nil)).Elem()
}

func (i BuildDefinitionPullRequestTriggerOverrideBranchFilterArgs) ToBuildDefinitionPullRequestTriggerOverrideBranchFilterOutput() BuildDefinitionPullRequestTriggerOverrideBranchFilterOutput {
	return i.ToBuildDefinitionPullRequestTriggerOverrideBranchFilterOutputWithContext(context.Background())
}

func (i BuildDefinitionPullRequestTriggerOverrideBranchFilterArgs) ToBuildDefinitionPullRequestTriggerOverrideBranchFilterOutputWithContext(ctx context.Context) BuildDefinitionPullRequestTriggerOverrideBranchFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildDefinitionPullRequestTriggerOverrideBranchFilterOutput)
}

// BuildDefinitionPullRequestTriggerOverrideBranchFilterArrayInput is an input type that accepts BuildDefinitionPullRequestTriggerOverrideBranchFilterArray and BuildDefinitionPullRequestTriggerOverrideBranchFilterArrayOutput values.
// You can construct a concrete instance of `BuildDefinitionPullRequestTriggerOverrideBranchFilterArrayInput` via:
//
//          BuildDefinitionPullRequestTriggerOverrideBranchFilterArray{ BuildDefinitionPullRequestTriggerOverrideBranchFilterArgs{...} }
type BuildDefinitionPullRequestTriggerOverrideBranchFilterArrayInput interface {
	pulumi.Input

	ToBuildDefinitionPullRequestTriggerOverrideBranchFilterArrayOutput() BuildDefinitionPullRequestTriggerOverrideBranchFilterArrayOutput
	ToBuildDefinitionPullRequestTriggerOverrideBranchFilterArrayOutputWithContext(context.Context) BuildDefinitionPullRequestTriggerOverrideBranchFilterArrayOutput
}

type BuildDefinitionPullRequestTriggerOverrideBranchFilterArray []BuildDefinitionPullRequestTriggerOverrideBranchFilterInput

func (BuildDefinitionPullRequestTriggerOverrideBranchFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildDefinitionPullRequestTriggerOverrideBranchFilter)(nil)).Elem()
}

func (i BuildDefinitionPullRequestTriggerOverrideBranchFilterArray) ToBuildDefinitionPullRequestTriggerOverrideBranchFilterArrayOutput() BuildDefinitionPullRequestTriggerOverrideBranchFilterArrayOutput {
	return i.ToBuildDefinitionPullRequestTriggerOverrideBranchFilterArrayOutputWithContext(context.Background())
}

func (i BuildDefinitionPullRequestTriggerOverrideBranchFilterArray) ToBuildDefinitionPullRequestTriggerOverrideBranchFilterArrayOutputWithContext(ctx context.Context) BuildDefinitionPullRequestTriggerOverrideBranchFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildDefinitionPullRequestTriggerOverrideBranchFilterArrayOutput)
}

type BuildDefinitionPullRequestTriggerOverrideBranchFilterOutput struct{ *pulumi.OutputState }

func (BuildDefinitionPullRequestTriggerOverrideBranchFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildDefinitionPullRequestTriggerOverrideBranchFilter)(nil)).Elem()
}

func (o BuildDefinitionPullRequestTriggerOverrideBranchFilterOutput) ToBuildDefinitionPullRequestTriggerOverrideBranchFilterOutput() BuildDefinitionPullRequestTriggerOverrideBranchFilterOutput {
	return o
}

func (o BuildDefinitionPullRequestTriggerOverrideBranchFilterOutput) ToBuildDefinitionPullRequestTriggerOverrideBranchFilterOutputWithContext(ctx context.Context) BuildDefinitionPullRequestTriggerOverrideBranchFilterOutput {
	return o
}

// List of branch patterns to exclude.
func (o BuildDefinitionPullRequestTriggerOverrideBranchFilterOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildDefinitionPullRequestTriggerOverrideBranchFilter) []string { return v.Excludes }).(pulumi.StringArrayOutput)
}

// List of branch patterns to include.
func (o BuildDefinitionPullRequestTriggerOverrideBranchFilterOutput) Includes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildDefinitionPullRequestTriggerOverrideBranchFilter) []string { return v.Includes }).(pulumi.StringArrayOutput)
}

type BuildDefinitionPullRequestTriggerOverrideBranchFilterArrayOutput struct{ *pulumi.OutputState }

func (BuildDefinitionPullRequestTriggerOverrideBranchFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildDefinitionPullRequestTriggerOverrideBranchFilter)(nil)).Elem()
}

func (o BuildDefinitionPullRequestTriggerOverrideBranchFilterArrayOutput) ToBuildDefinitionPullRequestTriggerOverrideBranchFilterArrayOutput() BuildDefinitionPullRequestTriggerOverrideBranchFilterArrayOutput {
	return o
}

func (o BuildDefinitionPullRequestTriggerOverrideBranchFilterArrayOutput) ToBuildDefinitionPullRequestTriggerOverrideBranchFilterArrayOutputWithContext(ctx context.Context) BuildDefinitionPullRequestTriggerOverrideBranchFilterArrayOutput {
	return o
}

func (o BuildDefinitionPullRequestTriggerOverrideBranchFilterArrayOutput) Index(i pulumi.IntInput) BuildDefinitionPullRequestTriggerOverrideBranchFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildDefinitionPullRequestTriggerOverrideBranchFilter {
		return vs[0].([]BuildDefinitionPullRequestTriggerOverrideBranchFilter)[vs[1].(int)]
	}).(BuildDefinitionPullRequestTriggerOverrideBranchFilterOutput)
}

type BuildDefinitionPullRequestTriggerOverridePathFilter struct {
	// List of branch patterns to exclude.
	Excludes []string `pulumi:"excludes"`
	// List of branch patterns to include.
	Includes []string `pulumi:"includes"`
}

// BuildDefinitionPullRequestTriggerOverridePathFilterInput is an input type that accepts BuildDefinitionPullRequestTriggerOverridePathFilterArgs and BuildDefinitionPullRequestTriggerOverridePathFilterOutput values.
// You can construct a concrete instance of `BuildDefinitionPullRequestTriggerOverridePathFilterInput` via:
//
//          BuildDefinitionPullRequestTriggerOverridePathFilterArgs{...}
type BuildDefinitionPullRequestTriggerOverridePathFilterInput interface {
	pulumi.Input

	ToBuildDefinitionPullRequestTriggerOverridePathFilterOutput() BuildDefinitionPullRequestTriggerOverridePathFilterOutput
	ToBuildDefinitionPullRequestTriggerOverridePathFilterOutputWithContext(context.Context) BuildDefinitionPullRequestTriggerOverridePathFilterOutput
}

type BuildDefinitionPullRequestTriggerOverridePathFilterArgs struct {
	// List of branch patterns to exclude.
	Excludes pulumi.StringArrayInput `pulumi:"excludes"`
	// List of branch patterns to include.
	Includes pulumi.StringArrayInput `pulumi:"includes"`
}

func (BuildDefinitionPullRequestTriggerOverridePathFilterArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildDefinitionPullRequestTriggerOverridePathFilter)(nil)).Elem()
}

func (i BuildDefinitionPullRequestTriggerOverridePathFilterArgs) ToBuildDefinitionPullRequestTriggerOverridePathFilterOutput() BuildDefinitionPullRequestTriggerOverridePathFilterOutput {
	return i.ToBuildDefinitionPullRequestTriggerOverridePathFilterOutputWithContext(context.Background())
}

func (i BuildDefinitionPullRequestTriggerOverridePathFilterArgs) ToBuildDefinitionPullRequestTriggerOverridePathFilterOutputWithContext(ctx context.Context) BuildDefinitionPullRequestTriggerOverridePathFilterOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildDefinitionPullRequestTriggerOverridePathFilterOutput)
}

// BuildDefinitionPullRequestTriggerOverridePathFilterArrayInput is an input type that accepts BuildDefinitionPullRequestTriggerOverridePathFilterArray and BuildDefinitionPullRequestTriggerOverridePathFilterArrayOutput values.
// You can construct a concrete instance of `BuildDefinitionPullRequestTriggerOverridePathFilterArrayInput` via:
//
//          BuildDefinitionPullRequestTriggerOverridePathFilterArray{ BuildDefinitionPullRequestTriggerOverridePathFilterArgs{...} }
type BuildDefinitionPullRequestTriggerOverridePathFilterArrayInput interface {
	pulumi.Input

	ToBuildDefinitionPullRequestTriggerOverridePathFilterArrayOutput() BuildDefinitionPullRequestTriggerOverridePathFilterArrayOutput
	ToBuildDefinitionPullRequestTriggerOverridePathFilterArrayOutputWithContext(context.Context) BuildDefinitionPullRequestTriggerOverridePathFilterArrayOutput
}

type BuildDefinitionPullRequestTriggerOverridePathFilterArray []BuildDefinitionPullRequestTriggerOverridePathFilterInput

func (BuildDefinitionPullRequestTriggerOverridePathFilterArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildDefinitionPullRequestTriggerOverridePathFilter)(nil)).Elem()
}

func (i BuildDefinitionPullRequestTriggerOverridePathFilterArray) ToBuildDefinitionPullRequestTriggerOverridePathFilterArrayOutput() BuildDefinitionPullRequestTriggerOverridePathFilterArrayOutput {
	return i.ToBuildDefinitionPullRequestTriggerOverridePathFilterArrayOutputWithContext(context.Background())
}

func (i BuildDefinitionPullRequestTriggerOverridePathFilterArray) ToBuildDefinitionPullRequestTriggerOverridePathFilterArrayOutputWithContext(ctx context.Context) BuildDefinitionPullRequestTriggerOverridePathFilterArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildDefinitionPullRequestTriggerOverridePathFilterArrayOutput)
}

type BuildDefinitionPullRequestTriggerOverridePathFilterOutput struct{ *pulumi.OutputState }

func (BuildDefinitionPullRequestTriggerOverridePathFilterOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildDefinitionPullRequestTriggerOverridePathFilter)(nil)).Elem()
}

func (o BuildDefinitionPullRequestTriggerOverridePathFilterOutput) ToBuildDefinitionPullRequestTriggerOverridePathFilterOutput() BuildDefinitionPullRequestTriggerOverridePathFilterOutput {
	return o
}

func (o BuildDefinitionPullRequestTriggerOverridePathFilterOutput) ToBuildDefinitionPullRequestTriggerOverridePathFilterOutputWithContext(ctx context.Context) BuildDefinitionPullRequestTriggerOverridePathFilterOutput {
	return o
}

// List of branch patterns to exclude.
func (o BuildDefinitionPullRequestTriggerOverridePathFilterOutput) Excludes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildDefinitionPullRequestTriggerOverridePathFilter) []string { return v.Excludes }).(pulumi.StringArrayOutput)
}

// List of branch patterns to include.
func (o BuildDefinitionPullRequestTriggerOverridePathFilterOutput) Includes() pulumi.StringArrayOutput {
	return o.ApplyT(func(v BuildDefinitionPullRequestTriggerOverridePathFilter) []string { return v.Includes }).(pulumi.StringArrayOutput)
}

type BuildDefinitionPullRequestTriggerOverridePathFilterArrayOutput struct{ *pulumi.OutputState }

func (BuildDefinitionPullRequestTriggerOverridePathFilterArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildDefinitionPullRequestTriggerOverridePathFilter)(nil)).Elem()
}

func (o BuildDefinitionPullRequestTriggerOverridePathFilterArrayOutput) ToBuildDefinitionPullRequestTriggerOverridePathFilterArrayOutput() BuildDefinitionPullRequestTriggerOverridePathFilterArrayOutput {
	return o
}

func (o BuildDefinitionPullRequestTriggerOverridePathFilterArrayOutput) ToBuildDefinitionPullRequestTriggerOverridePathFilterArrayOutputWithContext(ctx context.Context) BuildDefinitionPullRequestTriggerOverridePathFilterArrayOutput {
	return o
}

func (o BuildDefinitionPullRequestTriggerOverridePathFilterArrayOutput) Index(i pulumi.IntInput) BuildDefinitionPullRequestTriggerOverridePathFilterOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildDefinitionPullRequestTriggerOverridePathFilter {
		return vs[0].([]BuildDefinitionPullRequestTriggerOverridePathFilter)[vs[1].(int)]
	}).(BuildDefinitionPullRequestTriggerOverridePathFilterOutput)
}

type BuildDefinitionRepository struct {
	// The branch name for which builds are triggered. Defaults to `master`.
	BranchName *string `pulumi:"branchName"`
	// The id of the repository. For `TfsGit` repos, this is simply the ID of the repository. For `Github` repos, this will take the form of `<GitHub Org>/<Repo Name>`. For `Bitbucket` repos, this will take the form of `<Workspace ID>/<Repo Name>`.
	RepoId string `pulumi:"repoId"`
	// The repository type. Valid values: `GitHub` or `TfsGit` or `Bitbucket`. Defaults to `Github`.
	RepoType string `pulumi:"repoType"`
	// The service connection ID. Used if the `repoType` is `GitHub`.
	ServiceConnectionId *string `pulumi:"serviceConnectionId"`
	// The path of the Yaml file describing the build definition.
	YmlPath string `pulumi:"ymlPath"`
}

// BuildDefinitionRepositoryInput is an input type that accepts BuildDefinitionRepositoryArgs and BuildDefinitionRepositoryOutput values.
// You can construct a concrete instance of `BuildDefinitionRepositoryInput` via:
//
//          BuildDefinitionRepositoryArgs{...}
type BuildDefinitionRepositoryInput interface {
	pulumi.Input

	ToBuildDefinitionRepositoryOutput() BuildDefinitionRepositoryOutput
	ToBuildDefinitionRepositoryOutputWithContext(context.Context) BuildDefinitionRepositoryOutput
}

type BuildDefinitionRepositoryArgs struct {
	// The branch name for which builds are triggered. Defaults to `master`.
	BranchName pulumi.StringPtrInput `pulumi:"branchName"`
	// The id of the repository. For `TfsGit` repos, this is simply the ID of the repository. For `Github` repos, this will take the form of `<GitHub Org>/<Repo Name>`. For `Bitbucket` repos, this will take the form of `<Workspace ID>/<Repo Name>`.
	RepoId pulumi.StringInput `pulumi:"repoId"`
	// The repository type. Valid values: `GitHub` or `TfsGit` or `Bitbucket`. Defaults to `Github`.
	RepoType pulumi.StringInput `pulumi:"repoType"`
	// The service connection ID. Used if the `repoType` is `GitHub`.
	ServiceConnectionId pulumi.StringPtrInput `pulumi:"serviceConnectionId"`
	// The path of the Yaml file describing the build definition.
	YmlPath pulumi.StringInput `pulumi:"ymlPath"`
}

func (BuildDefinitionRepositoryArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildDefinitionRepository)(nil)).Elem()
}

func (i BuildDefinitionRepositoryArgs) ToBuildDefinitionRepositoryOutput() BuildDefinitionRepositoryOutput {
	return i.ToBuildDefinitionRepositoryOutputWithContext(context.Background())
}

func (i BuildDefinitionRepositoryArgs) ToBuildDefinitionRepositoryOutputWithContext(ctx context.Context) BuildDefinitionRepositoryOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildDefinitionRepositoryOutput)
}

func (i BuildDefinitionRepositoryArgs) ToBuildDefinitionRepositoryPtrOutput() BuildDefinitionRepositoryPtrOutput {
	return i.ToBuildDefinitionRepositoryPtrOutputWithContext(context.Background())
}

func (i BuildDefinitionRepositoryArgs) ToBuildDefinitionRepositoryPtrOutputWithContext(ctx context.Context) BuildDefinitionRepositoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildDefinitionRepositoryOutput).ToBuildDefinitionRepositoryPtrOutputWithContext(ctx)
}

// BuildDefinitionRepositoryPtrInput is an input type that accepts BuildDefinitionRepositoryArgs, BuildDefinitionRepositoryPtr and BuildDefinitionRepositoryPtrOutput values.
// You can construct a concrete instance of `BuildDefinitionRepositoryPtrInput` via:
//
//          BuildDefinitionRepositoryArgs{...}
//
//  or:
//
//          nil
type BuildDefinitionRepositoryPtrInput interface {
	pulumi.Input

	ToBuildDefinitionRepositoryPtrOutput() BuildDefinitionRepositoryPtrOutput
	ToBuildDefinitionRepositoryPtrOutputWithContext(context.Context) BuildDefinitionRepositoryPtrOutput
}

type buildDefinitionRepositoryPtrType BuildDefinitionRepositoryArgs

func BuildDefinitionRepositoryPtr(v *BuildDefinitionRepositoryArgs) BuildDefinitionRepositoryPtrInput {
	return (*buildDefinitionRepositoryPtrType)(v)
}

func (*buildDefinitionRepositoryPtrType) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildDefinitionRepository)(nil)).Elem()
}

func (i *buildDefinitionRepositoryPtrType) ToBuildDefinitionRepositoryPtrOutput() BuildDefinitionRepositoryPtrOutput {
	return i.ToBuildDefinitionRepositoryPtrOutputWithContext(context.Background())
}

func (i *buildDefinitionRepositoryPtrType) ToBuildDefinitionRepositoryPtrOutputWithContext(ctx context.Context) BuildDefinitionRepositoryPtrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildDefinitionRepositoryPtrOutput)
}

type BuildDefinitionRepositoryOutput struct{ *pulumi.OutputState }

func (BuildDefinitionRepositoryOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildDefinitionRepository)(nil)).Elem()
}

func (o BuildDefinitionRepositoryOutput) ToBuildDefinitionRepositoryOutput() BuildDefinitionRepositoryOutput {
	return o
}

func (o BuildDefinitionRepositoryOutput) ToBuildDefinitionRepositoryOutputWithContext(ctx context.Context) BuildDefinitionRepositoryOutput {
	return o
}

func (o BuildDefinitionRepositoryOutput) ToBuildDefinitionRepositoryPtrOutput() BuildDefinitionRepositoryPtrOutput {
	return o.ToBuildDefinitionRepositoryPtrOutputWithContext(context.Background())
}

func (o BuildDefinitionRepositoryOutput) ToBuildDefinitionRepositoryPtrOutputWithContext(ctx context.Context) BuildDefinitionRepositoryPtrOutput {
	return o.ApplyT(func(v BuildDefinitionRepository) *BuildDefinitionRepository {
		return &v
	}).(BuildDefinitionRepositoryPtrOutput)
}

// The branch name for which builds are triggered. Defaults to `master`.
func (o BuildDefinitionRepositoryOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildDefinitionRepository) *string { return v.BranchName }).(pulumi.StringPtrOutput)
}

// The id of the repository. For `TfsGit` repos, this is simply the ID of the repository. For `Github` repos, this will take the form of `<GitHub Org>/<Repo Name>`. For `Bitbucket` repos, this will take the form of `<Workspace ID>/<Repo Name>`.
func (o BuildDefinitionRepositoryOutput) RepoId() pulumi.StringOutput {
	return o.ApplyT(func(v BuildDefinitionRepository) string { return v.RepoId }).(pulumi.StringOutput)
}

// The repository type. Valid values: `GitHub` or `TfsGit` or `Bitbucket`. Defaults to `Github`.
func (o BuildDefinitionRepositoryOutput) RepoType() pulumi.StringOutput {
	return o.ApplyT(func(v BuildDefinitionRepository) string { return v.RepoType }).(pulumi.StringOutput)
}

// The service connection ID. Used if the `repoType` is `GitHub`.
func (o BuildDefinitionRepositoryOutput) ServiceConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildDefinitionRepository) *string { return v.ServiceConnectionId }).(pulumi.StringPtrOutput)
}

// The path of the Yaml file describing the build definition.
func (o BuildDefinitionRepositoryOutput) YmlPath() pulumi.StringOutput {
	return o.ApplyT(func(v BuildDefinitionRepository) string { return v.YmlPath }).(pulumi.StringOutput)
}

type BuildDefinitionRepositoryPtrOutput struct{ *pulumi.OutputState }

func (BuildDefinitionRepositoryPtrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**BuildDefinitionRepository)(nil)).Elem()
}

func (o BuildDefinitionRepositoryPtrOutput) ToBuildDefinitionRepositoryPtrOutput() BuildDefinitionRepositoryPtrOutput {
	return o
}

func (o BuildDefinitionRepositoryPtrOutput) ToBuildDefinitionRepositoryPtrOutputWithContext(ctx context.Context) BuildDefinitionRepositoryPtrOutput {
	return o
}

func (o BuildDefinitionRepositoryPtrOutput) Elem() BuildDefinitionRepositoryOutput {
	return o.ApplyT(func(v *BuildDefinitionRepository) BuildDefinitionRepository { return *v }).(BuildDefinitionRepositoryOutput)
}

// The branch name for which builds are triggered. Defaults to `master`.
func (o BuildDefinitionRepositoryPtrOutput) BranchName() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildDefinitionRepository) *string {
		if v == nil {
			return nil
		}
		return v.BranchName
	}).(pulumi.StringPtrOutput)
}

// The id of the repository. For `TfsGit` repos, this is simply the ID of the repository. For `Github` repos, this will take the form of `<GitHub Org>/<Repo Name>`. For `Bitbucket` repos, this will take the form of `<Workspace ID>/<Repo Name>`.
func (o BuildDefinitionRepositoryPtrOutput) RepoId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildDefinitionRepository) *string {
		if v == nil {
			return nil
		}
		return &v.RepoId
	}).(pulumi.StringPtrOutput)
}

// The repository type. Valid values: `GitHub` or `TfsGit` or `Bitbucket`. Defaults to `Github`.
func (o BuildDefinitionRepositoryPtrOutput) RepoType() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildDefinitionRepository) *string {
		if v == nil {
			return nil
		}
		return &v.RepoType
	}).(pulumi.StringPtrOutput)
}

// The service connection ID. Used if the `repoType` is `GitHub`.
func (o BuildDefinitionRepositoryPtrOutput) ServiceConnectionId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildDefinitionRepository) *string {
		if v == nil {
			return nil
		}
		return v.ServiceConnectionId
	}).(pulumi.StringPtrOutput)
}

// The path of the Yaml file describing the build definition.
func (o BuildDefinitionRepositoryPtrOutput) YmlPath() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *BuildDefinitionRepository) *string {
		if v == nil {
			return nil
		}
		return &v.YmlPath
	}).(pulumi.StringPtrOutput)
}

type BuildDefinitionVariable struct {
	// True if the variable can be overridden. Defaults to `true`.
	AllowOverride *bool `pulumi:"allowOverride"`
	// True if the variable is a secret. Defaults to `false`.
	IsSecret *bool `pulumi:"isSecret"`
	// The name of the variable.
	Name string `pulumi:"name"`
	// The secret value of the variable. Used when `isSecret` set to `true`.
	SecretValue *string `pulumi:"secretValue"`
	// The value of the variable.
	Value *string `pulumi:"value"`
}

// BuildDefinitionVariableInput is an input type that accepts BuildDefinitionVariableArgs and BuildDefinitionVariableOutput values.
// You can construct a concrete instance of `BuildDefinitionVariableInput` via:
//
//          BuildDefinitionVariableArgs{...}
type BuildDefinitionVariableInput interface {
	pulumi.Input

	ToBuildDefinitionVariableOutput() BuildDefinitionVariableOutput
	ToBuildDefinitionVariableOutputWithContext(context.Context) BuildDefinitionVariableOutput
}

type BuildDefinitionVariableArgs struct {
	// True if the variable can be overridden. Defaults to `true`.
	AllowOverride pulumi.BoolPtrInput `pulumi:"allowOverride"`
	// True if the variable is a secret. Defaults to `false`.
	IsSecret pulumi.BoolPtrInput `pulumi:"isSecret"`
	// The name of the variable.
	Name pulumi.StringInput `pulumi:"name"`
	// The secret value of the variable. Used when `isSecret` set to `true`.
	SecretValue pulumi.StringPtrInput `pulumi:"secretValue"`
	// The value of the variable.
	Value pulumi.StringPtrInput `pulumi:"value"`
}

func (BuildDefinitionVariableArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildDefinitionVariable)(nil)).Elem()
}

func (i BuildDefinitionVariableArgs) ToBuildDefinitionVariableOutput() BuildDefinitionVariableOutput {
	return i.ToBuildDefinitionVariableOutputWithContext(context.Background())
}

func (i BuildDefinitionVariableArgs) ToBuildDefinitionVariableOutputWithContext(ctx context.Context) BuildDefinitionVariableOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildDefinitionVariableOutput)
}

// BuildDefinitionVariableArrayInput is an input type that accepts BuildDefinitionVariableArray and BuildDefinitionVariableArrayOutput values.
// You can construct a concrete instance of `BuildDefinitionVariableArrayInput` via:
//
//          BuildDefinitionVariableArray{ BuildDefinitionVariableArgs{...} }
type BuildDefinitionVariableArrayInput interface {
	pulumi.Input

	ToBuildDefinitionVariableArrayOutput() BuildDefinitionVariableArrayOutput
	ToBuildDefinitionVariableArrayOutputWithContext(context.Context) BuildDefinitionVariableArrayOutput
}

type BuildDefinitionVariableArray []BuildDefinitionVariableInput

func (BuildDefinitionVariableArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildDefinitionVariable)(nil)).Elem()
}

func (i BuildDefinitionVariableArray) ToBuildDefinitionVariableArrayOutput() BuildDefinitionVariableArrayOutput {
	return i.ToBuildDefinitionVariableArrayOutputWithContext(context.Background())
}

func (i BuildDefinitionVariableArray) ToBuildDefinitionVariableArrayOutputWithContext(ctx context.Context) BuildDefinitionVariableArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(BuildDefinitionVariableArrayOutput)
}

type BuildDefinitionVariableOutput struct{ *pulumi.OutputState }

func (BuildDefinitionVariableOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*BuildDefinitionVariable)(nil)).Elem()
}

func (o BuildDefinitionVariableOutput) ToBuildDefinitionVariableOutput() BuildDefinitionVariableOutput {
	return o
}

func (o BuildDefinitionVariableOutput) ToBuildDefinitionVariableOutputWithContext(ctx context.Context) BuildDefinitionVariableOutput {
	return o
}

// True if the variable can be overridden. Defaults to `true`.
func (o BuildDefinitionVariableOutput) AllowOverride() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildDefinitionVariable) *bool { return v.AllowOverride }).(pulumi.BoolPtrOutput)
}

// True if the variable is a secret. Defaults to `false`.
func (o BuildDefinitionVariableOutput) IsSecret() pulumi.BoolPtrOutput {
	return o.ApplyT(func(v BuildDefinitionVariable) *bool { return v.IsSecret }).(pulumi.BoolPtrOutput)
}

// The name of the variable.
func (o BuildDefinitionVariableOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v BuildDefinitionVariable) string { return v.Name }).(pulumi.StringOutput)
}

// The secret value of the variable. Used when `isSecret` set to `true`.
func (o BuildDefinitionVariableOutput) SecretValue() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildDefinitionVariable) *string { return v.SecretValue }).(pulumi.StringPtrOutput)
}

// The value of the variable.
func (o BuildDefinitionVariableOutput) Value() pulumi.StringPtrOutput {
	return o.ApplyT(func(v BuildDefinitionVariable) *string { return v.Value }).(pulumi.StringPtrOutput)
}

type BuildDefinitionVariableArrayOutput struct{ *pulumi.OutputState }

func (BuildDefinitionVariableArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]BuildDefinitionVariable)(nil)).Elem()
}

func (o BuildDefinitionVariableArrayOutput) ToBuildDefinitionVariableArrayOutput() BuildDefinitionVariableArrayOutput {
	return o
}

func (o BuildDefinitionVariableArrayOutput) ToBuildDefinitionVariableArrayOutputWithContext(ctx context.Context) BuildDefinitionVariableArrayOutput {
	return o
}

func (o BuildDefinitionVariableArrayOutput) Index(i pulumi.IntInput) BuildDefinitionVariableOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) BuildDefinitionVariable {
		return vs[0].([]BuildDefinitionVariable)[vs[1].(int)]
	}).(BuildDefinitionVariableOutput)
}

func init() {
	pulumi.RegisterOutputType(BuildDefinitionCiTriggerOutput{})
	pulumi.RegisterOutputType(BuildDefinitionCiTriggerPtrOutput{})
	pulumi.RegisterOutputType(BuildDefinitionCiTriggerOverrideOutput{})
	pulumi.RegisterOutputType(BuildDefinitionCiTriggerOverridePtrOutput{})
	pulumi.RegisterOutputType(BuildDefinitionCiTriggerOverrideBranchFilterOutput{})
	pulumi.RegisterOutputType(BuildDefinitionCiTriggerOverrideBranchFilterArrayOutput{})
	pulumi.RegisterOutputType(BuildDefinitionCiTriggerOverridePathFilterOutput{})
	pulumi.RegisterOutputType(BuildDefinitionCiTriggerOverridePathFilterArrayOutput{})
	pulumi.RegisterOutputType(BuildDefinitionPullRequestTriggerOutput{})
	pulumi.RegisterOutputType(BuildDefinitionPullRequestTriggerPtrOutput{})
	pulumi.RegisterOutputType(BuildDefinitionPullRequestTriggerForksOutput{})
	pulumi.RegisterOutputType(BuildDefinitionPullRequestTriggerForksPtrOutput{})
	pulumi.RegisterOutputType(BuildDefinitionPullRequestTriggerOverrideOutput{})
	pulumi.RegisterOutputType(BuildDefinitionPullRequestTriggerOverridePtrOutput{})
	pulumi.RegisterOutputType(BuildDefinitionPullRequestTriggerOverrideBranchFilterOutput{})
	pulumi.RegisterOutputType(BuildDefinitionPullRequestTriggerOverrideBranchFilterArrayOutput{})
	pulumi.RegisterOutputType(BuildDefinitionPullRequestTriggerOverridePathFilterOutput{})
	pulumi.RegisterOutputType(BuildDefinitionPullRequestTriggerOverridePathFilterArrayOutput{})
	pulumi.RegisterOutputType(BuildDefinitionRepositoryOutput{})
	pulumi.RegisterOutputType(BuildDefinitionRepositoryPtrOutput{})
	pulumi.RegisterOutputType(BuildDefinitionVariableOutput{})
	pulumi.RegisterOutputType(BuildDefinitionVariableArrayOutput{})
}
