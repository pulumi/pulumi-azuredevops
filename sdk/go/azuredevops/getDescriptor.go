// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package azuredevops

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azuredevops/sdk/v3/go/azuredevops/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Descriptor.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azuredevops/sdk/v3/go/azuredevops"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := azuredevops.GetDescriptor(ctx, &azuredevops.GetDescriptorArgs{
//				StorageKey: "00000000-0000-0000-0000-000000000000",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("id", example.Id)
//			return nil
//		})
//	}
//
// ```
//
// ## Relevant Links
//
// - [Azure DevOps Service REST API 7.1 - Descriptors - Get](https://learn.microsoft.com/en-us/rest/api/azure/devops/graph/descriptors/get?view=azure-devops-rest-7.1)
func GetDescriptor(ctx *pulumi.Context, args *GetDescriptorArgs, opts ...pulumi.InvokeOption) (*GetDescriptorResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetDescriptorResult
	err := ctx.Invoke("azuredevops:index/getDescriptor:getDescriptor", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getDescriptor.
type GetDescriptorArgs struct {
	// The ID of the resource(`user`, `group`, `scope`, etc.) that will be resolved to a descriptor.
	StorageKey string `pulumi:"storageKey"`
}

// A collection of values returned by getDescriptor.
type GetDescriptorResult struct {
	// The descriptor of the storage key.
	Descriptor string `pulumi:"descriptor"`
	// The provider-assigned unique ID for this managed resource.
	Id         string `pulumi:"id"`
	StorageKey string `pulumi:"storageKey"`
}

func GetDescriptorOutput(ctx *pulumi.Context, args GetDescriptorOutputArgs, opts ...pulumi.InvokeOption) GetDescriptorResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetDescriptorResultOutput, error) {
			args := v.(GetDescriptorArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azuredevops:index/getDescriptor:getDescriptor", args, GetDescriptorResultOutput{}, options).(GetDescriptorResultOutput), nil
		}).(GetDescriptorResultOutput)
}

// A collection of arguments for invoking getDescriptor.
type GetDescriptorOutputArgs struct {
	// The ID of the resource(`user`, `group`, `scope`, etc.) that will be resolved to a descriptor.
	StorageKey pulumi.StringInput `pulumi:"storageKey"`
}

func (GetDescriptorOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescriptorArgs)(nil)).Elem()
}

// A collection of values returned by getDescriptor.
type GetDescriptorResultOutput struct{ *pulumi.OutputState }

func (GetDescriptorResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetDescriptorResult)(nil)).Elem()
}

func (o GetDescriptorResultOutput) ToGetDescriptorResultOutput() GetDescriptorResultOutput {
	return o
}

func (o GetDescriptorResultOutput) ToGetDescriptorResultOutputWithContext(ctx context.Context) GetDescriptorResultOutput {
	return o
}

// The descriptor of the storage key.
func (o GetDescriptorResultOutput) Descriptor() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescriptorResult) string { return v.Descriptor }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetDescriptorResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescriptorResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetDescriptorResultOutput) StorageKey() pulumi.StringOutput {
	return o.ApplyT(func(v GetDescriptorResult) string { return v.StorageKey }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetDescriptorResultOutput{})
}
