// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package azuredevops

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azuredevops/sdk/v3/go/azuredevops/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about existing Security Role Definitions within a given scope in Azure DevOps.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azuredevops/sdk/v3/go/azuredevops"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := azuredevops.GetSecurityroleDefinitions(ctx, &azuredevops.GetSecurityroleDefinitionsArgs{
//				Scope: "distributedtask.environmentreferencerole",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			ctx.Export("securityroleDefinitions", exampleAazuredevopsSecurityroleDefinitions.Definitions)
//			return nil
//		})
//	}
//
// ```
//
// ## Relevant Links
//
// - [Azure DevOps Service REST API 7.0 - Roledefinitions - List](https://learn.microsoft.com/en-us/rest/api/azure/devops/securityroles/roledefinitions/list?view=azure-devops-rest-7.1)
func GetSecurityroleDefinitions(ctx *pulumi.Context, args *GetSecurityroleDefinitionsArgs, opts ...pulumi.InvokeOption) (*GetSecurityroleDefinitionsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetSecurityroleDefinitionsResult
	err := ctx.Invoke("azuredevops:index/getSecurityroleDefinitions:getSecurityroleDefinitions", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getSecurityroleDefinitions.
type GetSecurityroleDefinitionsArgs struct {
	// Name of the Scope for which Security Role Definitions will be returned.
	//
	// DataSource without specifying any arguments will return all projects.
	Scope string `pulumi:"scope"`
}

// A collection of values returned by getSecurityroleDefinitions.
type GetSecurityroleDefinitionsResult struct {
	// A list of existing Security Role Definitions in a Scope in your Azure DevOps Organization with details about every definition which includes. A `definitions` block as defined below.
	Definitions []GetSecurityroleDefinitionsDefinition `pulumi:"definitions"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The scope of the Security Role Definition.
	Scope string `pulumi:"scope"`
}

func GetSecurityroleDefinitionsOutput(ctx *pulumi.Context, args GetSecurityroleDefinitionsOutputArgs, opts ...pulumi.InvokeOption) GetSecurityroleDefinitionsResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetSecurityroleDefinitionsResultOutput, error) {
			args := v.(GetSecurityroleDefinitionsArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azuredevops:index/getSecurityroleDefinitions:getSecurityroleDefinitions", args, GetSecurityroleDefinitionsResultOutput{}, options).(GetSecurityroleDefinitionsResultOutput), nil
		}).(GetSecurityroleDefinitionsResultOutput)
}

// A collection of arguments for invoking getSecurityroleDefinitions.
type GetSecurityroleDefinitionsOutputArgs struct {
	// Name of the Scope for which Security Role Definitions will be returned.
	//
	// DataSource without specifying any arguments will return all projects.
	Scope pulumi.StringInput `pulumi:"scope"`
}

func (GetSecurityroleDefinitionsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityroleDefinitionsArgs)(nil)).Elem()
}

// A collection of values returned by getSecurityroleDefinitions.
type GetSecurityroleDefinitionsResultOutput struct{ *pulumi.OutputState }

func (GetSecurityroleDefinitionsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetSecurityroleDefinitionsResult)(nil)).Elem()
}

func (o GetSecurityroleDefinitionsResultOutput) ToGetSecurityroleDefinitionsResultOutput() GetSecurityroleDefinitionsResultOutput {
	return o
}

func (o GetSecurityroleDefinitionsResultOutput) ToGetSecurityroleDefinitionsResultOutputWithContext(ctx context.Context) GetSecurityroleDefinitionsResultOutput {
	return o
}

// A list of existing Security Role Definitions in a Scope in your Azure DevOps Organization with details about every definition which includes. A `definitions` block as defined below.
func (o GetSecurityroleDefinitionsResultOutput) Definitions() GetSecurityroleDefinitionsDefinitionArrayOutput {
	return o.ApplyT(func(v GetSecurityroleDefinitionsResult) []GetSecurityroleDefinitionsDefinition { return v.Definitions }).(GetSecurityroleDefinitionsDefinitionArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetSecurityroleDefinitionsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityroleDefinitionsResult) string { return v.Id }).(pulumi.StringOutput)
}

// The scope of the Security Role Definition.
func (o GetSecurityroleDefinitionsResultOutput) Scope() pulumi.StringOutput {
	return o.ApplyT(func(v GetSecurityroleDefinitionsResult) string { return v.Scope }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetSecurityroleDefinitionsResultOutput{})
}
