// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package azuredevops

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azuredevops/sdk/v2/go/azuredevops/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Azure Container Registry service endpoint within Azure DevOps.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azuredevops/sdk/v2/go/azuredevops"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleProject, err := azuredevops.NewProject(ctx, "exampleProject", &azuredevops.ProjectArgs{
//				Visibility:       pulumi.String("private"),
//				VersionControl:   pulumi.String("Git"),
//				WorkItemTemplate: pulumi.String("Agile"),
//				Description:      pulumi.String("Managed by Terraform"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = azuredevops.NewServiceEndpointAzureEcr(ctx, "exampleServiceEndpointAzureEcr", &azuredevops.ServiceEndpointAzureEcrArgs{
//				ProjectId:               exampleProject.ID(),
//				ServiceEndpointName:     pulumi.String("Example AzureCR"),
//				ResourceGroup:           pulumi.String("example-rg"),
//				AzurecrSpnTenantid:      pulumi.String("00000000-0000-0000-0000-000000000000"),
//				AzurecrName:             pulumi.String("ExampleAcr"),
//				AzurecrSubscriptionId:   pulumi.String("00000000-0000-0000-0000-000000000000"),
//				AzurecrSubscriptionName: pulumi.String("subscription name"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## Relevant Links
//
// - [Azure DevOps Service REST API 6.0 - Service Endpoints](https://docs.microsoft.com/en-us/rest/api/azure/devops/serviceendpoint/endpoints?view=azure-devops-rest-6.0)
// - [Azure Container Registry REST API](https://docs.microsoft.com/en-us/rest/api/containerregistry/)
//
// ## Import
//
// Azure DevOps Service Endpoint Azure Container Registry can be imported using **projectID/serviceEndpointID** or **projectName/serviceEndpointID**
//
// ```sh
//
//	$ pulumi import azuredevops:index/serviceEndpointAzureEcr:ServiceEndpointAzureEcr example 00000000-0000-0000-0000-000000000000/00000000-0000-0000-0000-000000000000
//
// ```
type ServiceEndpointAzureEcr struct {
	pulumi.CustomResourceState

	AppObjectId           pulumi.StringOutput    `pulumi:"appObjectId"`
	Authorization         pulumi.StringMapOutput `pulumi:"authorization"`
	AzSpnRoleAssignmentId pulumi.StringOutput    `pulumi:"azSpnRoleAssignmentId"`
	AzSpnRolePermissions  pulumi.StringOutput    `pulumi:"azSpnRolePermissions"`
	// The Azure container registry name.
	AzurecrName pulumi.StringOutput `pulumi:"azurecrName"`
	// The tenant id of the service principal.
	AzurecrSpnTenantid pulumi.StringOutput `pulumi:"azurecrSpnTenantid"`
	// The subscription id of the Azure targets.
	AzurecrSubscriptionId pulumi.StringOutput `pulumi:"azurecrSubscriptionId"`
	// The subscription name of the Azure targets.
	AzurecrSubscriptionName pulumi.StringOutput    `pulumi:"azurecrSubscriptionName"`
	Description             pulumi.StringPtrOutput `pulumi:"description"`
	// The ID of the project.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// The resource group to which the container registry belongs.
	ResourceGroup pulumi.StringOutput `pulumi:"resourceGroup"`
	// The name you will use to refer to this service connection in task inputs.
	ServiceEndpointName pulumi.StringOutput `pulumi:"serviceEndpointName"`
	// The service principal ID.
	ServicePrincipalId pulumi.StringOutput `pulumi:"servicePrincipalId"`
	SpnObjectId        pulumi.StringOutput `pulumi:"spnObjectId"`
}

// NewServiceEndpointAzureEcr registers a new resource with the given unique name, arguments, and options.
func NewServiceEndpointAzureEcr(ctx *pulumi.Context,
	name string, args *ServiceEndpointAzureEcrArgs, opts ...pulumi.ResourceOption) (*ServiceEndpointAzureEcr, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AzurecrName == nil {
		return nil, errors.New("invalid value for required argument 'AzurecrName'")
	}
	if args.AzurecrSpnTenantid == nil {
		return nil, errors.New("invalid value for required argument 'AzurecrSpnTenantid'")
	}
	if args.AzurecrSubscriptionId == nil {
		return nil, errors.New("invalid value for required argument 'AzurecrSubscriptionId'")
	}
	if args.AzurecrSubscriptionName == nil {
		return nil, errors.New("invalid value for required argument 'AzurecrSubscriptionName'")
	}
	if args.ProjectId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectId'")
	}
	if args.ResourceGroup == nil {
		return nil, errors.New("invalid value for required argument 'ResourceGroup'")
	}
	if args.ServiceEndpointName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceEndpointName'")
	}
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceEndpointAzureEcr
	err := ctx.RegisterResource("azuredevops:index/serviceEndpointAzureEcr:ServiceEndpointAzureEcr", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceEndpointAzureEcr gets an existing ServiceEndpointAzureEcr resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceEndpointAzureEcr(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceEndpointAzureEcrState, opts ...pulumi.ResourceOption) (*ServiceEndpointAzureEcr, error) {
	var resource ServiceEndpointAzureEcr
	err := ctx.ReadResource("azuredevops:index/serviceEndpointAzureEcr:ServiceEndpointAzureEcr", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceEndpointAzureEcr resources.
type serviceEndpointAzureEcrState struct {
	AppObjectId           *string           `pulumi:"appObjectId"`
	Authorization         map[string]string `pulumi:"authorization"`
	AzSpnRoleAssignmentId *string           `pulumi:"azSpnRoleAssignmentId"`
	AzSpnRolePermissions  *string           `pulumi:"azSpnRolePermissions"`
	// The Azure container registry name.
	AzurecrName *string `pulumi:"azurecrName"`
	// The tenant id of the service principal.
	AzurecrSpnTenantid *string `pulumi:"azurecrSpnTenantid"`
	// The subscription id of the Azure targets.
	AzurecrSubscriptionId *string `pulumi:"azurecrSubscriptionId"`
	// The subscription name of the Azure targets.
	AzurecrSubscriptionName *string `pulumi:"azurecrSubscriptionName"`
	Description             *string `pulumi:"description"`
	// The ID of the project.
	ProjectId *string `pulumi:"projectId"`
	// The resource group to which the container registry belongs.
	ResourceGroup *string `pulumi:"resourceGroup"`
	// The name you will use to refer to this service connection in task inputs.
	ServiceEndpointName *string `pulumi:"serviceEndpointName"`
	// The service principal ID.
	ServicePrincipalId *string `pulumi:"servicePrincipalId"`
	SpnObjectId        *string `pulumi:"spnObjectId"`
}

type ServiceEndpointAzureEcrState struct {
	AppObjectId           pulumi.StringPtrInput
	Authorization         pulumi.StringMapInput
	AzSpnRoleAssignmentId pulumi.StringPtrInput
	AzSpnRolePermissions  pulumi.StringPtrInput
	// The Azure container registry name.
	AzurecrName pulumi.StringPtrInput
	// The tenant id of the service principal.
	AzurecrSpnTenantid pulumi.StringPtrInput
	// The subscription id of the Azure targets.
	AzurecrSubscriptionId pulumi.StringPtrInput
	// The subscription name of the Azure targets.
	AzurecrSubscriptionName pulumi.StringPtrInput
	Description             pulumi.StringPtrInput
	// The ID of the project.
	ProjectId pulumi.StringPtrInput
	// The resource group to which the container registry belongs.
	ResourceGroup pulumi.StringPtrInput
	// The name you will use to refer to this service connection in task inputs.
	ServiceEndpointName pulumi.StringPtrInput
	// The service principal ID.
	ServicePrincipalId pulumi.StringPtrInput
	SpnObjectId        pulumi.StringPtrInput
}

func (ServiceEndpointAzureEcrState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceEndpointAzureEcrState)(nil)).Elem()
}

type serviceEndpointAzureEcrArgs struct {
	Authorization map[string]string `pulumi:"authorization"`
	// The Azure container registry name.
	AzurecrName string `pulumi:"azurecrName"`
	// The tenant id of the service principal.
	AzurecrSpnTenantid string `pulumi:"azurecrSpnTenantid"`
	// The subscription id of the Azure targets.
	AzurecrSubscriptionId string `pulumi:"azurecrSubscriptionId"`
	// The subscription name of the Azure targets.
	AzurecrSubscriptionName string  `pulumi:"azurecrSubscriptionName"`
	Description             *string `pulumi:"description"`
	// The ID of the project.
	ProjectId string `pulumi:"projectId"`
	// The resource group to which the container registry belongs.
	ResourceGroup string `pulumi:"resourceGroup"`
	// The name you will use to refer to this service connection in task inputs.
	ServiceEndpointName string `pulumi:"serviceEndpointName"`
}

// The set of arguments for constructing a ServiceEndpointAzureEcr resource.
type ServiceEndpointAzureEcrArgs struct {
	Authorization pulumi.StringMapInput
	// The Azure container registry name.
	AzurecrName pulumi.StringInput
	// The tenant id of the service principal.
	AzurecrSpnTenantid pulumi.StringInput
	// The subscription id of the Azure targets.
	AzurecrSubscriptionId pulumi.StringInput
	// The subscription name of the Azure targets.
	AzurecrSubscriptionName pulumi.StringInput
	Description             pulumi.StringPtrInput
	// The ID of the project.
	ProjectId pulumi.StringInput
	// The resource group to which the container registry belongs.
	ResourceGroup pulumi.StringInput
	// The name you will use to refer to this service connection in task inputs.
	ServiceEndpointName pulumi.StringInput
}

func (ServiceEndpointAzureEcrArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceEndpointAzureEcrArgs)(nil)).Elem()
}

type ServiceEndpointAzureEcrInput interface {
	pulumi.Input

	ToServiceEndpointAzureEcrOutput() ServiceEndpointAzureEcrOutput
	ToServiceEndpointAzureEcrOutputWithContext(ctx context.Context) ServiceEndpointAzureEcrOutput
}

func (*ServiceEndpointAzureEcr) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceEndpointAzureEcr)(nil)).Elem()
}

func (i *ServiceEndpointAzureEcr) ToServiceEndpointAzureEcrOutput() ServiceEndpointAzureEcrOutput {
	return i.ToServiceEndpointAzureEcrOutputWithContext(context.Background())
}

func (i *ServiceEndpointAzureEcr) ToServiceEndpointAzureEcrOutputWithContext(ctx context.Context) ServiceEndpointAzureEcrOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointAzureEcrOutput)
}

// ServiceEndpointAzureEcrArrayInput is an input type that accepts ServiceEndpointAzureEcrArray and ServiceEndpointAzureEcrArrayOutput values.
// You can construct a concrete instance of `ServiceEndpointAzureEcrArrayInput` via:
//
//	ServiceEndpointAzureEcrArray{ ServiceEndpointAzureEcrArgs{...} }
type ServiceEndpointAzureEcrArrayInput interface {
	pulumi.Input

	ToServiceEndpointAzureEcrArrayOutput() ServiceEndpointAzureEcrArrayOutput
	ToServiceEndpointAzureEcrArrayOutputWithContext(context.Context) ServiceEndpointAzureEcrArrayOutput
}

type ServiceEndpointAzureEcrArray []ServiceEndpointAzureEcrInput

func (ServiceEndpointAzureEcrArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceEndpointAzureEcr)(nil)).Elem()
}

func (i ServiceEndpointAzureEcrArray) ToServiceEndpointAzureEcrArrayOutput() ServiceEndpointAzureEcrArrayOutput {
	return i.ToServiceEndpointAzureEcrArrayOutputWithContext(context.Background())
}

func (i ServiceEndpointAzureEcrArray) ToServiceEndpointAzureEcrArrayOutputWithContext(ctx context.Context) ServiceEndpointAzureEcrArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointAzureEcrArrayOutput)
}

// ServiceEndpointAzureEcrMapInput is an input type that accepts ServiceEndpointAzureEcrMap and ServiceEndpointAzureEcrMapOutput values.
// You can construct a concrete instance of `ServiceEndpointAzureEcrMapInput` via:
//
//	ServiceEndpointAzureEcrMap{ "key": ServiceEndpointAzureEcrArgs{...} }
type ServiceEndpointAzureEcrMapInput interface {
	pulumi.Input

	ToServiceEndpointAzureEcrMapOutput() ServiceEndpointAzureEcrMapOutput
	ToServiceEndpointAzureEcrMapOutputWithContext(context.Context) ServiceEndpointAzureEcrMapOutput
}

type ServiceEndpointAzureEcrMap map[string]ServiceEndpointAzureEcrInput

func (ServiceEndpointAzureEcrMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceEndpointAzureEcr)(nil)).Elem()
}

func (i ServiceEndpointAzureEcrMap) ToServiceEndpointAzureEcrMapOutput() ServiceEndpointAzureEcrMapOutput {
	return i.ToServiceEndpointAzureEcrMapOutputWithContext(context.Background())
}

func (i ServiceEndpointAzureEcrMap) ToServiceEndpointAzureEcrMapOutputWithContext(ctx context.Context) ServiceEndpointAzureEcrMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceEndpointAzureEcrMapOutput)
}

type ServiceEndpointAzureEcrOutput struct{ *pulumi.OutputState }

func (ServiceEndpointAzureEcrOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceEndpointAzureEcr)(nil)).Elem()
}

func (o ServiceEndpointAzureEcrOutput) ToServiceEndpointAzureEcrOutput() ServiceEndpointAzureEcrOutput {
	return o
}

func (o ServiceEndpointAzureEcrOutput) ToServiceEndpointAzureEcrOutputWithContext(ctx context.Context) ServiceEndpointAzureEcrOutput {
	return o
}

func (o ServiceEndpointAzureEcrOutput) AppObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceEndpointAzureEcr) pulumi.StringOutput { return v.AppObjectId }).(pulumi.StringOutput)
}

func (o ServiceEndpointAzureEcrOutput) Authorization() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServiceEndpointAzureEcr) pulumi.StringMapOutput { return v.Authorization }).(pulumi.StringMapOutput)
}

func (o ServiceEndpointAzureEcrOutput) AzSpnRoleAssignmentId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceEndpointAzureEcr) pulumi.StringOutput { return v.AzSpnRoleAssignmentId }).(pulumi.StringOutput)
}

func (o ServiceEndpointAzureEcrOutput) AzSpnRolePermissions() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceEndpointAzureEcr) pulumi.StringOutput { return v.AzSpnRolePermissions }).(pulumi.StringOutput)
}

// The Azure container registry name.
func (o ServiceEndpointAzureEcrOutput) AzurecrName() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceEndpointAzureEcr) pulumi.StringOutput { return v.AzurecrName }).(pulumi.StringOutput)
}

// The tenant id of the service principal.
func (o ServiceEndpointAzureEcrOutput) AzurecrSpnTenantid() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceEndpointAzureEcr) pulumi.StringOutput { return v.AzurecrSpnTenantid }).(pulumi.StringOutput)
}

// The subscription id of the Azure targets.
func (o ServiceEndpointAzureEcrOutput) AzurecrSubscriptionId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceEndpointAzureEcr) pulumi.StringOutput { return v.AzurecrSubscriptionId }).(pulumi.StringOutput)
}

// The subscription name of the Azure targets.
func (o ServiceEndpointAzureEcrOutput) AzurecrSubscriptionName() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceEndpointAzureEcr) pulumi.StringOutput { return v.AzurecrSubscriptionName }).(pulumi.StringOutput)
}

func (o ServiceEndpointAzureEcrOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceEndpointAzureEcr) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The ID of the project.
func (o ServiceEndpointAzureEcrOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceEndpointAzureEcr) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// The resource group to which the container registry belongs.
func (o ServiceEndpointAzureEcrOutput) ResourceGroup() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceEndpointAzureEcr) pulumi.StringOutput { return v.ResourceGroup }).(pulumi.StringOutput)
}

// The name you will use to refer to this service connection in task inputs.
func (o ServiceEndpointAzureEcrOutput) ServiceEndpointName() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceEndpointAzureEcr) pulumi.StringOutput { return v.ServiceEndpointName }).(pulumi.StringOutput)
}

// The service principal ID.
func (o ServiceEndpointAzureEcrOutput) ServicePrincipalId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceEndpointAzureEcr) pulumi.StringOutput { return v.ServicePrincipalId }).(pulumi.StringOutput)
}

func (o ServiceEndpointAzureEcrOutput) SpnObjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceEndpointAzureEcr) pulumi.StringOutput { return v.SpnObjectId }).(pulumi.StringOutput)
}

type ServiceEndpointAzureEcrArrayOutput struct{ *pulumi.OutputState }

func (ServiceEndpointAzureEcrArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceEndpointAzureEcr)(nil)).Elem()
}

func (o ServiceEndpointAzureEcrArrayOutput) ToServiceEndpointAzureEcrArrayOutput() ServiceEndpointAzureEcrArrayOutput {
	return o
}

func (o ServiceEndpointAzureEcrArrayOutput) ToServiceEndpointAzureEcrArrayOutputWithContext(ctx context.Context) ServiceEndpointAzureEcrArrayOutput {
	return o
}

func (o ServiceEndpointAzureEcrArrayOutput) Index(i pulumi.IntInput) ServiceEndpointAzureEcrOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceEndpointAzureEcr {
		return vs[0].([]*ServiceEndpointAzureEcr)[vs[1].(int)]
	}).(ServiceEndpointAzureEcrOutput)
}

type ServiceEndpointAzureEcrMapOutput struct{ *pulumi.OutputState }

func (ServiceEndpointAzureEcrMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceEndpointAzureEcr)(nil)).Elem()
}

func (o ServiceEndpointAzureEcrMapOutput) ToServiceEndpointAzureEcrMapOutput() ServiceEndpointAzureEcrMapOutput {
	return o
}

func (o ServiceEndpointAzureEcrMapOutput) ToServiceEndpointAzureEcrMapOutputWithContext(ctx context.Context) ServiceEndpointAzureEcrMapOutput {
	return o
}

func (o ServiceEndpointAzureEcrMapOutput) MapIndex(k pulumi.StringInput) ServiceEndpointAzureEcrOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceEndpointAzureEcr {
		return vs[0].(map[string]*ServiceEndpointAzureEcr)[vs[1].(string)]
	}).(ServiceEndpointAzureEcrOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceEndpointAzureEcrInput)(nil)).Elem(), &ServiceEndpointAzureEcr{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceEndpointAzureEcrArrayInput)(nil)).Elem(), ServiceEndpointAzureEcrArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceEndpointAzureEcrMapInput)(nil)).Elem(), ServiceEndpointAzureEcrMap{})
	pulumi.RegisterOutputType(ServiceEndpointAzureEcrOutput{})
	pulumi.RegisterOutputType(ServiceEndpointAzureEcrArrayOutput{})
	pulumi.RegisterOutputType(ServiceEndpointAzureEcrMapOutput{})
}
