// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package azuredevops

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azuredevops/sdk/v3/go/azuredevops/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an Azure Service Bus service endpoint within Azure DevOps.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azuredevops/sdk/v3/go/azuredevops"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := azuredevops.NewProject(ctx, "example", &azuredevops.ProjectArgs{
//				Name:             pulumi.String("Example Project"),
//				Visibility:       pulumi.String("private"),
//				VersionControl:   pulumi.String("Git"),
//				WorkItemTemplate: pulumi.String("Agile"),
//				Description:      pulumi.String("Managed by Pulumi"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = azuredevops.NewServiceendpointAzureServiceBus(ctx, "example", &azuredevops.ServiceendpointAzureServiceBusArgs{
//				ProjectId:           example.ID(),
//				ServiceEndpointName: pulumi.String("Example Azure Service Bus"),
//				QueueName:           pulumi.String("queue"),
//				ConnectionString:    pulumi.String("connection string"),
//				Description:         pulumi.String("Managed by Pulumi"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Relevant Links
//
// - [Azure DevOps Service REST API 7.0 - Endpoints](https://docs.microsoft.com/en-us/rest/api/azure/devops/serviceendpoint/endpoints?view=azure-devops-rest-7.0)
//
// ## Import
//
// Azure DevOps Azure Service Bus Service Endpoint can be imported using **projectID/serviceEndpointID** or **projectName/serviceEndpointID**
//
// ```sh
// $ pulumi import azuredevops:index/serviceendpointAzureServiceBus:ServiceendpointAzureServiceBus example 00000000-0000-0000-0000-000000000000/00000000-0000-0000-0000-000000000000
// ```
type ServiceendpointAzureServiceBus struct {
	pulumi.CustomResourceState

	Authorization pulumi.StringMapOutput `pulumi:"authorization"`
	// The  Azure Service Bus Connection string.
	ConnectionString pulumi.StringOutput    `pulumi:"connectionString"`
	Description      pulumi.StringPtrOutput `pulumi:"description"`
	// The ID of the project.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// The Azure Service Bus Queue Name.
	QueueName pulumi.StringOutput `pulumi:"queueName"`
	// The Service Endpoint name.
	ServiceEndpointName pulumi.StringOutput `pulumi:"serviceEndpointName"`
}

// NewServiceendpointAzureServiceBus registers a new resource with the given unique name, arguments, and options.
func NewServiceendpointAzureServiceBus(ctx *pulumi.Context,
	name string, args *ServiceendpointAzureServiceBusArgs, opts ...pulumi.ResourceOption) (*ServiceendpointAzureServiceBus, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ConnectionString == nil {
		return nil, errors.New("invalid value for required argument 'ConnectionString'")
	}
	if args.ProjectId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectId'")
	}
	if args.QueueName == nil {
		return nil, errors.New("invalid value for required argument 'QueueName'")
	}
	if args.ServiceEndpointName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceEndpointName'")
	}
	if args.ConnectionString != nil {
		args.ConnectionString = pulumi.ToSecret(args.ConnectionString).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"connectionString",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceendpointAzureServiceBus
	err := ctx.RegisterResource("azuredevops:index/serviceendpointAzureServiceBus:ServiceendpointAzureServiceBus", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceendpointAzureServiceBus gets an existing ServiceendpointAzureServiceBus resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceendpointAzureServiceBus(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceendpointAzureServiceBusState, opts ...pulumi.ResourceOption) (*ServiceendpointAzureServiceBus, error) {
	var resource ServiceendpointAzureServiceBus
	err := ctx.ReadResource("azuredevops:index/serviceendpointAzureServiceBus:ServiceendpointAzureServiceBus", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceendpointAzureServiceBus resources.
type serviceendpointAzureServiceBusState struct {
	Authorization map[string]string `pulumi:"authorization"`
	// The  Azure Service Bus Connection string.
	ConnectionString *string `pulumi:"connectionString"`
	Description      *string `pulumi:"description"`
	// The ID of the project.
	ProjectId *string `pulumi:"projectId"`
	// The Azure Service Bus Queue Name.
	QueueName *string `pulumi:"queueName"`
	// The Service Endpoint name.
	ServiceEndpointName *string `pulumi:"serviceEndpointName"`
}

type ServiceendpointAzureServiceBusState struct {
	Authorization pulumi.StringMapInput
	// The  Azure Service Bus Connection string.
	ConnectionString pulumi.StringPtrInput
	Description      pulumi.StringPtrInput
	// The ID of the project.
	ProjectId pulumi.StringPtrInput
	// The Azure Service Bus Queue Name.
	QueueName pulumi.StringPtrInput
	// The Service Endpoint name.
	ServiceEndpointName pulumi.StringPtrInput
}

func (ServiceendpointAzureServiceBusState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceendpointAzureServiceBusState)(nil)).Elem()
}

type serviceendpointAzureServiceBusArgs struct {
	// The  Azure Service Bus Connection string.
	ConnectionString string  `pulumi:"connectionString"`
	Description      *string `pulumi:"description"`
	// The ID of the project.
	ProjectId string `pulumi:"projectId"`
	// The Azure Service Bus Queue Name.
	QueueName string `pulumi:"queueName"`
	// The Service Endpoint name.
	ServiceEndpointName string `pulumi:"serviceEndpointName"`
}

// The set of arguments for constructing a ServiceendpointAzureServiceBus resource.
type ServiceendpointAzureServiceBusArgs struct {
	// The  Azure Service Bus Connection string.
	ConnectionString pulumi.StringInput
	Description      pulumi.StringPtrInput
	// The ID of the project.
	ProjectId pulumi.StringInput
	// The Azure Service Bus Queue Name.
	QueueName pulumi.StringInput
	// The Service Endpoint name.
	ServiceEndpointName pulumi.StringInput
}

func (ServiceendpointAzureServiceBusArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceendpointAzureServiceBusArgs)(nil)).Elem()
}

type ServiceendpointAzureServiceBusInput interface {
	pulumi.Input

	ToServiceendpointAzureServiceBusOutput() ServiceendpointAzureServiceBusOutput
	ToServiceendpointAzureServiceBusOutputWithContext(ctx context.Context) ServiceendpointAzureServiceBusOutput
}

func (*ServiceendpointAzureServiceBus) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceendpointAzureServiceBus)(nil)).Elem()
}

func (i *ServiceendpointAzureServiceBus) ToServiceendpointAzureServiceBusOutput() ServiceendpointAzureServiceBusOutput {
	return i.ToServiceendpointAzureServiceBusOutputWithContext(context.Background())
}

func (i *ServiceendpointAzureServiceBus) ToServiceendpointAzureServiceBusOutputWithContext(ctx context.Context) ServiceendpointAzureServiceBusOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceendpointAzureServiceBusOutput)
}

// ServiceendpointAzureServiceBusArrayInput is an input type that accepts ServiceendpointAzureServiceBusArray and ServiceendpointAzureServiceBusArrayOutput values.
// You can construct a concrete instance of `ServiceendpointAzureServiceBusArrayInput` via:
//
//	ServiceendpointAzureServiceBusArray{ ServiceendpointAzureServiceBusArgs{...} }
type ServiceendpointAzureServiceBusArrayInput interface {
	pulumi.Input

	ToServiceendpointAzureServiceBusArrayOutput() ServiceendpointAzureServiceBusArrayOutput
	ToServiceendpointAzureServiceBusArrayOutputWithContext(context.Context) ServiceendpointAzureServiceBusArrayOutput
}

type ServiceendpointAzureServiceBusArray []ServiceendpointAzureServiceBusInput

func (ServiceendpointAzureServiceBusArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceendpointAzureServiceBus)(nil)).Elem()
}

func (i ServiceendpointAzureServiceBusArray) ToServiceendpointAzureServiceBusArrayOutput() ServiceendpointAzureServiceBusArrayOutput {
	return i.ToServiceendpointAzureServiceBusArrayOutputWithContext(context.Background())
}

func (i ServiceendpointAzureServiceBusArray) ToServiceendpointAzureServiceBusArrayOutputWithContext(ctx context.Context) ServiceendpointAzureServiceBusArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceendpointAzureServiceBusArrayOutput)
}

// ServiceendpointAzureServiceBusMapInput is an input type that accepts ServiceendpointAzureServiceBusMap and ServiceendpointAzureServiceBusMapOutput values.
// You can construct a concrete instance of `ServiceendpointAzureServiceBusMapInput` via:
//
//	ServiceendpointAzureServiceBusMap{ "key": ServiceendpointAzureServiceBusArgs{...} }
type ServiceendpointAzureServiceBusMapInput interface {
	pulumi.Input

	ToServiceendpointAzureServiceBusMapOutput() ServiceendpointAzureServiceBusMapOutput
	ToServiceendpointAzureServiceBusMapOutputWithContext(context.Context) ServiceendpointAzureServiceBusMapOutput
}

type ServiceendpointAzureServiceBusMap map[string]ServiceendpointAzureServiceBusInput

func (ServiceendpointAzureServiceBusMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceendpointAzureServiceBus)(nil)).Elem()
}

func (i ServiceendpointAzureServiceBusMap) ToServiceendpointAzureServiceBusMapOutput() ServiceendpointAzureServiceBusMapOutput {
	return i.ToServiceendpointAzureServiceBusMapOutputWithContext(context.Background())
}

func (i ServiceendpointAzureServiceBusMap) ToServiceendpointAzureServiceBusMapOutputWithContext(ctx context.Context) ServiceendpointAzureServiceBusMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceendpointAzureServiceBusMapOutput)
}

type ServiceendpointAzureServiceBusOutput struct{ *pulumi.OutputState }

func (ServiceendpointAzureServiceBusOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceendpointAzureServiceBus)(nil)).Elem()
}

func (o ServiceendpointAzureServiceBusOutput) ToServiceendpointAzureServiceBusOutput() ServiceendpointAzureServiceBusOutput {
	return o
}

func (o ServiceendpointAzureServiceBusOutput) ToServiceendpointAzureServiceBusOutputWithContext(ctx context.Context) ServiceendpointAzureServiceBusOutput {
	return o
}

func (o ServiceendpointAzureServiceBusOutput) Authorization() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServiceendpointAzureServiceBus) pulumi.StringMapOutput { return v.Authorization }).(pulumi.StringMapOutput)
}

// The  Azure Service Bus Connection string.
func (o ServiceendpointAzureServiceBusOutput) ConnectionString() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceendpointAzureServiceBus) pulumi.StringOutput { return v.ConnectionString }).(pulumi.StringOutput)
}

func (o ServiceendpointAzureServiceBusOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceendpointAzureServiceBus) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The ID of the project.
func (o ServiceendpointAzureServiceBusOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceendpointAzureServiceBus) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// The Azure Service Bus Queue Name.
func (o ServiceendpointAzureServiceBusOutput) QueueName() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceendpointAzureServiceBus) pulumi.StringOutput { return v.QueueName }).(pulumi.StringOutput)
}

// The Service Endpoint name.
func (o ServiceendpointAzureServiceBusOutput) ServiceEndpointName() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceendpointAzureServiceBus) pulumi.StringOutput { return v.ServiceEndpointName }).(pulumi.StringOutput)
}

type ServiceendpointAzureServiceBusArrayOutput struct{ *pulumi.OutputState }

func (ServiceendpointAzureServiceBusArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceendpointAzureServiceBus)(nil)).Elem()
}

func (o ServiceendpointAzureServiceBusArrayOutput) ToServiceendpointAzureServiceBusArrayOutput() ServiceendpointAzureServiceBusArrayOutput {
	return o
}

func (o ServiceendpointAzureServiceBusArrayOutput) ToServiceendpointAzureServiceBusArrayOutputWithContext(ctx context.Context) ServiceendpointAzureServiceBusArrayOutput {
	return o
}

func (o ServiceendpointAzureServiceBusArrayOutput) Index(i pulumi.IntInput) ServiceendpointAzureServiceBusOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceendpointAzureServiceBus {
		return vs[0].([]*ServiceendpointAzureServiceBus)[vs[1].(int)]
	}).(ServiceendpointAzureServiceBusOutput)
}

type ServiceendpointAzureServiceBusMapOutput struct{ *pulumi.OutputState }

func (ServiceendpointAzureServiceBusMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceendpointAzureServiceBus)(nil)).Elem()
}

func (o ServiceendpointAzureServiceBusMapOutput) ToServiceendpointAzureServiceBusMapOutput() ServiceendpointAzureServiceBusMapOutput {
	return o
}

func (o ServiceendpointAzureServiceBusMapOutput) ToServiceendpointAzureServiceBusMapOutputWithContext(ctx context.Context) ServiceendpointAzureServiceBusMapOutput {
	return o
}

func (o ServiceendpointAzureServiceBusMapOutput) MapIndex(k pulumi.StringInput) ServiceendpointAzureServiceBusOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceendpointAzureServiceBus {
		return vs[0].(map[string]*ServiceendpointAzureServiceBus)[vs[1].(string)]
	}).(ServiceendpointAzureServiceBusOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceendpointAzureServiceBusInput)(nil)).Elem(), &ServiceendpointAzureServiceBus{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceendpointAzureServiceBusArrayInput)(nil)).Elem(), ServiceendpointAzureServiceBusArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceendpointAzureServiceBusMapInput)(nil)).Elem(), ServiceendpointAzureServiceBusMap{})
	pulumi.RegisterOutputType(ServiceendpointAzureServiceBusOutput{})
	pulumi.RegisterOutputType(ServiceendpointAzureServiceBusArrayOutput{})
	pulumi.RegisterOutputType(ServiceendpointAzureServiceBusMapOutput{})
}
