// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package azuredevops

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi-azuredevops/sdk/v3/go/azuredevops/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages a Checkmarx SCA service endpoint within Azure DevOps. Using this service endpoint requires you to install: [Checkmarx SAST](https://marketplace.visualstudio.com/items?itemName=checkmarx.cxsast)
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azuredevops/sdk/v3/go/azuredevops"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := azuredevops.NewProject(ctx, "example", &azuredevops.ProjectArgs{
//				Name:             pulumi.String("Example Project"),
//				Visibility:       pulumi.String("private"),
//				VersionControl:   pulumi.String("Git"),
//				WorkItemTemplate: pulumi.String("Agile"),
//				Description:      pulumi.String("Managed by Pulumi"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = azuredevops.NewServiceendpointCheckmarxSca(ctx, "example", &azuredevops.ServiceendpointCheckmarxScaArgs{
//				ProjectId:           example.ID(),
//				ServiceEndpointName: pulumi.String("Example Checkmarx SCA"),
//				AccessControlUrl:    pulumi.String("https://accesscontrol.com"),
//				ServerUrl:           pulumi.String("https://server.com"),
//				WebAppUrl:           pulumi.String("https://webapp.com"),
//				Account:             pulumi.String("account"),
//				Username:            pulumi.String("username"),
//				Password:            pulumi.String("password"),
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Relevant Links
//
// - [Azure DevOps Service REST API 7.0 - Service Endpoints](https://docs.microsoft.com/en-us/rest/api/azure/devops/serviceendpoint/endpoints?view=azure-devops-rest-7.0)
//
// ## Import
//
// Azure DevOps Service Endpoint Check Marx SCA can be imported using **projectID/serviceEndpointID** or **projectName/serviceEndpointID**
//
// ```sh
// $ pulumi import azuredevops:index/serviceendpointCheckmarxSca:ServiceendpointCheckmarxSca example 00000000-0000-0000-0000-000000000000/00000000-0000-0000-0000-000000000000
// ```
type ServiceendpointCheckmarxSca struct {
	pulumi.CustomResourceState

	// The Access Control URL of the Checkmarx SCA.
	AccessControlUrl pulumi.StringOutput `pulumi:"accessControlUrl"`
	// The account of the Checkmarx SCA.
	Account       pulumi.StringOutput    `pulumi:"account"`
	Authorization pulumi.StringMapOutput `pulumi:"authorization"`
	Description   pulumi.StringPtrOutput `pulumi:"description"`
	// The password of the Checkmarx SCA.
	Password pulumi.StringOutput `pulumi:"password"`
	// The ID of the project.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// The Server URL of the Checkmarx SCA.
	ServerUrl pulumi.StringOutput `pulumi:"serverUrl"`
	// The Service Endpoint name.
	ServiceEndpointName pulumi.StringOutput `pulumi:"serviceEndpointName"`
	// The full team name of the Checkmarx.
	Team pulumi.StringPtrOutput `pulumi:"team"`
	// The username of the Checkmarx SCA.
	Username pulumi.StringOutput `pulumi:"username"`
	// The Web App URL of the Checkmarx SCA.
	WebAppUrl pulumi.StringOutput `pulumi:"webAppUrl"`
}

// NewServiceendpointCheckmarxSca registers a new resource with the given unique name, arguments, and options.
func NewServiceendpointCheckmarxSca(ctx *pulumi.Context,
	name string, args *ServiceendpointCheckmarxScaArgs, opts ...pulumi.ResourceOption) (*ServiceendpointCheckmarxSca, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.AccessControlUrl == nil {
		return nil, errors.New("invalid value for required argument 'AccessControlUrl'")
	}
	if args.Account == nil {
		return nil, errors.New("invalid value for required argument 'Account'")
	}
	if args.Password == nil {
		return nil, errors.New("invalid value for required argument 'Password'")
	}
	if args.ProjectId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectId'")
	}
	if args.ServerUrl == nil {
		return nil, errors.New("invalid value for required argument 'ServerUrl'")
	}
	if args.ServiceEndpointName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceEndpointName'")
	}
	if args.Username == nil {
		return nil, errors.New("invalid value for required argument 'Username'")
	}
	if args.WebAppUrl == nil {
		return nil, errors.New("invalid value for required argument 'WebAppUrl'")
	}
	if args.Password != nil {
		args.Password = pulumi.ToSecret(args.Password).(pulumi.StringInput)
	}
	secrets := pulumi.AdditionalSecretOutputs([]string{
		"password",
	})
	opts = append(opts, secrets)
	opts = internal.PkgResourceDefaultOpts(opts)
	var resource ServiceendpointCheckmarxSca
	err := ctx.RegisterResource("azuredevops:index/serviceendpointCheckmarxSca:ServiceendpointCheckmarxSca", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceendpointCheckmarxSca gets an existing ServiceendpointCheckmarxSca resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceendpointCheckmarxSca(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceendpointCheckmarxScaState, opts ...pulumi.ResourceOption) (*ServiceendpointCheckmarxSca, error) {
	var resource ServiceendpointCheckmarxSca
	err := ctx.ReadResource("azuredevops:index/serviceendpointCheckmarxSca:ServiceendpointCheckmarxSca", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceendpointCheckmarxSca resources.
type serviceendpointCheckmarxScaState struct {
	// The Access Control URL of the Checkmarx SCA.
	AccessControlUrl *string `pulumi:"accessControlUrl"`
	// The account of the Checkmarx SCA.
	Account       *string           `pulumi:"account"`
	Authorization map[string]string `pulumi:"authorization"`
	Description   *string           `pulumi:"description"`
	// The password of the Checkmarx SCA.
	Password *string `pulumi:"password"`
	// The ID of the project.
	ProjectId *string `pulumi:"projectId"`
	// The Server URL of the Checkmarx SCA.
	ServerUrl *string `pulumi:"serverUrl"`
	// The Service Endpoint name.
	ServiceEndpointName *string `pulumi:"serviceEndpointName"`
	// The full team name of the Checkmarx.
	Team *string `pulumi:"team"`
	// The username of the Checkmarx SCA.
	Username *string `pulumi:"username"`
	// The Web App URL of the Checkmarx SCA.
	WebAppUrl *string `pulumi:"webAppUrl"`
}

type ServiceendpointCheckmarxScaState struct {
	// The Access Control URL of the Checkmarx SCA.
	AccessControlUrl pulumi.StringPtrInput
	// The account of the Checkmarx SCA.
	Account       pulumi.StringPtrInput
	Authorization pulumi.StringMapInput
	Description   pulumi.StringPtrInput
	// The password of the Checkmarx SCA.
	Password pulumi.StringPtrInput
	// The ID of the project.
	ProjectId pulumi.StringPtrInput
	// The Server URL of the Checkmarx SCA.
	ServerUrl pulumi.StringPtrInput
	// The Service Endpoint name.
	ServiceEndpointName pulumi.StringPtrInput
	// The full team name of the Checkmarx.
	Team pulumi.StringPtrInput
	// The username of the Checkmarx SCA.
	Username pulumi.StringPtrInput
	// The Web App URL of the Checkmarx SCA.
	WebAppUrl pulumi.StringPtrInput
}

func (ServiceendpointCheckmarxScaState) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceendpointCheckmarxScaState)(nil)).Elem()
}

type serviceendpointCheckmarxScaArgs struct {
	// The Access Control URL of the Checkmarx SCA.
	AccessControlUrl string `pulumi:"accessControlUrl"`
	// The account of the Checkmarx SCA.
	Account     string  `pulumi:"account"`
	Description *string `pulumi:"description"`
	// The password of the Checkmarx SCA.
	Password string `pulumi:"password"`
	// The ID of the project.
	ProjectId string `pulumi:"projectId"`
	// The Server URL of the Checkmarx SCA.
	ServerUrl string `pulumi:"serverUrl"`
	// The Service Endpoint name.
	ServiceEndpointName string `pulumi:"serviceEndpointName"`
	// The full team name of the Checkmarx.
	Team *string `pulumi:"team"`
	// The username of the Checkmarx SCA.
	Username string `pulumi:"username"`
	// The Web App URL of the Checkmarx SCA.
	WebAppUrl string `pulumi:"webAppUrl"`
}

// The set of arguments for constructing a ServiceendpointCheckmarxSca resource.
type ServiceendpointCheckmarxScaArgs struct {
	// The Access Control URL of the Checkmarx SCA.
	AccessControlUrl pulumi.StringInput
	// The account of the Checkmarx SCA.
	Account     pulumi.StringInput
	Description pulumi.StringPtrInput
	// The password of the Checkmarx SCA.
	Password pulumi.StringInput
	// The ID of the project.
	ProjectId pulumi.StringInput
	// The Server URL of the Checkmarx SCA.
	ServerUrl pulumi.StringInput
	// The Service Endpoint name.
	ServiceEndpointName pulumi.StringInput
	// The full team name of the Checkmarx.
	Team pulumi.StringPtrInput
	// The username of the Checkmarx SCA.
	Username pulumi.StringInput
	// The Web App URL of the Checkmarx SCA.
	WebAppUrl pulumi.StringInput
}

func (ServiceendpointCheckmarxScaArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceendpointCheckmarxScaArgs)(nil)).Elem()
}

type ServiceendpointCheckmarxScaInput interface {
	pulumi.Input

	ToServiceendpointCheckmarxScaOutput() ServiceendpointCheckmarxScaOutput
	ToServiceendpointCheckmarxScaOutputWithContext(ctx context.Context) ServiceendpointCheckmarxScaOutput
}

func (*ServiceendpointCheckmarxSca) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceendpointCheckmarxSca)(nil)).Elem()
}

func (i *ServiceendpointCheckmarxSca) ToServiceendpointCheckmarxScaOutput() ServiceendpointCheckmarxScaOutput {
	return i.ToServiceendpointCheckmarxScaOutputWithContext(context.Background())
}

func (i *ServiceendpointCheckmarxSca) ToServiceendpointCheckmarxScaOutputWithContext(ctx context.Context) ServiceendpointCheckmarxScaOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceendpointCheckmarxScaOutput)
}

// ServiceendpointCheckmarxScaArrayInput is an input type that accepts ServiceendpointCheckmarxScaArray and ServiceendpointCheckmarxScaArrayOutput values.
// You can construct a concrete instance of `ServiceendpointCheckmarxScaArrayInput` via:
//
//	ServiceendpointCheckmarxScaArray{ ServiceendpointCheckmarxScaArgs{...} }
type ServiceendpointCheckmarxScaArrayInput interface {
	pulumi.Input

	ToServiceendpointCheckmarxScaArrayOutput() ServiceendpointCheckmarxScaArrayOutput
	ToServiceendpointCheckmarxScaArrayOutputWithContext(context.Context) ServiceendpointCheckmarxScaArrayOutput
}

type ServiceendpointCheckmarxScaArray []ServiceendpointCheckmarxScaInput

func (ServiceendpointCheckmarxScaArray) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceendpointCheckmarxSca)(nil)).Elem()
}

func (i ServiceendpointCheckmarxScaArray) ToServiceendpointCheckmarxScaArrayOutput() ServiceendpointCheckmarxScaArrayOutput {
	return i.ToServiceendpointCheckmarxScaArrayOutputWithContext(context.Background())
}

func (i ServiceendpointCheckmarxScaArray) ToServiceendpointCheckmarxScaArrayOutputWithContext(ctx context.Context) ServiceendpointCheckmarxScaArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceendpointCheckmarxScaArrayOutput)
}

// ServiceendpointCheckmarxScaMapInput is an input type that accepts ServiceendpointCheckmarxScaMap and ServiceendpointCheckmarxScaMapOutput values.
// You can construct a concrete instance of `ServiceendpointCheckmarxScaMapInput` via:
//
//	ServiceendpointCheckmarxScaMap{ "key": ServiceendpointCheckmarxScaArgs{...} }
type ServiceendpointCheckmarxScaMapInput interface {
	pulumi.Input

	ToServiceendpointCheckmarxScaMapOutput() ServiceendpointCheckmarxScaMapOutput
	ToServiceendpointCheckmarxScaMapOutputWithContext(context.Context) ServiceendpointCheckmarxScaMapOutput
}

type ServiceendpointCheckmarxScaMap map[string]ServiceendpointCheckmarxScaInput

func (ServiceendpointCheckmarxScaMap) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceendpointCheckmarxSca)(nil)).Elem()
}

func (i ServiceendpointCheckmarxScaMap) ToServiceendpointCheckmarxScaMapOutput() ServiceendpointCheckmarxScaMapOutput {
	return i.ToServiceendpointCheckmarxScaMapOutputWithContext(context.Background())
}

func (i ServiceendpointCheckmarxScaMap) ToServiceendpointCheckmarxScaMapOutputWithContext(ctx context.Context) ServiceendpointCheckmarxScaMapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceendpointCheckmarxScaMapOutput)
}

type ServiceendpointCheckmarxScaOutput struct{ *pulumi.OutputState }

func (ServiceendpointCheckmarxScaOutput) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceendpointCheckmarxSca)(nil)).Elem()
}

func (o ServiceendpointCheckmarxScaOutput) ToServiceendpointCheckmarxScaOutput() ServiceendpointCheckmarxScaOutput {
	return o
}

func (o ServiceendpointCheckmarxScaOutput) ToServiceendpointCheckmarxScaOutputWithContext(ctx context.Context) ServiceendpointCheckmarxScaOutput {
	return o
}

// The Access Control URL of the Checkmarx SCA.
func (o ServiceendpointCheckmarxScaOutput) AccessControlUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceendpointCheckmarxSca) pulumi.StringOutput { return v.AccessControlUrl }).(pulumi.StringOutput)
}

// The account of the Checkmarx SCA.
func (o ServiceendpointCheckmarxScaOutput) Account() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceendpointCheckmarxSca) pulumi.StringOutput { return v.Account }).(pulumi.StringOutput)
}

func (o ServiceendpointCheckmarxScaOutput) Authorization() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServiceendpointCheckmarxSca) pulumi.StringMapOutput { return v.Authorization }).(pulumi.StringMapOutput)
}

func (o ServiceendpointCheckmarxScaOutput) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceendpointCheckmarxSca) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The password of the Checkmarx SCA.
func (o ServiceendpointCheckmarxScaOutput) Password() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceendpointCheckmarxSca) pulumi.StringOutput { return v.Password }).(pulumi.StringOutput)
}

// The ID of the project.
func (o ServiceendpointCheckmarxScaOutput) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceendpointCheckmarxSca) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// The Server URL of the Checkmarx SCA.
func (o ServiceendpointCheckmarxScaOutput) ServerUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceendpointCheckmarxSca) pulumi.StringOutput { return v.ServerUrl }).(pulumi.StringOutput)
}

// The Service Endpoint name.
func (o ServiceendpointCheckmarxScaOutput) ServiceEndpointName() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceendpointCheckmarxSca) pulumi.StringOutput { return v.ServiceEndpointName }).(pulumi.StringOutput)
}

// The full team name of the Checkmarx.
func (o ServiceendpointCheckmarxScaOutput) Team() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceendpointCheckmarxSca) pulumi.StringPtrOutput { return v.Team }).(pulumi.StringPtrOutput)
}

// The username of the Checkmarx SCA.
func (o ServiceendpointCheckmarxScaOutput) Username() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceendpointCheckmarxSca) pulumi.StringOutput { return v.Username }).(pulumi.StringOutput)
}

// The Web App URL of the Checkmarx SCA.
func (o ServiceendpointCheckmarxScaOutput) WebAppUrl() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceendpointCheckmarxSca) pulumi.StringOutput { return v.WebAppUrl }).(pulumi.StringOutput)
}

type ServiceendpointCheckmarxScaArrayOutput struct{ *pulumi.OutputState }

func (ServiceendpointCheckmarxScaArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceendpointCheckmarxSca)(nil)).Elem()
}

func (o ServiceendpointCheckmarxScaArrayOutput) ToServiceendpointCheckmarxScaArrayOutput() ServiceendpointCheckmarxScaArrayOutput {
	return o
}

func (o ServiceendpointCheckmarxScaArrayOutput) ToServiceendpointCheckmarxScaArrayOutputWithContext(ctx context.Context) ServiceendpointCheckmarxScaArrayOutput {
	return o
}

func (o ServiceendpointCheckmarxScaArrayOutput) Index(i pulumi.IntInput) ServiceendpointCheckmarxScaOutput {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceendpointCheckmarxSca {
		return vs[0].([]*ServiceendpointCheckmarxSca)[vs[1].(int)]
	}).(ServiceendpointCheckmarxScaOutput)
}

type ServiceendpointCheckmarxScaMapOutput struct{ *pulumi.OutputState }

func (ServiceendpointCheckmarxScaMapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceendpointCheckmarxSca)(nil)).Elem()
}

func (o ServiceendpointCheckmarxScaMapOutput) ToServiceendpointCheckmarxScaMapOutput() ServiceendpointCheckmarxScaMapOutput {
	return o
}

func (o ServiceendpointCheckmarxScaMapOutput) ToServiceendpointCheckmarxScaMapOutputWithContext(ctx context.Context) ServiceendpointCheckmarxScaMapOutput {
	return o
}

func (o ServiceendpointCheckmarxScaMapOutput) MapIndex(k pulumi.StringInput) ServiceendpointCheckmarxScaOutput {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceendpointCheckmarxSca {
		return vs[0].(map[string]*ServiceendpointCheckmarxSca)[vs[1].(string)]
	}).(ServiceendpointCheckmarxScaOutput)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceendpointCheckmarxScaInput)(nil)).Elem(), &ServiceendpointCheckmarxSca{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceendpointCheckmarxScaArrayInput)(nil)).Elem(), ServiceendpointCheckmarxScaArray{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceendpointCheckmarxScaMapInput)(nil)).Elem(), ServiceendpointCheckmarxScaMap{})
	pulumi.RegisterOutputType(ServiceendpointCheckmarxScaOutput{})
	pulumi.RegisterOutputType(ServiceendpointCheckmarxScaArrayOutput{})
	pulumi.RegisterOutputType(ServiceendpointCheckmarxScaMapOutput{})
}
