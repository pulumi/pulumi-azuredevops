// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package azuredevops

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azuredevops/sdk/v3/go/azuredevops/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing Group Memberships within Azure DevOps
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azuredevops/sdk/v3/go/azuredevops"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := azuredevops.LookupGroupMembership(ctx, &azuredevops.LookupGroupMembershipArgs{
//				GroupDescriptor: "groupdescroptpr",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Relevant Links
//
// - [Azure DevOps Service REST API 7.1 - Memberships](https://docs.microsoft.com/en-us/rest/api/azure/devops/graph/memberships?view=azure-devops-rest-7.1)
func LookupGroupMembership(ctx *pulumi.Context, args *LookupGroupMembershipArgs, opts ...pulumi.InvokeOption) (*LookupGroupMembershipResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupGroupMembershipResult
	err := ctx.Invoke("azuredevops:index/getGroupMembership:getGroupMembership", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getGroupMembership.
type LookupGroupMembershipArgs struct {
	// The descriptor of the group.
	GroupDescriptor string `pulumi:"groupDescriptor"`
}

// A collection of values returned by getGroupMembership.
type LookupGroupMembershipResult struct {
	GroupDescriptor string `pulumi:"groupDescriptor"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// A list of user or group descriptors.
	Members []string `pulumi:"members"`
}

func LookupGroupMembershipOutput(ctx *pulumi.Context, args LookupGroupMembershipOutputArgs, opts ...pulumi.InvokeOption) LookupGroupMembershipResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupGroupMembershipResultOutput, error) {
			args := v.(LookupGroupMembershipArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azuredevops:index/getGroupMembership:getGroupMembership", args, LookupGroupMembershipResultOutput{}, options).(LookupGroupMembershipResultOutput), nil
		}).(LookupGroupMembershipResultOutput)
}

// A collection of arguments for invoking getGroupMembership.
type LookupGroupMembershipOutputArgs struct {
	// The descriptor of the group.
	GroupDescriptor pulumi.StringInput `pulumi:"groupDescriptor"`
}

func (LookupGroupMembershipOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGroupMembershipArgs)(nil)).Elem()
}

// A collection of values returned by getGroupMembership.
type LookupGroupMembershipResultOutput struct{ *pulumi.OutputState }

func (LookupGroupMembershipResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupGroupMembershipResult)(nil)).Elem()
}

func (o LookupGroupMembershipResultOutput) ToLookupGroupMembershipResultOutput() LookupGroupMembershipResultOutput {
	return o
}

func (o LookupGroupMembershipResultOutput) ToLookupGroupMembershipResultOutputWithContext(ctx context.Context) LookupGroupMembershipResultOutput {
	return o
}

func (o LookupGroupMembershipResultOutput) GroupDescriptor() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGroupMembershipResult) string { return v.GroupDescriptor }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupGroupMembershipResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupGroupMembershipResult) string { return v.Id }).(pulumi.StringOutput)
}

// A list of user or group descriptors.
func (o LookupGroupMembershipResultOutput) Members() pulumi.StringArrayOutput {
	return o.ApplyT(func(v LookupGroupMembershipResult) []string { return v.Members }).(pulumi.StringArrayOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupGroupMembershipResultOutput{})
}
