// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package azuredevops

import (
	"context"
	"reflect"

	"errors"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Manages an JFrog XRay V2 server endpoint within an Azure DevOps organization.
//
// > **Note:** Using this service endpoint requires you to first install [JFrog Extension](https://marketplace.visualstudio.com/items?itemName=JFrog.jfrog-azure-devops-extension).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azuredevops/sdk/v2/go/azuredevops"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleProject, err := azuredevops.NewProject(ctx, "exampleProject", &azuredevops.ProjectArgs{
//				Visibility:       pulumi.String("private"),
//				VersionControl:   pulumi.String("Git"),
//				WorkItemTemplate: pulumi.String("Agile"),
//				Description:      pulumi.String("Managed by Terraform"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = azuredevops.NewServiceendpointJfrogXrayV2(ctx, "exampleServiceendpointJfrogXrayV2", &azuredevops.ServiceendpointJfrogXrayV2Args{
//				ProjectId:           exampleProject.ID(),
//				ServiceEndpointName: pulumi.String("Example Artifactory"),
//				Description:         pulumi.String("Managed by Terraform"),
//				Url:                 pulumi.String("https://artifactory.my.com"),
//				AuthenticationToken: &azuredevops.ServiceendpointJfrogXrayV2AuthenticationTokenArgs{
//					Token: pulumi.String("0000000000000000000000000000000000000000"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// Alternatively a username and password may be used.
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azuredevops/sdk/v2/go/azuredevops"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			exampleProject, err := azuredevops.NewProject(ctx, "exampleProject", &azuredevops.ProjectArgs{
//				Visibility:       pulumi.String("private"),
//				VersionControl:   pulumi.String("Git"),
//				WorkItemTemplate: pulumi.String("Agile"),
//				Description:      pulumi.String("Managed by Terraform"),
//			})
//			if err != nil {
//				return err
//			}
//			_, err = azuredevops.NewServiceendpointJfrogXrayV2(ctx, "exampleServiceendpointJfrogXrayV2", &azuredevops.ServiceendpointJfrogXrayV2Args{
//				ProjectId:           exampleProject.ID(),
//				ServiceEndpointName: pulumi.String("Example Artifactory"),
//				Description:         pulumi.String("Managed by Terraform"),
//				Url:                 pulumi.String("https://artifactory.my.com"),
//				AuthenticationBasic: &azuredevops.ServiceendpointJfrogXrayV2AuthenticationBasicArgs{
//					Username: pulumi.String("username"),
//					Password: pulumi.String("password"),
//				},
//			})
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
// ## Relevant Links
//
// * [Azure DevOps Service Connections](https://docs.microsoft.com/en-us/azure/devops/pipelines/library/service-endpoints?view=azure-devops&tabs=yaml)
// * [Artifactory User Token](https://docs.artifactory.org/latest/user-guide/user-token/)
//
// ## Import
//
// Azure DevOps Service Endpoint JFrog XRay V2 can be imported using the **projectID/serviceEndpointID**, e.g.
//
// ```sh
//
//	$ pulumi import azuredevops:index/serviceendpointJfrogXrayV2:ServiceendpointJfrogXrayV2 example 00000000-0000-0000-0000-000000000000/00000000-0000-0000-0000-000000000000
//
// ```
type ServiceendpointJfrogXrayV2 struct {
	pulumi.CustomResourceState

	// A `authenticationBasic` block as documented below.
	AuthenticationBasic ServiceendpointJfrogXrayV2AuthenticationBasicPtrOutput `pulumi:"authenticationBasic"`
	// A `authenticationToken` block as documented below.
	AuthenticationToken ServiceendpointJfrogXrayV2AuthenticationTokenPtrOutput `pulumi:"authenticationToken"`
	Authorization       pulumi.StringMapOutput                                 `pulumi:"authorization"`
	// The Service Endpoint description.
	Description pulumi.StringPtrOutput `pulumi:"description"`
	// The ID of the project.
	ProjectId pulumi.StringOutput `pulumi:"projectId"`
	// The Service Endpoint name.
	ServiceEndpointName pulumi.StringOutput `pulumi:"serviceEndpointName"`
	// URL of the Artifactory server to connect with.
	Url pulumi.StringOutput `pulumi:"url"`
}

// NewServiceendpointJfrogXrayV2 registers a new resource with the given unique name, arguments, and options.
func NewServiceendpointJfrogXrayV2(ctx *pulumi.Context,
	name string, args *ServiceendpointJfrogXrayV2Args, opts ...pulumi.ResourceOption) (*ServiceendpointJfrogXrayV2, error) {
	if args == nil {
		return nil, errors.New("missing one or more required arguments")
	}

	if args.ProjectId == nil {
		return nil, errors.New("invalid value for required argument 'ProjectId'")
	}
	if args.ServiceEndpointName == nil {
		return nil, errors.New("invalid value for required argument 'ServiceEndpointName'")
	}
	if args.Url == nil {
		return nil, errors.New("invalid value for required argument 'Url'")
	}
	var resource ServiceendpointJfrogXrayV2
	err := ctx.RegisterResource("azuredevops:index/serviceendpointJfrogXrayV2:ServiceendpointJfrogXrayV2", name, args, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// GetServiceendpointJfrogXrayV2 gets an existing ServiceendpointJfrogXrayV2 resource's state with the given name, ID, and optional
// state properties that are used to uniquely qualify the lookup (nil if not required).
func GetServiceendpointJfrogXrayV2(ctx *pulumi.Context,
	name string, id pulumi.IDInput, state *ServiceendpointJfrogXrayV2State, opts ...pulumi.ResourceOption) (*ServiceendpointJfrogXrayV2, error) {
	var resource ServiceendpointJfrogXrayV2
	err := ctx.ReadResource("azuredevops:index/serviceendpointJfrogXrayV2:ServiceendpointJfrogXrayV2", name, id, state, &resource, opts...)
	if err != nil {
		return nil, err
	}
	return &resource, nil
}

// Input properties used for looking up and filtering ServiceendpointJfrogXrayV2 resources.
type serviceendpointJfrogXrayV2State struct {
	// A `authenticationBasic` block as documented below.
	AuthenticationBasic *ServiceendpointJfrogXrayV2AuthenticationBasic `pulumi:"authenticationBasic"`
	// A `authenticationToken` block as documented below.
	AuthenticationToken *ServiceendpointJfrogXrayV2AuthenticationToken `pulumi:"authenticationToken"`
	Authorization       map[string]string                              `pulumi:"authorization"`
	// The Service Endpoint description.
	Description *string `pulumi:"description"`
	// The ID of the project.
	ProjectId *string `pulumi:"projectId"`
	// The Service Endpoint name.
	ServiceEndpointName *string `pulumi:"serviceEndpointName"`
	// URL of the Artifactory server to connect with.
	Url *string `pulumi:"url"`
}

type ServiceendpointJfrogXrayV2State struct {
	// A `authenticationBasic` block as documented below.
	AuthenticationBasic ServiceendpointJfrogXrayV2AuthenticationBasicPtrInput
	// A `authenticationToken` block as documented below.
	AuthenticationToken ServiceendpointJfrogXrayV2AuthenticationTokenPtrInput
	Authorization       pulumi.StringMapInput
	// The Service Endpoint description.
	Description pulumi.StringPtrInput
	// The ID of the project.
	ProjectId pulumi.StringPtrInput
	// The Service Endpoint name.
	ServiceEndpointName pulumi.StringPtrInput
	// URL of the Artifactory server to connect with.
	Url pulumi.StringPtrInput
}

func (ServiceendpointJfrogXrayV2State) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceendpointJfrogXrayV2State)(nil)).Elem()
}

type serviceendpointJfrogXrayV2Args struct {
	// A `authenticationBasic` block as documented below.
	AuthenticationBasic *ServiceendpointJfrogXrayV2AuthenticationBasic `pulumi:"authenticationBasic"`
	// A `authenticationToken` block as documented below.
	AuthenticationToken *ServiceendpointJfrogXrayV2AuthenticationToken `pulumi:"authenticationToken"`
	Authorization       map[string]string                              `pulumi:"authorization"`
	// The Service Endpoint description.
	Description *string `pulumi:"description"`
	// The ID of the project.
	ProjectId string `pulumi:"projectId"`
	// The Service Endpoint name.
	ServiceEndpointName string `pulumi:"serviceEndpointName"`
	// URL of the Artifactory server to connect with.
	Url string `pulumi:"url"`
}

// The set of arguments for constructing a ServiceendpointJfrogXrayV2 resource.
type ServiceendpointJfrogXrayV2Args struct {
	// A `authenticationBasic` block as documented below.
	AuthenticationBasic ServiceendpointJfrogXrayV2AuthenticationBasicPtrInput
	// A `authenticationToken` block as documented below.
	AuthenticationToken ServiceendpointJfrogXrayV2AuthenticationTokenPtrInput
	Authorization       pulumi.StringMapInput
	// The Service Endpoint description.
	Description pulumi.StringPtrInput
	// The ID of the project.
	ProjectId pulumi.StringInput
	// The Service Endpoint name.
	ServiceEndpointName pulumi.StringInput
	// URL of the Artifactory server to connect with.
	Url pulumi.StringInput
}

func (ServiceendpointJfrogXrayV2Args) ElementType() reflect.Type {
	return reflect.TypeOf((*serviceendpointJfrogXrayV2Args)(nil)).Elem()
}

type ServiceendpointJfrogXrayV2Input interface {
	pulumi.Input

	ToServiceendpointJfrogXrayV2Output() ServiceendpointJfrogXrayV2Output
	ToServiceendpointJfrogXrayV2OutputWithContext(ctx context.Context) ServiceendpointJfrogXrayV2Output
}

func (*ServiceendpointJfrogXrayV2) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceendpointJfrogXrayV2)(nil)).Elem()
}

func (i *ServiceendpointJfrogXrayV2) ToServiceendpointJfrogXrayV2Output() ServiceendpointJfrogXrayV2Output {
	return i.ToServiceendpointJfrogXrayV2OutputWithContext(context.Background())
}

func (i *ServiceendpointJfrogXrayV2) ToServiceendpointJfrogXrayV2OutputWithContext(ctx context.Context) ServiceendpointJfrogXrayV2Output {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceendpointJfrogXrayV2Output)
}

// ServiceendpointJfrogXrayV2ArrayInput is an input type that accepts ServiceendpointJfrogXrayV2Array and ServiceendpointJfrogXrayV2ArrayOutput values.
// You can construct a concrete instance of `ServiceendpointJfrogXrayV2ArrayInput` via:
//
//	ServiceendpointJfrogXrayV2Array{ ServiceendpointJfrogXrayV2Args{...} }
type ServiceendpointJfrogXrayV2ArrayInput interface {
	pulumi.Input

	ToServiceendpointJfrogXrayV2ArrayOutput() ServiceendpointJfrogXrayV2ArrayOutput
	ToServiceendpointJfrogXrayV2ArrayOutputWithContext(context.Context) ServiceendpointJfrogXrayV2ArrayOutput
}

type ServiceendpointJfrogXrayV2Array []ServiceendpointJfrogXrayV2Input

func (ServiceendpointJfrogXrayV2Array) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceendpointJfrogXrayV2)(nil)).Elem()
}

func (i ServiceendpointJfrogXrayV2Array) ToServiceendpointJfrogXrayV2ArrayOutput() ServiceendpointJfrogXrayV2ArrayOutput {
	return i.ToServiceendpointJfrogXrayV2ArrayOutputWithContext(context.Background())
}

func (i ServiceendpointJfrogXrayV2Array) ToServiceendpointJfrogXrayV2ArrayOutputWithContext(ctx context.Context) ServiceendpointJfrogXrayV2ArrayOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceendpointJfrogXrayV2ArrayOutput)
}

// ServiceendpointJfrogXrayV2MapInput is an input type that accepts ServiceendpointJfrogXrayV2Map and ServiceendpointJfrogXrayV2MapOutput values.
// You can construct a concrete instance of `ServiceendpointJfrogXrayV2MapInput` via:
//
//	ServiceendpointJfrogXrayV2Map{ "key": ServiceendpointJfrogXrayV2Args{...} }
type ServiceendpointJfrogXrayV2MapInput interface {
	pulumi.Input

	ToServiceendpointJfrogXrayV2MapOutput() ServiceendpointJfrogXrayV2MapOutput
	ToServiceendpointJfrogXrayV2MapOutputWithContext(context.Context) ServiceendpointJfrogXrayV2MapOutput
}

type ServiceendpointJfrogXrayV2Map map[string]ServiceendpointJfrogXrayV2Input

func (ServiceendpointJfrogXrayV2Map) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceendpointJfrogXrayV2)(nil)).Elem()
}

func (i ServiceendpointJfrogXrayV2Map) ToServiceendpointJfrogXrayV2MapOutput() ServiceendpointJfrogXrayV2MapOutput {
	return i.ToServiceendpointJfrogXrayV2MapOutputWithContext(context.Background())
}

func (i ServiceendpointJfrogXrayV2Map) ToServiceendpointJfrogXrayV2MapOutputWithContext(ctx context.Context) ServiceendpointJfrogXrayV2MapOutput {
	return pulumi.ToOutputWithContext(ctx, i).(ServiceendpointJfrogXrayV2MapOutput)
}

type ServiceendpointJfrogXrayV2Output struct{ *pulumi.OutputState }

func (ServiceendpointJfrogXrayV2Output) ElementType() reflect.Type {
	return reflect.TypeOf((**ServiceendpointJfrogXrayV2)(nil)).Elem()
}

func (o ServiceendpointJfrogXrayV2Output) ToServiceendpointJfrogXrayV2Output() ServiceendpointJfrogXrayV2Output {
	return o
}

func (o ServiceendpointJfrogXrayV2Output) ToServiceendpointJfrogXrayV2OutputWithContext(ctx context.Context) ServiceendpointJfrogXrayV2Output {
	return o
}

// A `authenticationBasic` block as documented below.
func (o ServiceendpointJfrogXrayV2Output) AuthenticationBasic() ServiceendpointJfrogXrayV2AuthenticationBasicPtrOutput {
	return o.ApplyT(func(v *ServiceendpointJfrogXrayV2) ServiceendpointJfrogXrayV2AuthenticationBasicPtrOutput {
		return v.AuthenticationBasic
	}).(ServiceendpointJfrogXrayV2AuthenticationBasicPtrOutput)
}

// A `authenticationToken` block as documented below.
func (o ServiceendpointJfrogXrayV2Output) AuthenticationToken() ServiceendpointJfrogXrayV2AuthenticationTokenPtrOutput {
	return o.ApplyT(func(v *ServiceendpointJfrogXrayV2) ServiceendpointJfrogXrayV2AuthenticationTokenPtrOutput {
		return v.AuthenticationToken
	}).(ServiceendpointJfrogXrayV2AuthenticationTokenPtrOutput)
}

func (o ServiceendpointJfrogXrayV2Output) Authorization() pulumi.StringMapOutput {
	return o.ApplyT(func(v *ServiceendpointJfrogXrayV2) pulumi.StringMapOutput { return v.Authorization }).(pulumi.StringMapOutput)
}

// The Service Endpoint description.
func (o ServiceendpointJfrogXrayV2Output) Description() pulumi.StringPtrOutput {
	return o.ApplyT(func(v *ServiceendpointJfrogXrayV2) pulumi.StringPtrOutput { return v.Description }).(pulumi.StringPtrOutput)
}

// The ID of the project.
func (o ServiceendpointJfrogXrayV2Output) ProjectId() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceendpointJfrogXrayV2) pulumi.StringOutput { return v.ProjectId }).(pulumi.StringOutput)
}

// The Service Endpoint name.
func (o ServiceendpointJfrogXrayV2Output) ServiceEndpointName() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceendpointJfrogXrayV2) pulumi.StringOutput { return v.ServiceEndpointName }).(pulumi.StringOutput)
}

// URL of the Artifactory server to connect with.
func (o ServiceendpointJfrogXrayV2Output) Url() pulumi.StringOutput {
	return o.ApplyT(func(v *ServiceendpointJfrogXrayV2) pulumi.StringOutput { return v.Url }).(pulumi.StringOutput)
}

type ServiceendpointJfrogXrayV2ArrayOutput struct{ *pulumi.OutputState }

func (ServiceendpointJfrogXrayV2ArrayOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*[]*ServiceendpointJfrogXrayV2)(nil)).Elem()
}

func (o ServiceendpointJfrogXrayV2ArrayOutput) ToServiceendpointJfrogXrayV2ArrayOutput() ServiceendpointJfrogXrayV2ArrayOutput {
	return o
}

func (o ServiceendpointJfrogXrayV2ArrayOutput) ToServiceendpointJfrogXrayV2ArrayOutputWithContext(ctx context.Context) ServiceendpointJfrogXrayV2ArrayOutput {
	return o
}

func (o ServiceendpointJfrogXrayV2ArrayOutput) Index(i pulumi.IntInput) ServiceendpointJfrogXrayV2Output {
	return pulumi.All(o, i).ApplyT(func(vs []interface{}) *ServiceendpointJfrogXrayV2 {
		return vs[0].([]*ServiceendpointJfrogXrayV2)[vs[1].(int)]
	}).(ServiceendpointJfrogXrayV2Output)
}

type ServiceendpointJfrogXrayV2MapOutput struct{ *pulumi.OutputState }

func (ServiceendpointJfrogXrayV2MapOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*map[string]*ServiceendpointJfrogXrayV2)(nil)).Elem()
}

func (o ServiceendpointJfrogXrayV2MapOutput) ToServiceendpointJfrogXrayV2MapOutput() ServiceendpointJfrogXrayV2MapOutput {
	return o
}

func (o ServiceendpointJfrogXrayV2MapOutput) ToServiceendpointJfrogXrayV2MapOutputWithContext(ctx context.Context) ServiceendpointJfrogXrayV2MapOutput {
	return o
}

func (o ServiceendpointJfrogXrayV2MapOutput) MapIndex(k pulumi.StringInput) ServiceendpointJfrogXrayV2Output {
	return pulumi.All(o, k).ApplyT(func(vs []interface{}) *ServiceendpointJfrogXrayV2 {
		return vs[0].(map[string]*ServiceendpointJfrogXrayV2)[vs[1].(string)]
	}).(ServiceendpointJfrogXrayV2Output)
}

func init() {
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceendpointJfrogXrayV2Input)(nil)).Elem(), &ServiceendpointJfrogXrayV2{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceendpointJfrogXrayV2ArrayInput)(nil)).Elem(), ServiceendpointJfrogXrayV2Array{})
	pulumi.RegisterInputType(reflect.TypeOf((*ServiceendpointJfrogXrayV2MapInput)(nil)).Elem(), ServiceendpointJfrogXrayV2Map{})
	pulumi.RegisterOutputType(ServiceendpointJfrogXrayV2Output{})
	pulumi.RegisterOutputType(ServiceendpointJfrogXrayV2ArrayOutput{})
	pulumi.RegisterOutputType(ServiceendpointJfrogXrayV2MapOutput{})
}
