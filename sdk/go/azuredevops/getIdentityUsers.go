// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package azuredevops

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azuredevops/sdk/v3/go/azuredevops/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing users within Azure DevOps On-Premise(Azure DevOps Server).
func GetIdentityUsers(ctx *pulumi.Context, args *GetIdentityUsersArgs, opts ...pulumi.InvokeOption) (*GetIdentityUsersResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetIdentityUsersResult
	err := ctx.Invoke("azuredevops:index/getIdentityUsers:getIdentityUsers", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIdentityUsers.
type GetIdentityUsersArgs struct {
	// The PrincipalName of this identity member from the source provider.
	Name string `pulumi:"name"`
	// The type of search to perform. Possible values are: `AccountName`, `DisplayName`, and `MailAddress`. Default is `General`.
	SearchFilter *string `pulumi:"searchFilter"`
}

// A collection of values returned by getIdentityUsers.
type GetIdentityUsersResult struct {
	// The Descriptor of the user.
	Descriptor string `pulumi:"descriptor"`
	// The provider-assigned unique ID for this managed resource.
	Id           string  `pulumi:"id"`
	Name         string  `pulumi:"name"`
	SearchFilter *string `pulumi:"searchFilter"`
	// The Subject Descriptor of the user.
	SubjectDescriptor string `pulumi:"subjectDescriptor"`
}

func GetIdentityUsersOutput(ctx *pulumi.Context, args GetIdentityUsersOutputArgs, opts ...pulumi.InvokeOption) GetIdentityUsersResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (GetIdentityUsersResultOutput, error) {
			args := v.(GetIdentityUsersArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azuredevops:index/getIdentityUsers:getIdentityUsers", args, GetIdentityUsersResultOutput{}, options).(GetIdentityUsersResultOutput), nil
		}).(GetIdentityUsersResultOutput)
}

// A collection of arguments for invoking getIdentityUsers.
type GetIdentityUsersOutputArgs struct {
	// The PrincipalName of this identity member from the source provider.
	Name pulumi.StringInput `pulumi:"name"`
	// The type of search to perform. Possible values are: `AccountName`, `DisplayName`, and `MailAddress`. Default is `General`.
	SearchFilter pulumi.StringPtrInput `pulumi:"searchFilter"`
}

func (GetIdentityUsersOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIdentityUsersArgs)(nil)).Elem()
}

// A collection of values returned by getIdentityUsers.
type GetIdentityUsersResultOutput struct{ *pulumi.OutputState }

func (GetIdentityUsersResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIdentityUsersResult)(nil)).Elem()
}

func (o GetIdentityUsersResultOutput) ToGetIdentityUsersResultOutput() GetIdentityUsersResultOutput {
	return o
}

func (o GetIdentityUsersResultOutput) ToGetIdentityUsersResultOutputWithContext(ctx context.Context) GetIdentityUsersResultOutput {
	return o
}

// The Descriptor of the user.
func (o GetIdentityUsersResultOutput) Descriptor() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdentityUsersResult) string { return v.Descriptor }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetIdentityUsersResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdentityUsersResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetIdentityUsersResultOutput) Name() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdentityUsersResult) string { return v.Name }).(pulumi.StringOutput)
}

func (o GetIdentityUsersResultOutput) SearchFilter() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIdentityUsersResult) *string { return v.SearchFilter }).(pulumi.StringPtrOutput)
}

// The Subject Descriptor of the user.
func (o GetIdentityUsersResultOutput) SubjectDescriptor() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdentityUsersResult) string { return v.SubjectDescriptor }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIdentityUsersResultOutput{})
}
