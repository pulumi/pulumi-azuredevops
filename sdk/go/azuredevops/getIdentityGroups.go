// Code generated by the Pulumi Terraform Bridge (tfgen) Tool DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package azuredevops

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azuredevops/sdk/v3/go/azuredevops/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about existing Groups within Azure DevOps On-Premise(Azure DevOps Server).
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azuredevops/sdk/v3/go/azuredevops"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			example, err := azuredevops.LookupProject(ctx, &azuredevops.LookupProjectArgs{
//				Name: pulumi.StringRef("Example Project"),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			// load all existing groups inside an organization
//			_, err = azuredevops.GetIdentityGroups(ctx, nil, nil)
//			if err != nil {
//				return err
//			}
//			// load all existing groups inside a specific project
//			_, err = azuredevops.GetIdentityGroups(ctx, &azuredevops.GetIdentityGroupsArgs{
//				ProjectId: pulumi.StringRef(example.Id),
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Relevant Links
//
// - [Azure DevOps Service REST API 7.0 - Identities](https://docs.microsoft.com/en-us/rest/api/azure/devops/ims/?view=azure-devops-rest-7.2)
func GetIdentityGroups(ctx *pulumi.Context, args *GetIdentityGroupsArgs, opts ...pulumi.InvokeOption) (*GetIdentityGroupsResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv GetIdentityGroupsResult
	err := ctx.Invoke("azuredevops:index/getIdentityGroups:getIdentityGroups", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getIdentityGroups.
type GetIdentityGroupsArgs struct {
	// The Project ID. If no project ID is specified all groups of an organization will be returned
	ProjectId *string `pulumi:"projectId"`
}

// A collection of values returned by getIdentityGroups.
type GetIdentityGroupsResult struct {
	// A set of existing groups in your Azure DevOps Organization or project with details about every single group which includes:
	Groups []GetIdentityGroupsGroup `pulumi:"groups"`
	// The provider-assigned unique ID for this managed resource.
	Id        string  `pulumi:"id"`
	ProjectId *string `pulumi:"projectId"`
}

func GetIdentityGroupsOutput(ctx *pulumi.Context, args GetIdentityGroupsOutputArgs, opts ...pulumi.InvokeOption) GetIdentityGroupsResultOutput {
	return pulumi.ToOutputWithContext(context.Background(), args).
		ApplyT(func(v interface{}) (GetIdentityGroupsResultOutput, error) {
			args := v.(GetIdentityGroupsArgs)
			opts = internal.PkgInvokeDefaultOpts(opts)
			var rv GetIdentityGroupsResult
			secret, err := ctx.InvokePackageRaw("azuredevops:index/getIdentityGroups:getIdentityGroups", args, &rv, "", opts...)
			if err != nil {
				return GetIdentityGroupsResultOutput{}, err
			}

			output := pulumi.ToOutput(rv).(GetIdentityGroupsResultOutput)
			if secret {
				return pulumi.ToSecret(output).(GetIdentityGroupsResultOutput), nil
			}
			return output, nil
		}).(GetIdentityGroupsResultOutput)
}

// A collection of arguments for invoking getIdentityGroups.
type GetIdentityGroupsOutputArgs struct {
	// The Project ID. If no project ID is specified all groups of an organization will be returned
	ProjectId pulumi.StringPtrInput `pulumi:"projectId"`
}

func (GetIdentityGroupsOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIdentityGroupsArgs)(nil)).Elem()
}

// A collection of values returned by getIdentityGroups.
type GetIdentityGroupsResultOutput struct{ *pulumi.OutputState }

func (GetIdentityGroupsResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*GetIdentityGroupsResult)(nil)).Elem()
}

func (o GetIdentityGroupsResultOutput) ToGetIdentityGroupsResultOutput() GetIdentityGroupsResultOutput {
	return o
}

func (o GetIdentityGroupsResultOutput) ToGetIdentityGroupsResultOutputWithContext(ctx context.Context) GetIdentityGroupsResultOutput {
	return o
}

// A set of existing groups in your Azure DevOps Organization or project with details about every single group which includes:
func (o GetIdentityGroupsResultOutput) Groups() GetIdentityGroupsGroupArrayOutput {
	return o.ApplyT(func(v GetIdentityGroupsResult) []GetIdentityGroupsGroup { return v.Groups }).(GetIdentityGroupsGroupArrayOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o GetIdentityGroupsResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v GetIdentityGroupsResult) string { return v.Id }).(pulumi.StringOutput)
}

func (o GetIdentityGroupsResultOutput) ProjectId() pulumi.StringPtrOutput {
	return o.ApplyT(func(v GetIdentityGroupsResult) *string { return v.ProjectId }).(pulumi.StringPtrOutput)
}

func init() {
	pulumi.RegisterOutputType(GetIdentityGroupsResultOutput{})
}
