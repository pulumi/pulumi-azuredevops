// Code generated by pulumi-language-go DO NOT EDIT.
// *** WARNING: Do not edit by hand unless you're certain you know what you are doing! ***

package azuredevops

import (
	"context"
	"reflect"

	"github.com/pulumi/pulumi-azuredevops/sdk/v3/go/azuredevops/internal"
	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
)

// Use this data source to access information about an existing user within Azure DevOps.
//
// ~>**NOTE:** If you only have the Storage Key(UUID) of the user, you can use `getDescriptor` to resolve the Storage Key(UUID) to a `descriptor`.
//
// ## Example Usage
//
// ```go
// package main
//
// import (
//
//	"github.com/pulumi/pulumi-azuredevops/sdk/v3/go/azuredevops"
//	"github.com/pulumi/pulumi/sdk/v3/go/pulumi"
//
// )
//
//	func main() {
//		pulumi.Run(func(ctx *pulumi.Context) error {
//			_, err := azuredevops.LookupUser(ctx, &azuredevops.LookupUserArgs{
//				Descriptor: "descriptor",
//			}, nil)
//			if err != nil {
//				return err
//			}
//			return nil
//		})
//	}
//
// ```
//
// ## Relevant Links
//
// - [Azure DevOps Service REST API 7.1 - Graph Users API](https://learn.microsoft.com/en-us/rest/api/azure/devops/graph/users/get?view=azure-devops-rest-7.1)
func LookupUser(ctx *pulumi.Context, args *LookupUserArgs, opts ...pulumi.InvokeOption) (*LookupUserResult, error) {
	opts = internal.PkgInvokeDefaultOpts(opts)
	var rv LookupUserResult
	err := ctx.Invoke("azuredevops:index/getUser:getUser", args, &rv, opts...)
	if err != nil {
		return nil, err
	}
	return &rv, nil
}

// A collection of arguments for invoking getUser.
type LookupUserArgs struct {
	// The descriptor of the user.
	Descriptor string `pulumi:"descriptor"`
}

// A collection of values returned by getUser.
type LookupUserResult struct {
	Descriptor string `pulumi:"descriptor"`
	// The display name of the User.
	DisplayName string `pulumi:"displayName"`
	// The domain of the user.
	Domain string `pulumi:"domain"`
	// The provider-assigned unique ID for this managed resource.
	Id string `pulumi:"id"`
	// The email address of the user.
	MailAddress string `pulumi:"mailAddress"`
	// The type of source provider for the origin identifier (ex:`AD`, `AAD`, `MSA`).
	Origin string `pulumi:"origin"`
	// The origin ID of the user.
	OriginId string `pulumi:"originId"`
	// The principal name of the user.
	PrincipalName string `pulumi:"principalName"`
	// The subject kind of the user (ex: `Group`, `Scope`, `User`).
	SubjectKind string `pulumi:"subjectKind"`
}

func LookupUserOutput(ctx *pulumi.Context, args LookupUserOutputArgs, opts ...pulumi.InvokeOption) LookupUserResultOutput {
	return pulumi.ToOutputWithContext(ctx.Context(), args).
		ApplyT(func(v interface{}) (LookupUserResultOutput, error) {
			args := v.(LookupUserArgs)
			options := pulumi.InvokeOutputOptions{InvokeOptions: internal.PkgInvokeDefaultOpts(opts)}
			return ctx.InvokeOutput("azuredevops:index/getUser:getUser", args, LookupUserResultOutput{}, options).(LookupUserResultOutput), nil
		}).(LookupUserResultOutput)
}

// A collection of arguments for invoking getUser.
type LookupUserOutputArgs struct {
	// The descriptor of the user.
	Descriptor pulumi.StringInput `pulumi:"descriptor"`
}

func (LookupUserOutputArgs) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserArgs)(nil)).Elem()
}

// A collection of values returned by getUser.
type LookupUserResultOutput struct{ *pulumi.OutputState }

func (LookupUserResultOutput) ElementType() reflect.Type {
	return reflect.TypeOf((*LookupUserResult)(nil)).Elem()
}

func (o LookupUserResultOutput) ToLookupUserResultOutput() LookupUserResultOutput {
	return o
}

func (o LookupUserResultOutput) ToLookupUserResultOutputWithContext(ctx context.Context) LookupUserResultOutput {
	return o
}

func (o LookupUserResultOutput) Descriptor() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.Descriptor }).(pulumi.StringOutput)
}

// The display name of the User.
func (o LookupUserResultOutput) DisplayName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.DisplayName }).(pulumi.StringOutput)
}

// The domain of the user.
func (o LookupUserResultOutput) Domain() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.Domain }).(pulumi.StringOutput)
}

// The provider-assigned unique ID for this managed resource.
func (o LookupUserResultOutput) Id() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.Id }).(pulumi.StringOutput)
}

// The email address of the user.
func (o LookupUserResultOutput) MailAddress() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.MailAddress }).(pulumi.StringOutput)
}

// The type of source provider for the origin identifier (ex:`AD`, `AAD`, `MSA`).
func (o LookupUserResultOutput) Origin() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.Origin }).(pulumi.StringOutput)
}

// The origin ID of the user.
func (o LookupUserResultOutput) OriginId() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.OriginId }).(pulumi.StringOutput)
}

// The principal name of the user.
func (o LookupUserResultOutput) PrincipalName() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.PrincipalName }).(pulumi.StringOutput)
}

// The subject kind of the user (ex: `Group`, `Scope`, `User`).
func (o LookupUserResultOutput) SubjectKind() pulumi.StringOutput {
	return o.ApplyT(func(v LookupUserResult) string { return v.SubjectKind }).(pulumi.StringOutput)
}

func init() {
	pulumi.RegisterOutputType(LookupUserResultOutput{})
}
