# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union, overload
from . import _utilities
from . import outputs
from ._inputs import *

__all__ = ['ServiceEndpointAzureRMArgs', 'ServiceEndpointAzureRM']

@pulumi.input_type
class ServiceEndpointAzureRMArgs:
    def __init__(__self__, *,
                 azurerm_spn_tenantid: pulumi.Input[str],
                 project_id: pulumi.Input[str],
                 service_endpoint_name: pulumi.Input[str],
                 authorization: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 azurerm_management_group_id: Optional[pulumi.Input[str]] = None,
                 azurerm_management_group_name: Optional[pulumi.Input[str]] = None,
                 azurerm_subscription_id: Optional[pulumi.Input[str]] = None,
                 azurerm_subscription_name: Optional[pulumi.Input[str]] = None,
                 credentials: Optional[pulumi.Input['ServiceEndpointAzureRMCredentialsArgs']] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 environment: Optional[pulumi.Input[str]] = None,
                 resource_group: Optional[pulumi.Input[str]] = None,
                 service_endpoint_authentication_scheme: Optional[pulumi.Input[str]] = None):
        """
        The set of arguments for constructing a ServiceEndpointAzureRM resource.
        :param pulumi.Input[str] azurerm_spn_tenantid: The Tenant ID if the service principal.
        :param pulumi.Input[str] project_id: The ID of the project.
        :param pulumi.Input[str] service_endpoint_name: The Service Endpoint Name.
        :param pulumi.Input[str] azurerm_management_group_id: The Management group ID of the Azure targets.
        :param pulumi.Input[str] azurerm_management_group_name: The Management group Name of the targets.
        :param pulumi.Input[str] azurerm_subscription_id: The Subscription ID of the Azure targets.
        :param pulumi.Input[str] azurerm_subscription_name: The Subscription Name of the targets.
        :param pulumi.Input['ServiceEndpointAzureRMCredentialsArgs'] credentials: A `credentials` block.
        :param pulumi.Input[str] description: Service connection description.
        :param pulumi.Input[str] environment: The Cloud Environment to use. Defaults to `AzureCloud`. Possible values are `AzureCloud`, `AzureChinaCloud`. Changing this forces a new resource to be created.
               
               > **NOTE:** One of either `Subscription` scoped i.e. `azurerm_subscription_id`, `azurerm_subscription_name` or `ManagementGroup` scoped i.e. `azurerm_management_group_id`, `azurerm_management_group_name` values must be specified.
        :param pulumi.Input[str] resource_group: The resource group used for scope of automatic service endpoint.
        :param pulumi.Input[str] service_endpoint_authentication_scheme: Specifies the type of azurerm endpoint, either `WorkloadIdentityFederation`, `ManagedServiceIdentity` or `ServicePrincipal`. Defaults to `ServicePrincipal` for backwards compatibility.
               
               > **NOTE:** The `WorkloadIdentityFederation` authentication scheme is currently in private preview. Your organisation must be part of the preview and the feature toggle must be turned on to use it. More details can be found [here](https://aka.ms/azdo-rm-workload-identity).
        """
        pulumi.set(__self__, "azurerm_spn_tenantid", azurerm_spn_tenantid)
        pulumi.set(__self__, "project_id", project_id)
        pulumi.set(__self__, "service_endpoint_name", service_endpoint_name)
        if authorization is not None:
            pulumi.set(__self__, "authorization", authorization)
        if azurerm_management_group_id is not None:
            pulumi.set(__self__, "azurerm_management_group_id", azurerm_management_group_id)
        if azurerm_management_group_name is not None:
            pulumi.set(__self__, "azurerm_management_group_name", azurerm_management_group_name)
        if azurerm_subscription_id is not None:
            pulumi.set(__self__, "azurerm_subscription_id", azurerm_subscription_id)
        if azurerm_subscription_name is not None:
            pulumi.set(__self__, "azurerm_subscription_name", azurerm_subscription_name)
        if credentials is not None:
            pulumi.set(__self__, "credentials", credentials)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if environment is not None:
            pulumi.set(__self__, "environment", environment)
        if resource_group is not None:
            pulumi.set(__self__, "resource_group", resource_group)
        if service_endpoint_authentication_scheme is not None:
            pulumi.set(__self__, "service_endpoint_authentication_scheme", service_endpoint_authentication_scheme)

    @property
    @pulumi.getter(name="azurermSpnTenantid")
    def azurerm_spn_tenantid(self) -> pulumi.Input[str]:
        """
        The Tenant ID if the service principal.
        """
        return pulumi.get(self, "azurerm_spn_tenantid")

    @azurerm_spn_tenantid.setter
    def azurerm_spn_tenantid(self, value: pulumi.Input[str]):
        pulumi.set(self, "azurerm_spn_tenantid", value)

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> pulumi.Input[str]:
        """
        The ID of the project.
        """
        return pulumi.get(self, "project_id")

    @project_id.setter
    def project_id(self, value: pulumi.Input[str]):
        pulumi.set(self, "project_id", value)

    @property
    @pulumi.getter(name="serviceEndpointName")
    def service_endpoint_name(self) -> pulumi.Input[str]:
        """
        The Service Endpoint Name.
        """
        return pulumi.get(self, "service_endpoint_name")

    @service_endpoint_name.setter
    def service_endpoint_name(self, value: pulumi.Input[str]):
        pulumi.set(self, "service_endpoint_name", value)

    @property
    @pulumi.getter
    def authorization(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]:
        return pulumi.get(self, "authorization")

    @authorization.setter
    def authorization(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]):
        pulumi.set(self, "authorization", value)

    @property
    @pulumi.getter(name="azurermManagementGroupId")
    def azurerm_management_group_id(self) -> Optional[pulumi.Input[str]]:
        """
        The Management group ID of the Azure targets.
        """
        return pulumi.get(self, "azurerm_management_group_id")

    @azurerm_management_group_id.setter
    def azurerm_management_group_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "azurerm_management_group_id", value)

    @property
    @pulumi.getter(name="azurermManagementGroupName")
    def azurerm_management_group_name(self) -> Optional[pulumi.Input[str]]:
        """
        The Management group Name of the targets.
        """
        return pulumi.get(self, "azurerm_management_group_name")

    @azurerm_management_group_name.setter
    def azurerm_management_group_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "azurerm_management_group_name", value)

    @property
    @pulumi.getter(name="azurermSubscriptionId")
    def azurerm_subscription_id(self) -> Optional[pulumi.Input[str]]:
        """
        The Subscription ID of the Azure targets.
        """
        return pulumi.get(self, "azurerm_subscription_id")

    @azurerm_subscription_id.setter
    def azurerm_subscription_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "azurerm_subscription_id", value)

    @property
    @pulumi.getter(name="azurermSubscriptionName")
    def azurerm_subscription_name(self) -> Optional[pulumi.Input[str]]:
        """
        The Subscription Name of the targets.
        """
        return pulumi.get(self, "azurerm_subscription_name")

    @azurerm_subscription_name.setter
    def azurerm_subscription_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "azurerm_subscription_name", value)

    @property
    @pulumi.getter
    def credentials(self) -> Optional[pulumi.Input['ServiceEndpointAzureRMCredentialsArgs']]:
        """
        A `credentials` block.
        """
        return pulumi.get(self, "credentials")

    @credentials.setter
    def credentials(self, value: Optional[pulumi.Input['ServiceEndpointAzureRMCredentialsArgs']]):
        pulumi.set(self, "credentials", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        Service connection description.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter
    def environment(self) -> Optional[pulumi.Input[str]]:
        """
        The Cloud Environment to use. Defaults to `AzureCloud`. Possible values are `AzureCloud`, `AzureChinaCloud`. Changing this forces a new resource to be created.

        > **NOTE:** One of either `Subscription` scoped i.e. `azurerm_subscription_id`, `azurerm_subscription_name` or `ManagementGroup` scoped i.e. `azurerm_management_group_id`, `azurerm_management_group_name` values must be specified.
        """
        return pulumi.get(self, "environment")

    @environment.setter
    def environment(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "environment", value)

    @property
    @pulumi.getter(name="resourceGroup")
    def resource_group(self) -> Optional[pulumi.Input[str]]:
        """
        The resource group used for scope of automatic service endpoint.
        """
        return pulumi.get(self, "resource_group")

    @resource_group.setter
    def resource_group(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "resource_group", value)

    @property
    @pulumi.getter(name="serviceEndpointAuthenticationScheme")
    def service_endpoint_authentication_scheme(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the type of azurerm endpoint, either `WorkloadIdentityFederation`, `ManagedServiceIdentity` or `ServicePrincipal`. Defaults to `ServicePrincipal` for backwards compatibility.

        > **NOTE:** The `WorkloadIdentityFederation` authentication scheme is currently in private preview. Your organisation must be part of the preview and the feature toggle must be turned on to use it. More details can be found [here](https://aka.ms/azdo-rm-workload-identity).
        """
        return pulumi.get(self, "service_endpoint_authentication_scheme")

    @service_endpoint_authentication_scheme.setter
    def service_endpoint_authentication_scheme(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "service_endpoint_authentication_scheme", value)


@pulumi.input_type
class _ServiceEndpointAzureRMState:
    def __init__(__self__, *,
                 authorization: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 azurerm_management_group_id: Optional[pulumi.Input[str]] = None,
                 azurerm_management_group_name: Optional[pulumi.Input[str]] = None,
                 azurerm_spn_tenantid: Optional[pulumi.Input[str]] = None,
                 azurerm_subscription_id: Optional[pulumi.Input[str]] = None,
                 azurerm_subscription_name: Optional[pulumi.Input[str]] = None,
                 credentials: Optional[pulumi.Input['ServiceEndpointAzureRMCredentialsArgs']] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 environment: Optional[pulumi.Input[str]] = None,
                 project_id: Optional[pulumi.Input[str]] = None,
                 resource_group: Optional[pulumi.Input[str]] = None,
                 service_endpoint_authentication_scheme: Optional[pulumi.Input[str]] = None,
                 service_endpoint_name: Optional[pulumi.Input[str]] = None,
                 workload_identity_federation_issuer: Optional[pulumi.Input[str]] = None,
                 workload_identity_federation_subject: Optional[pulumi.Input[str]] = None):
        """
        Input properties used for looking up and filtering ServiceEndpointAzureRM resources.
        :param pulumi.Input[str] azurerm_management_group_id: The Management group ID of the Azure targets.
        :param pulumi.Input[str] azurerm_management_group_name: The Management group Name of the targets.
        :param pulumi.Input[str] azurerm_spn_tenantid: The Tenant ID if the service principal.
        :param pulumi.Input[str] azurerm_subscription_id: The Subscription ID of the Azure targets.
        :param pulumi.Input[str] azurerm_subscription_name: The Subscription Name of the targets.
        :param pulumi.Input['ServiceEndpointAzureRMCredentialsArgs'] credentials: A `credentials` block.
        :param pulumi.Input[str] description: Service connection description.
        :param pulumi.Input[str] environment: The Cloud Environment to use. Defaults to `AzureCloud`. Possible values are `AzureCloud`, `AzureChinaCloud`. Changing this forces a new resource to be created.
               
               > **NOTE:** One of either `Subscription` scoped i.e. `azurerm_subscription_id`, `azurerm_subscription_name` or `ManagementGroup` scoped i.e. `azurerm_management_group_id`, `azurerm_management_group_name` values must be specified.
        :param pulumi.Input[str] project_id: The ID of the project.
        :param pulumi.Input[str] resource_group: The resource group used for scope of automatic service endpoint.
        :param pulumi.Input[str] service_endpoint_authentication_scheme: Specifies the type of azurerm endpoint, either `WorkloadIdentityFederation`, `ManagedServiceIdentity` or `ServicePrincipal`. Defaults to `ServicePrincipal` for backwards compatibility.
               
               > **NOTE:** The `WorkloadIdentityFederation` authentication scheme is currently in private preview. Your organisation must be part of the preview and the feature toggle must be turned on to use it. More details can be found [here](https://aka.ms/azdo-rm-workload-identity).
        :param pulumi.Input[str] service_endpoint_name: The Service Endpoint Name.
        :param pulumi.Input[str] workload_identity_federation_issuer: The issuer if `service_endpoint_authentication_scheme` is set to `WorkloadIdentityFederation`. This looks like `https://vstoken.dev.azure.com/00000000-0000-0000-0000-000000000000`, where the GUID is the Organization ID of your Azure DevOps Organisation.
        :param pulumi.Input[str] workload_identity_federation_subject: The subject if `service_endpoint_authentication_scheme` is set to `WorkloadIdentityFederation`. This looks like `sc://<organisation>/<project>/<service-connection-name>`.
        """
        if authorization is not None:
            pulumi.set(__self__, "authorization", authorization)
        if azurerm_management_group_id is not None:
            pulumi.set(__self__, "azurerm_management_group_id", azurerm_management_group_id)
        if azurerm_management_group_name is not None:
            pulumi.set(__self__, "azurerm_management_group_name", azurerm_management_group_name)
        if azurerm_spn_tenantid is not None:
            pulumi.set(__self__, "azurerm_spn_tenantid", azurerm_spn_tenantid)
        if azurerm_subscription_id is not None:
            pulumi.set(__self__, "azurerm_subscription_id", azurerm_subscription_id)
        if azurerm_subscription_name is not None:
            pulumi.set(__self__, "azurerm_subscription_name", azurerm_subscription_name)
        if credentials is not None:
            pulumi.set(__self__, "credentials", credentials)
        if description is not None:
            pulumi.set(__self__, "description", description)
        if environment is not None:
            pulumi.set(__self__, "environment", environment)
        if project_id is not None:
            pulumi.set(__self__, "project_id", project_id)
        if resource_group is not None:
            pulumi.set(__self__, "resource_group", resource_group)
        if service_endpoint_authentication_scheme is not None:
            pulumi.set(__self__, "service_endpoint_authentication_scheme", service_endpoint_authentication_scheme)
        if service_endpoint_name is not None:
            pulumi.set(__self__, "service_endpoint_name", service_endpoint_name)
        if workload_identity_federation_issuer is not None:
            pulumi.set(__self__, "workload_identity_federation_issuer", workload_identity_federation_issuer)
        if workload_identity_federation_subject is not None:
            pulumi.set(__self__, "workload_identity_federation_subject", workload_identity_federation_subject)

    @property
    @pulumi.getter
    def authorization(self) -> Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]:
        return pulumi.get(self, "authorization")

    @authorization.setter
    def authorization(self, value: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]]):
        pulumi.set(self, "authorization", value)

    @property
    @pulumi.getter(name="azurermManagementGroupId")
    def azurerm_management_group_id(self) -> Optional[pulumi.Input[str]]:
        """
        The Management group ID of the Azure targets.
        """
        return pulumi.get(self, "azurerm_management_group_id")

    @azurerm_management_group_id.setter
    def azurerm_management_group_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "azurerm_management_group_id", value)

    @property
    @pulumi.getter(name="azurermManagementGroupName")
    def azurerm_management_group_name(self) -> Optional[pulumi.Input[str]]:
        """
        The Management group Name of the targets.
        """
        return pulumi.get(self, "azurerm_management_group_name")

    @azurerm_management_group_name.setter
    def azurerm_management_group_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "azurerm_management_group_name", value)

    @property
    @pulumi.getter(name="azurermSpnTenantid")
    def azurerm_spn_tenantid(self) -> Optional[pulumi.Input[str]]:
        """
        The Tenant ID if the service principal.
        """
        return pulumi.get(self, "azurerm_spn_tenantid")

    @azurerm_spn_tenantid.setter
    def azurerm_spn_tenantid(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "azurerm_spn_tenantid", value)

    @property
    @pulumi.getter(name="azurermSubscriptionId")
    def azurerm_subscription_id(self) -> Optional[pulumi.Input[str]]:
        """
        The Subscription ID of the Azure targets.
        """
        return pulumi.get(self, "azurerm_subscription_id")

    @azurerm_subscription_id.setter
    def azurerm_subscription_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "azurerm_subscription_id", value)

    @property
    @pulumi.getter(name="azurermSubscriptionName")
    def azurerm_subscription_name(self) -> Optional[pulumi.Input[str]]:
        """
        The Subscription Name of the targets.
        """
        return pulumi.get(self, "azurerm_subscription_name")

    @azurerm_subscription_name.setter
    def azurerm_subscription_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "azurerm_subscription_name", value)

    @property
    @pulumi.getter
    def credentials(self) -> Optional[pulumi.Input['ServiceEndpointAzureRMCredentialsArgs']]:
        """
        A `credentials` block.
        """
        return pulumi.get(self, "credentials")

    @credentials.setter
    def credentials(self, value: Optional[pulumi.Input['ServiceEndpointAzureRMCredentialsArgs']]):
        pulumi.set(self, "credentials", value)

    @property
    @pulumi.getter
    def description(self) -> Optional[pulumi.Input[str]]:
        """
        Service connection description.
        """
        return pulumi.get(self, "description")

    @description.setter
    def description(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "description", value)

    @property
    @pulumi.getter
    def environment(self) -> Optional[pulumi.Input[str]]:
        """
        The Cloud Environment to use. Defaults to `AzureCloud`. Possible values are `AzureCloud`, `AzureChinaCloud`. Changing this forces a new resource to be created.

        > **NOTE:** One of either `Subscription` scoped i.e. `azurerm_subscription_id`, `azurerm_subscription_name` or `ManagementGroup` scoped i.e. `azurerm_management_group_id`, `azurerm_management_group_name` values must be specified.
        """
        return pulumi.get(self, "environment")

    @environment.setter
    def environment(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "environment", value)

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> Optional[pulumi.Input[str]]:
        """
        The ID of the project.
        """
        return pulumi.get(self, "project_id")

    @project_id.setter
    def project_id(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "project_id", value)

    @property
    @pulumi.getter(name="resourceGroup")
    def resource_group(self) -> Optional[pulumi.Input[str]]:
        """
        The resource group used for scope of automatic service endpoint.
        """
        return pulumi.get(self, "resource_group")

    @resource_group.setter
    def resource_group(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "resource_group", value)

    @property
    @pulumi.getter(name="serviceEndpointAuthenticationScheme")
    def service_endpoint_authentication_scheme(self) -> Optional[pulumi.Input[str]]:
        """
        Specifies the type of azurerm endpoint, either `WorkloadIdentityFederation`, `ManagedServiceIdentity` or `ServicePrincipal`. Defaults to `ServicePrincipal` for backwards compatibility.

        > **NOTE:** The `WorkloadIdentityFederation` authentication scheme is currently in private preview. Your organisation must be part of the preview and the feature toggle must be turned on to use it. More details can be found [here](https://aka.ms/azdo-rm-workload-identity).
        """
        return pulumi.get(self, "service_endpoint_authentication_scheme")

    @service_endpoint_authentication_scheme.setter
    def service_endpoint_authentication_scheme(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "service_endpoint_authentication_scheme", value)

    @property
    @pulumi.getter(name="serviceEndpointName")
    def service_endpoint_name(self) -> Optional[pulumi.Input[str]]:
        """
        The Service Endpoint Name.
        """
        return pulumi.get(self, "service_endpoint_name")

    @service_endpoint_name.setter
    def service_endpoint_name(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "service_endpoint_name", value)

    @property
    @pulumi.getter(name="workloadIdentityFederationIssuer")
    def workload_identity_federation_issuer(self) -> Optional[pulumi.Input[str]]:
        """
        The issuer if `service_endpoint_authentication_scheme` is set to `WorkloadIdentityFederation`. This looks like `https://vstoken.dev.azure.com/00000000-0000-0000-0000-000000000000`, where the GUID is the Organization ID of your Azure DevOps Organisation.
        """
        return pulumi.get(self, "workload_identity_federation_issuer")

    @workload_identity_federation_issuer.setter
    def workload_identity_federation_issuer(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "workload_identity_federation_issuer", value)

    @property
    @pulumi.getter(name="workloadIdentityFederationSubject")
    def workload_identity_federation_subject(self) -> Optional[pulumi.Input[str]]:
        """
        The subject if `service_endpoint_authentication_scheme` is set to `WorkloadIdentityFederation`. This looks like `sc://<organisation>/<project>/<service-connection-name>`.
        """
        return pulumi.get(self, "workload_identity_federation_subject")

    @workload_identity_federation_subject.setter
    def workload_identity_federation_subject(self, value: Optional[pulumi.Input[str]]):
        pulumi.set(self, "workload_identity_federation_subject", value)


class ServiceEndpointAzureRM(pulumi.CustomResource):
    @overload
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 authorization: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 azurerm_management_group_id: Optional[pulumi.Input[str]] = None,
                 azurerm_management_group_name: Optional[pulumi.Input[str]] = None,
                 azurerm_spn_tenantid: Optional[pulumi.Input[str]] = None,
                 azurerm_subscription_id: Optional[pulumi.Input[str]] = None,
                 azurerm_subscription_name: Optional[pulumi.Input[str]] = None,
                 credentials: Optional[pulumi.Input[pulumi.InputType['ServiceEndpointAzureRMCredentialsArgs']]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 environment: Optional[pulumi.Input[str]] = None,
                 project_id: Optional[pulumi.Input[str]] = None,
                 resource_group: Optional[pulumi.Input[str]] = None,
                 service_endpoint_authentication_scheme: Optional[pulumi.Input[str]] = None,
                 service_endpoint_name: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        """
        Manages Manual or Automatic AzureRM service endpoint within Azure DevOps.

        ## Requirements (Manual AzureRM Service Endpoint)

        Before to create a service end point in Azure DevOps, you need to create a Service Principal in your Azure subscription.

        For detailed steps to create a service principal with Azure cli see the [documentation](https://docs.microsoft.com/en-us/cli/azure/create-an-azure-service-principal-azure-cli?view=azure-cli-latest)

        ## Example Usage
        ### Service Principal Manual AzureRM Service Endpoint (Subscription Scoped)

        ```python
        import pulumi
        import pulumi_azuredevops as azuredevops

        example_project = azuredevops.Project("exampleProject",
            visibility="private",
            version_control="Git",
            work_item_template="Agile",
            description="Managed by Terraform")
        example_service_endpoint_azure_rm = azuredevops.ServiceEndpointAzureRM("exampleServiceEndpointAzureRM",
            project_id=example_project.id,
            service_endpoint_name="Example AzureRM",
            description="Managed by Terraform",
            service_endpoint_authentication_scheme="ServicePrincipal",
            credentials=azuredevops.ServiceEndpointAzureRMCredentialsArgs(
                serviceprincipalid="00000000-0000-0000-0000-000000000000",
                serviceprincipalkey="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
            ),
            azurerm_spn_tenantid="00000000-0000-0000-0000-000000000000",
            azurerm_subscription_id="00000000-0000-0000-0000-000000000000",
            azurerm_subscription_name="Example Subscription Name")
        ```
        ### Service Principal Manual AzureRM Service Endpoint (ManagementGroup Scoped)

        ```python
        import pulumi
        import pulumi_azuredevops as azuredevops

        example_project = azuredevops.Project("exampleProject",
            visibility="private",
            version_control="Git",
            work_item_template="Agile",
            description="Managed by Terraform")
        example_service_endpoint_azure_rm = azuredevops.ServiceEndpointAzureRM("exampleServiceEndpointAzureRM",
            project_id=example_project.id,
            service_endpoint_name="Example AzureRM",
            description="Managed by Terraform",
            service_endpoint_authentication_scheme="ServicePrincipal",
            credentials=azuredevops.ServiceEndpointAzureRMCredentialsArgs(
                serviceprincipalid="00000000-0000-0000-0000-000000000000",
                serviceprincipalkey="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
            ),
            azurerm_spn_tenantid="00000000-0000-0000-0000-000000000000",
            azurerm_management_group_id="managementGroup",
            azurerm_management_group_name="managementGroup")
        ```
        ### Service Principal Automatic AzureRM Service Endpoint

        ```python
        import pulumi
        import pulumi_azuredevops as azuredevops

        example_project = azuredevops.Project("exampleProject",
            visibility="private",
            version_control="Git",
            work_item_template="Agile")
        example_service_endpoint_azure_rm = azuredevops.ServiceEndpointAzureRM("exampleServiceEndpointAzureRM",
            project_id=example_project.id,
            service_endpoint_name="Example AzureRM",
            service_endpoint_authentication_scheme="ServicePrincipal",
            azurerm_spn_tenantid="00000000-0000-0000-0000-000000000000",
            azurerm_subscription_id="00000000-0000-0000-0000-000000000000",
            azurerm_subscription_name="Example Subscription Name")
        ```
        ### Workload Identity Federation Manual AzureRM Service Endpoint (Subscription Scoped)

        ```python
        import pulumi
        import pulumi_azuredevops as azuredevops
        import pulumi_azurerm as azurerm

        service_connection_name = "example-federated-sc"
        example_project = azuredevops.Project("exampleProject",
            visibility="private",
            version_control="Git",
            work_item_template="Agile",
            description="Managed by Terraform")
        identity = azurerm.index.Azurerm_resource_group("identity",
            name=identity,
            location=UK South)
        exampleazurerm_user_assigned_identity = azurerm.index.Azurerm_user_assigned_identity("exampleazurerm_user_assigned_identity",
            location=identity.location,
            name=example-identity,
            resource_group_name=azurerm_resource_group.identity.name)
        example_service_endpoint_azure_rm = azuredevops.ServiceEndpointAzureRM("exampleServiceEndpointAzureRM",
            project_id=example_project.id,
            service_endpoint_name=service_connection_name,
            description="Managed by Terraform",
            service_endpoint_authentication_scheme="WorkloadIdentityFederation",
            credentials=azuredevops.ServiceEndpointAzureRMCredentialsArgs(
                serviceprincipalid=exampleazurerm_user_assigned_identity["clientId"],
            ),
            azurerm_spn_tenantid="00000000-0000-0000-0000-000000000000",
            azurerm_subscription_id="00000000-0000-0000-0000-000000000000",
            azurerm_subscription_name="Example Subscription Name")
        exampleazurerm_federated_identity_credential = azurerm.index.Azurerm_federated_identity_credential("exampleazurerm_federated_identity_credential",
            name=example-federated-credential,
            resource_group_name=identity.name,
            parent_id=exampleazurerm_user_assigned_identity.id,
            audience=[api://AzureADTokenExchange],
            issuer=example_service_endpoint_azure_rm.workload_identity_federation_issuer,
            subject=example_service_endpoint_azure_rm.workload_identity_federation_subject)
        ```
        ### Workload Identity Federation Automatic AzureRM Service Endpoint

        ```python
        import pulumi
        import pulumi_azuredevops as azuredevops

        example_project = azuredevops.Project("exampleProject",
            visibility="private",
            version_control="Git",
            work_item_template="Agile")
        example_service_endpoint_azure_rm = azuredevops.ServiceEndpointAzureRM("exampleServiceEndpointAzureRM",
            project_id=example_project.id,
            service_endpoint_name="Example AzureRM",
            service_endpoint_authentication_scheme="WorkloadIdentityFederation",
            azurerm_spn_tenantid="00000000-0000-0000-0000-000000000000",
            azurerm_subscription_id="00000000-0000-0000-0000-000000000000",
            azurerm_subscription_name="Example Subscription Name")
        ```
        ### Managed Identity AzureRM Service Endpoint

        ```python
        import pulumi
        import pulumi_azuredevops as azuredevops

        example_project = azuredevops.Project("exampleProject",
            visibility="private",
            version_control="Git",
            work_item_template="Agile")
        example_service_endpoint_azure_rm = azuredevops.ServiceEndpointAzureRM("exampleServiceEndpointAzureRM",
            project_id=example_project.id,
            service_endpoint_name="Example AzureRM",
            service_endpoint_authentication_scheme="ManagedServiceIdentity",
            azurerm_spn_tenantid="00000000-0000-0000-0000-000000000000",
            azurerm_subscription_id="00000000-0000-0000-0000-000000000000",
            azurerm_subscription_name="Example Subscription Name")
        ```
        ## Relevant Links

        - [Azure DevOps Service REST API 7.0 - Service End points](https://docs.microsoft.com/en-us/rest/api/azure/devops/serviceendpoint/endpoints?view=azure-devops-rest-7.0)

        ## Import

        Azure DevOps Service Endpoint Azure Resource Manage can be imported using **projectID/serviceEndpointID** or **projectName/serviceEndpointID**

        ```sh
         $ pulumi import azuredevops:index/serviceEndpointAzureRM:ServiceEndpointAzureRM example 00000000-0000-0000-0000-000000000000/00000000-0000-0000-0000-000000000000
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] azurerm_management_group_id: The Management group ID of the Azure targets.
        :param pulumi.Input[str] azurerm_management_group_name: The Management group Name of the targets.
        :param pulumi.Input[str] azurerm_spn_tenantid: The Tenant ID if the service principal.
        :param pulumi.Input[str] azurerm_subscription_id: The Subscription ID of the Azure targets.
        :param pulumi.Input[str] azurerm_subscription_name: The Subscription Name of the targets.
        :param pulumi.Input[pulumi.InputType['ServiceEndpointAzureRMCredentialsArgs']] credentials: A `credentials` block.
        :param pulumi.Input[str] description: Service connection description.
        :param pulumi.Input[str] environment: The Cloud Environment to use. Defaults to `AzureCloud`. Possible values are `AzureCloud`, `AzureChinaCloud`. Changing this forces a new resource to be created.
               
               > **NOTE:** One of either `Subscription` scoped i.e. `azurerm_subscription_id`, `azurerm_subscription_name` or `ManagementGroup` scoped i.e. `azurerm_management_group_id`, `azurerm_management_group_name` values must be specified.
        :param pulumi.Input[str] project_id: The ID of the project.
        :param pulumi.Input[str] resource_group: The resource group used for scope of automatic service endpoint.
        :param pulumi.Input[str] service_endpoint_authentication_scheme: Specifies the type of azurerm endpoint, either `WorkloadIdentityFederation`, `ManagedServiceIdentity` or `ServicePrincipal`. Defaults to `ServicePrincipal` for backwards compatibility.
               
               > **NOTE:** The `WorkloadIdentityFederation` authentication scheme is currently in private preview. Your organisation must be part of the preview and the feature toggle must be turned on to use it. More details can be found [here](https://aka.ms/azdo-rm-workload-identity).
        :param pulumi.Input[str] service_endpoint_name: The Service Endpoint Name.
        """
        ...
    @overload
    def __init__(__self__,
                 resource_name: str,
                 args: ServiceEndpointAzureRMArgs,
                 opts: Optional[pulumi.ResourceOptions] = None):
        """
        Manages Manual or Automatic AzureRM service endpoint within Azure DevOps.

        ## Requirements (Manual AzureRM Service Endpoint)

        Before to create a service end point in Azure DevOps, you need to create a Service Principal in your Azure subscription.

        For detailed steps to create a service principal with Azure cli see the [documentation](https://docs.microsoft.com/en-us/cli/azure/create-an-azure-service-principal-azure-cli?view=azure-cli-latest)

        ## Example Usage
        ### Service Principal Manual AzureRM Service Endpoint (Subscription Scoped)

        ```python
        import pulumi
        import pulumi_azuredevops as azuredevops

        example_project = azuredevops.Project("exampleProject",
            visibility="private",
            version_control="Git",
            work_item_template="Agile",
            description="Managed by Terraform")
        example_service_endpoint_azure_rm = azuredevops.ServiceEndpointAzureRM("exampleServiceEndpointAzureRM",
            project_id=example_project.id,
            service_endpoint_name="Example AzureRM",
            description="Managed by Terraform",
            service_endpoint_authentication_scheme="ServicePrincipal",
            credentials=azuredevops.ServiceEndpointAzureRMCredentialsArgs(
                serviceprincipalid="00000000-0000-0000-0000-000000000000",
                serviceprincipalkey="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
            ),
            azurerm_spn_tenantid="00000000-0000-0000-0000-000000000000",
            azurerm_subscription_id="00000000-0000-0000-0000-000000000000",
            azurerm_subscription_name="Example Subscription Name")
        ```
        ### Service Principal Manual AzureRM Service Endpoint (ManagementGroup Scoped)

        ```python
        import pulumi
        import pulumi_azuredevops as azuredevops

        example_project = azuredevops.Project("exampleProject",
            visibility="private",
            version_control="Git",
            work_item_template="Agile",
            description="Managed by Terraform")
        example_service_endpoint_azure_rm = azuredevops.ServiceEndpointAzureRM("exampleServiceEndpointAzureRM",
            project_id=example_project.id,
            service_endpoint_name="Example AzureRM",
            description="Managed by Terraform",
            service_endpoint_authentication_scheme="ServicePrincipal",
            credentials=azuredevops.ServiceEndpointAzureRMCredentialsArgs(
                serviceprincipalid="00000000-0000-0000-0000-000000000000",
                serviceprincipalkey="xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx",
            ),
            azurerm_spn_tenantid="00000000-0000-0000-0000-000000000000",
            azurerm_management_group_id="managementGroup",
            azurerm_management_group_name="managementGroup")
        ```
        ### Service Principal Automatic AzureRM Service Endpoint

        ```python
        import pulumi
        import pulumi_azuredevops as azuredevops

        example_project = azuredevops.Project("exampleProject",
            visibility="private",
            version_control="Git",
            work_item_template="Agile")
        example_service_endpoint_azure_rm = azuredevops.ServiceEndpointAzureRM("exampleServiceEndpointAzureRM",
            project_id=example_project.id,
            service_endpoint_name="Example AzureRM",
            service_endpoint_authentication_scheme="ServicePrincipal",
            azurerm_spn_tenantid="00000000-0000-0000-0000-000000000000",
            azurerm_subscription_id="00000000-0000-0000-0000-000000000000",
            azurerm_subscription_name="Example Subscription Name")
        ```
        ### Workload Identity Federation Manual AzureRM Service Endpoint (Subscription Scoped)

        ```python
        import pulumi
        import pulumi_azuredevops as azuredevops
        import pulumi_azurerm as azurerm

        service_connection_name = "example-federated-sc"
        example_project = azuredevops.Project("exampleProject",
            visibility="private",
            version_control="Git",
            work_item_template="Agile",
            description="Managed by Terraform")
        identity = azurerm.index.Azurerm_resource_group("identity",
            name=identity,
            location=UK South)
        exampleazurerm_user_assigned_identity = azurerm.index.Azurerm_user_assigned_identity("exampleazurerm_user_assigned_identity",
            location=identity.location,
            name=example-identity,
            resource_group_name=azurerm_resource_group.identity.name)
        example_service_endpoint_azure_rm = azuredevops.ServiceEndpointAzureRM("exampleServiceEndpointAzureRM",
            project_id=example_project.id,
            service_endpoint_name=service_connection_name,
            description="Managed by Terraform",
            service_endpoint_authentication_scheme="WorkloadIdentityFederation",
            credentials=azuredevops.ServiceEndpointAzureRMCredentialsArgs(
                serviceprincipalid=exampleazurerm_user_assigned_identity["clientId"],
            ),
            azurerm_spn_tenantid="00000000-0000-0000-0000-000000000000",
            azurerm_subscription_id="00000000-0000-0000-0000-000000000000",
            azurerm_subscription_name="Example Subscription Name")
        exampleazurerm_federated_identity_credential = azurerm.index.Azurerm_federated_identity_credential("exampleazurerm_federated_identity_credential",
            name=example-federated-credential,
            resource_group_name=identity.name,
            parent_id=exampleazurerm_user_assigned_identity.id,
            audience=[api://AzureADTokenExchange],
            issuer=example_service_endpoint_azure_rm.workload_identity_federation_issuer,
            subject=example_service_endpoint_azure_rm.workload_identity_federation_subject)
        ```
        ### Workload Identity Federation Automatic AzureRM Service Endpoint

        ```python
        import pulumi
        import pulumi_azuredevops as azuredevops

        example_project = azuredevops.Project("exampleProject",
            visibility="private",
            version_control="Git",
            work_item_template="Agile")
        example_service_endpoint_azure_rm = azuredevops.ServiceEndpointAzureRM("exampleServiceEndpointAzureRM",
            project_id=example_project.id,
            service_endpoint_name="Example AzureRM",
            service_endpoint_authentication_scheme="WorkloadIdentityFederation",
            azurerm_spn_tenantid="00000000-0000-0000-0000-000000000000",
            azurerm_subscription_id="00000000-0000-0000-0000-000000000000",
            azurerm_subscription_name="Example Subscription Name")
        ```
        ### Managed Identity AzureRM Service Endpoint

        ```python
        import pulumi
        import pulumi_azuredevops as azuredevops

        example_project = azuredevops.Project("exampleProject",
            visibility="private",
            version_control="Git",
            work_item_template="Agile")
        example_service_endpoint_azure_rm = azuredevops.ServiceEndpointAzureRM("exampleServiceEndpointAzureRM",
            project_id=example_project.id,
            service_endpoint_name="Example AzureRM",
            service_endpoint_authentication_scheme="ManagedServiceIdentity",
            azurerm_spn_tenantid="00000000-0000-0000-0000-000000000000",
            azurerm_subscription_id="00000000-0000-0000-0000-000000000000",
            azurerm_subscription_name="Example Subscription Name")
        ```
        ## Relevant Links

        - [Azure DevOps Service REST API 7.0 - Service End points](https://docs.microsoft.com/en-us/rest/api/azure/devops/serviceendpoint/endpoints?view=azure-devops-rest-7.0)

        ## Import

        Azure DevOps Service Endpoint Azure Resource Manage can be imported using **projectID/serviceEndpointID** or **projectName/serviceEndpointID**

        ```sh
         $ pulumi import azuredevops:index/serviceEndpointAzureRM:ServiceEndpointAzureRM example 00000000-0000-0000-0000-000000000000/00000000-0000-0000-0000-000000000000
        ```

        :param str resource_name: The name of the resource.
        :param ServiceEndpointAzureRMArgs args: The arguments to use to populate this resource's properties.
        :param pulumi.ResourceOptions opts: Options for the resource.
        """
        ...
    def __init__(__self__, resource_name: str, *args, **kwargs):
        resource_args, opts = _utilities.get_resource_args_opts(ServiceEndpointAzureRMArgs, pulumi.ResourceOptions, *args, **kwargs)
        if resource_args is not None:
            __self__._internal_init(resource_name, opts, **resource_args.__dict__)
        else:
            __self__._internal_init(resource_name, *args, **kwargs)

    def _internal_init(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 authorization: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 azurerm_management_group_id: Optional[pulumi.Input[str]] = None,
                 azurerm_management_group_name: Optional[pulumi.Input[str]] = None,
                 azurerm_spn_tenantid: Optional[pulumi.Input[str]] = None,
                 azurerm_subscription_id: Optional[pulumi.Input[str]] = None,
                 azurerm_subscription_name: Optional[pulumi.Input[str]] = None,
                 credentials: Optional[pulumi.Input[pulumi.InputType['ServiceEndpointAzureRMCredentialsArgs']]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 environment: Optional[pulumi.Input[str]] = None,
                 project_id: Optional[pulumi.Input[str]] = None,
                 resource_group: Optional[pulumi.Input[str]] = None,
                 service_endpoint_authentication_scheme: Optional[pulumi.Input[str]] = None,
                 service_endpoint_name: Optional[pulumi.Input[str]] = None,
                 __props__=None):
        opts = pulumi.ResourceOptions.merge(_utilities.get_resource_opts_defaults(), opts)
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = ServiceEndpointAzureRMArgs.__new__(ServiceEndpointAzureRMArgs)

            __props__.__dict__["authorization"] = authorization
            __props__.__dict__["azurerm_management_group_id"] = azurerm_management_group_id
            __props__.__dict__["azurerm_management_group_name"] = azurerm_management_group_name
            if azurerm_spn_tenantid is None and not opts.urn:
                raise TypeError("Missing required property 'azurerm_spn_tenantid'")
            __props__.__dict__["azurerm_spn_tenantid"] = azurerm_spn_tenantid
            __props__.__dict__["azurerm_subscription_id"] = azurerm_subscription_id
            __props__.__dict__["azurerm_subscription_name"] = azurerm_subscription_name
            __props__.__dict__["credentials"] = credentials
            __props__.__dict__["description"] = description
            __props__.__dict__["environment"] = environment
            if project_id is None and not opts.urn:
                raise TypeError("Missing required property 'project_id'")
            __props__.__dict__["project_id"] = project_id
            __props__.__dict__["resource_group"] = resource_group
            __props__.__dict__["service_endpoint_authentication_scheme"] = service_endpoint_authentication_scheme
            if service_endpoint_name is None and not opts.urn:
                raise TypeError("Missing required property 'service_endpoint_name'")
            __props__.__dict__["service_endpoint_name"] = service_endpoint_name
            __props__.__dict__["workload_identity_federation_issuer"] = None
            __props__.__dict__["workload_identity_federation_subject"] = None
        alias_opts = pulumi.ResourceOptions(aliases=[pulumi.Alias(type_="azuredevops:ServiceEndpoint/azureRM:AzureRM")])
        opts = pulumi.ResourceOptions.merge(opts, alias_opts)
        super(ServiceEndpointAzureRM, __self__).__init__(
            'azuredevops:index/serviceEndpointAzureRM:ServiceEndpointAzureRM',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            authorization: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
            azurerm_management_group_id: Optional[pulumi.Input[str]] = None,
            azurerm_management_group_name: Optional[pulumi.Input[str]] = None,
            azurerm_spn_tenantid: Optional[pulumi.Input[str]] = None,
            azurerm_subscription_id: Optional[pulumi.Input[str]] = None,
            azurerm_subscription_name: Optional[pulumi.Input[str]] = None,
            credentials: Optional[pulumi.Input[pulumi.InputType['ServiceEndpointAzureRMCredentialsArgs']]] = None,
            description: Optional[pulumi.Input[str]] = None,
            environment: Optional[pulumi.Input[str]] = None,
            project_id: Optional[pulumi.Input[str]] = None,
            resource_group: Optional[pulumi.Input[str]] = None,
            service_endpoint_authentication_scheme: Optional[pulumi.Input[str]] = None,
            service_endpoint_name: Optional[pulumi.Input[str]] = None,
            workload_identity_federation_issuer: Optional[pulumi.Input[str]] = None,
            workload_identity_federation_subject: Optional[pulumi.Input[str]] = None) -> 'ServiceEndpointAzureRM':
        """
        Get an existing ServiceEndpointAzureRM resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] azurerm_management_group_id: The Management group ID of the Azure targets.
        :param pulumi.Input[str] azurerm_management_group_name: The Management group Name of the targets.
        :param pulumi.Input[str] azurerm_spn_tenantid: The Tenant ID if the service principal.
        :param pulumi.Input[str] azurerm_subscription_id: The Subscription ID of the Azure targets.
        :param pulumi.Input[str] azurerm_subscription_name: The Subscription Name of the targets.
        :param pulumi.Input[pulumi.InputType['ServiceEndpointAzureRMCredentialsArgs']] credentials: A `credentials` block.
        :param pulumi.Input[str] description: Service connection description.
        :param pulumi.Input[str] environment: The Cloud Environment to use. Defaults to `AzureCloud`. Possible values are `AzureCloud`, `AzureChinaCloud`. Changing this forces a new resource to be created.
               
               > **NOTE:** One of either `Subscription` scoped i.e. `azurerm_subscription_id`, `azurerm_subscription_name` or `ManagementGroup` scoped i.e. `azurerm_management_group_id`, `azurerm_management_group_name` values must be specified.
        :param pulumi.Input[str] project_id: The ID of the project.
        :param pulumi.Input[str] resource_group: The resource group used for scope of automatic service endpoint.
        :param pulumi.Input[str] service_endpoint_authentication_scheme: Specifies the type of azurerm endpoint, either `WorkloadIdentityFederation`, `ManagedServiceIdentity` or `ServicePrincipal`. Defaults to `ServicePrincipal` for backwards compatibility.
               
               > **NOTE:** The `WorkloadIdentityFederation` authentication scheme is currently in private preview. Your organisation must be part of the preview and the feature toggle must be turned on to use it. More details can be found [here](https://aka.ms/azdo-rm-workload-identity).
        :param pulumi.Input[str] service_endpoint_name: The Service Endpoint Name.
        :param pulumi.Input[str] workload_identity_federation_issuer: The issuer if `service_endpoint_authentication_scheme` is set to `WorkloadIdentityFederation`. This looks like `https://vstoken.dev.azure.com/00000000-0000-0000-0000-000000000000`, where the GUID is the Organization ID of your Azure DevOps Organisation.
        :param pulumi.Input[str] workload_identity_federation_subject: The subject if `service_endpoint_authentication_scheme` is set to `WorkloadIdentityFederation`. This looks like `sc://<organisation>/<project>/<service-connection-name>`.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = _ServiceEndpointAzureRMState.__new__(_ServiceEndpointAzureRMState)

        __props__.__dict__["authorization"] = authorization
        __props__.__dict__["azurerm_management_group_id"] = azurerm_management_group_id
        __props__.__dict__["azurerm_management_group_name"] = azurerm_management_group_name
        __props__.__dict__["azurerm_spn_tenantid"] = azurerm_spn_tenantid
        __props__.__dict__["azurerm_subscription_id"] = azurerm_subscription_id
        __props__.__dict__["azurerm_subscription_name"] = azurerm_subscription_name
        __props__.__dict__["credentials"] = credentials
        __props__.__dict__["description"] = description
        __props__.__dict__["environment"] = environment
        __props__.__dict__["project_id"] = project_id
        __props__.__dict__["resource_group"] = resource_group
        __props__.__dict__["service_endpoint_authentication_scheme"] = service_endpoint_authentication_scheme
        __props__.__dict__["service_endpoint_name"] = service_endpoint_name
        __props__.__dict__["workload_identity_federation_issuer"] = workload_identity_federation_issuer
        __props__.__dict__["workload_identity_federation_subject"] = workload_identity_federation_subject
        return ServiceEndpointAzureRM(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def authorization(self) -> pulumi.Output[Mapping[str, str]]:
        return pulumi.get(self, "authorization")

    @property
    @pulumi.getter(name="azurermManagementGroupId")
    def azurerm_management_group_id(self) -> pulumi.Output[Optional[str]]:
        """
        The Management group ID of the Azure targets.
        """
        return pulumi.get(self, "azurerm_management_group_id")

    @property
    @pulumi.getter(name="azurermManagementGroupName")
    def azurerm_management_group_name(self) -> pulumi.Output[Optional[str]]:
        """
        The Management group Name of the targets.
        """
        return pulumi.get(self, "azurerm_management_group_name")

    @property
    @pulumi.getter(name="azurermSpnTenantid")
    def azurerm_spn_tenantid(self) -> pulumi.Output[str]:
        """
        The Tenant ID if the service principal.
        """
        return pulumi.get(self, "azurerm_spn_tenantid")

    @property
    @pulumi.getter(name="azurermSubscriptionId")
    def azurerm_subscription_id(self) -> pulumi.Output[Optional[str]]:
        """
        The Subscription ID of the Azure targets.
        """
        return pulumi.get(self, "azurerm_subscription_id")

    @property
    @pulumi.getter(name="azurermSubscriptionName")
    def azurerm_subscription_name(self) -> pulumi.Output[Optional[str]]:
        """
        The Subscription Name of the targets.
        """
        return pulumi.get(self, "azurerm_subscription_name")

    @property
    @pulumi.getter
    def credentials(self) -> pulumi.Output[Optional['outputs.ServiceEndpointAzureRMCredentials']]:
        """
        A `credentials` block.
        """
        return pulumi.get(self, "credentials")

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[str]]:
        """
        Service connection description.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter
    def environment(self) -> pulumi.Output[Optional[str]]:
        """
        The Cloud Environment to use. Defaults to `AzureCloud`. Possible values are `AzureCloud`, `AzureChinaCloud`. Changing this forces a new resource to be created.

        > **NOTE:** One of either `Subscription` scoped i.e. `azurerm_subscription_id`, `azurerm_subscription_name` or `ManagementGroup` scoped i.e. `azurerm_management_group_id`, `azurerm_management_group_name` values must be specified.
        """
        return pulumi.get(self, "environment")

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> pulumi.Output[str]:
        """
        The ID of the project.
        """
        return pulumi.get(self, "project_id")

    @property
    @pulumi.getter(name="resourceGroup")
    def resource_group(self) -> pulumi.Output[Optional[str]]:
        """
        The resource group used for scope of automatic service endpoint.
        """
        return pulumi.get(self, "resource_group")

    @property
    @pulumi.getter(name="serviceEndpointAuthenticationScheme")
    def service_endpoint_authentication_scheme(self) -> pulumi.Output[Optional[str]]:
        """
        Specifies the type of azurerm endpoint, either `WorkloadIdentityFederation`, `ManagedServiceIdentity` or `ServicePrincipal`. Defaults to `ServicePrincipal` for backwards compatibility.

        > **NOTE:** The `WorkloadIdentityFederation` authentication scheme is currently in private preview. Your organisation must be part of the preview and the feature toggle must be turned on to use it. More details can be found [here](https://aka.ms/azdo-rm-workload-identity).
        """
        return pulumi.get(self, "service_endpoint_authentication_scheme")

    @property
    @pulumi.getter(name="serviceEndpointName")
    def service_endpoint_name(self) -> pulumi.Output[str]:
        """
        The Service Endpoint Name.
        """
        return pulumi.get(self, "service_endpoint_name")

    @property
    @pulumi.getter(name="workloadIdentityFederationIssuer")
    def workload_identity_federation_issuer(self) -> pulumi.Output[str]:
        """
        The issuer if `service_endpoint_authentication_scheme` is set to `WorkloadIdentityFederation`. This looks like `https://vstoken.dev.azure.com/00000000-0000-0000-0000-000000000000`, where the GUID is the Organization ID of your Azure DevOps Organisation.
        """
        return pulumi.get(self, "workload_identity_federation_issuer")

    @property
    @pulumi.getter(name="workloadIdentityFederationSubject")
    def workload_identity_federation_subject(self) -> pulumi.Output[str]:
        """
        The subject if `service_endpoint_authentication_scheme` is set to `WorkloadIdentityFederation`. This looks like `sc://<organisation>/<project>/<service-connection-name>`.
        """
        return pulumi.get(self, "workload_identity_federation_subject")

