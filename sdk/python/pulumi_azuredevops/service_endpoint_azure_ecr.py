# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import warnings
import pulumi
import pulumi.runtime
from typing import Any, Mapping, Optional, Sequence, Union
from . import _utilities, _tables

__all__ = ['ServiceEndpointAzureEcr']


class ServiceEndpointAzureEcr(pulumi.CustomResource):
    def __init__(__self__,
                 resource_name: str,
                 opts: Optional[pulumi.ResourceOptions] = None,
                 authorization: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
                 azurecr_name: Optional[pulumi.Input[str]] = None,
                 azurecr_spn_tenantid: Optional[pulumi.Input[str]] = None,
                 azurecr_subscription_id: Optional[pulumi.Input[str]] = None,
                 azurecr_subscription_name: Optional[pulumi.Input[str]] = None,
                 description: Optional[pulumi.Input[str]] = None,
                 project_id: Optional[pulumi.Input[str]] = None,
                 resource_group: Optional[pulumi.Input[str]] = None,
                 service_endpoint_name: Optional[pulumi.Input[str]] = None,
                 __props__=None,
                 __name__=None,
                 __opts__=None):
        """
        Manages a Azure Container Registry service endpoint within Azure DevOps.

        ## Example Usage

        ```python
        import pulumi
        import pulumi_azuredevops as azuredevops

        project = azuredevops.Project("project",
            visibility="private",
            version_control="Git",
            work_item_template="Agile")
        # azure container registry service connection
        azurecr = azuredevops.ServiceEndpointAzureEcr("azurecr",
            project_id=project.id,
            service_endpoint_name="Sample AzureCR",
            resource_group="sample-rg",
            azurecr_spn_tenantid="00000000-0000-0000-0000-000000000000",
            azurecr_name="sampleAcr",
            azurecr_subscription_id="00000000-0000-0000-0000-000000000000",
            azurecr_subscription_name="sampleSub")
        ```
        ## Relevant Links

        - [Azure DevOps Service REST API 5.1 - Service Endpoints](https://docs.microsoft.com/en-us/rest/api/azure/devops/serviceendpoint/endpoints?view=azure-devops-rest-5.1)
        - [Azure Container Registry REST API](https://docs.microsoft.com/en-us/rest/api/containerregistry/)

        ## Import

        Azure DevOps Service Endpoint Azure Container Registry can be imported using **projectID/serviceEndpointID** or **projectName/serviceEndpointID**

        ```sh
         $ pulumi import azuredevops:index/serviceEndpointAzureEcr:ServiceEndpointAzureEcr serviceendpoint 00000000-0000-0000-0000-000000000000/00000000-0000-0000-0000-000000000000
        ```

        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] azurecr_name: The Azure container registry name.
        :param pulumi.Input[str] azurecr_spn_tenantid: The tenant id of the service principal.
        :param pulumi.Input[str] azurecr_subscription_id: The subscription id of the Azure targets.
        :param pulumi.Input[str] azurecr_subscription_name: The subscription name of the Azure targets.
        :param pulumi.Input[str] description: The name you will use to refer to this service connection in task inputs.
        :param pulumi.Input[str] project_id: The project ID or project name.
        :param pulumi.Input[str] resource_group: The resource group to which the container registry belongs.
        :param pulumi.Input[str] service_endpoint_name: The name you will use to refer to this service connection in task inputs.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = _utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['authorization'] = authorization
            if azurecr_name is None and not opts.urn:
                raise TypeError("Missing required property 'azurecr_name'")
            __props__['azurecr_name'] = azurecr_name
            if azurecr_spn_tenantid is None and not opts.urn:
                raise TypeError("Missing required property 'azurecr_spn_tenantid'")
            __props__['azurecr_spn_tenantid'] = azurecr_spn_tenantid
            if azurecr_subscription_id is None and not opts.urn:
                raise TypeError("Missing required property 'azurecr_subscription_id'")
            __props__['azurecr_subscription_id'] = azurecr_subscription_id
            if azurecr_subscription_name is None and not opts.urn:
                raise TypeError("Missing required property 'azurecr_subscription_name'")
            __props__['azurecr_subscription_name'] = azurecr_subscription_name
            __props__['description'] = description
            if project_id is None and not opts.urn:
                raise TypeError("Missing required property 'project_id'")
            __props__['project_id'] = project_id
            if resource_group is None and not opts.urn:
                raise TypeError("Missing required property 'resource_group'")
            __props__['resource_group'] = resource_group
            if service_endpoint_name is None and not opts.urn:
                raise TypeError("Missing required property 'service_endpoint_name'")
            __props__['service_endpoint_name'] = service_endpoint_name
        super(ServiceEndpointAzureEcr, __self__).__init__(
            'azuredevops:index/serviceEndpointAzureEcr:ServiceEndpointAzureEcr',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name: str,
            id: pulumi.Input[str],
            opts: Optional[pulumi.ResourceOptions] = None,
            authorization: Optional[pulumi.Input[Mapping[str, pulumi.Input[str]]]] = None,
            azurecr_name: Optional[pulumi.Input[str]] = None,
            azurecr_spn_tenantid: Optional[pulumi.Input[str]] = None,
            azurecr_subscription_id: Optional[pulumi.Input[str]] = None,
            azurecr_subscription_name: Optional[pulumi.Input[str]] = None,
            description: Optional[pulumi.Input[str]] = None,
            project_id: Optional[pulumi.Input[str]] = None,
            resource_group: Optional[pulumi.Input[str]] = None,
            service_endpoint_name: Optional[pulumi.Input[str]] = None) -> 'ServiceEndpointAzureEcr':
        """
        Get an existing ServiceEndpointAzureEcr resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param pulumi.Input[str] id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] azurecr_name: The Azure container registry name.
        :param pulumi.Input[str] azurecr_spn_tenantid: The tenant id of the service principal.
        :param pulumi.Input[str] azurecr_subscription_id: The subscription id of the Azure targets.
        :param pulumi.Input[str] azurecr_subscription_name: The subscription name of the Azure targets.
        :param pulumi.Input[str] description: The name you will use to refer to this service connection in task inputs.
        :param pulumi.Input[str] project_id: The project ID or project name.
        :param pulumi.Input[str] resource_group: The resource group to which the container registry belongs.
        :param pulumi.Input[str] service_endpoint_name: The name you will use to refer to this service connection in task inputs.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["authorization"] = authorization
        __props__["azurecr_name"] = azurecr_name
        __props__["azurecr_spn_tenantid"] = azurecr_spn_tenantid
        __props__["azurecr_subscription_id"] = azurecr_subscription_id
        __props__["azurecr_subscription_name"] = azurecr_subscription_name
        __props__["description"] = description
        __props__["project_id"] = project_id
        __props__["resource_group"] = resource_group
        __props__["service_endpoint_name"] = service_endpoint_name
        return ServiceEndpointAzureEcr(resource_name, opts=opts, __props__=__props__)

    @property
    @pulumi.getter
    def authorization(self) -> pulumi.Output[Mapping[str, str]]:
        return pulumi.get(self, "authorization")

    @property
    @pulumi.getter(name="azurecrName")
    def azurecr_name(self) -> pulumi.Output[str]:
        """
        The Azure container registry name.
        """
        return pulumi.get(self, "azurecr_name")

    @property
    @pulumi.getter(name="azurecrSpnTenantid")
    def azurecr_spn_tenantid(self) -> pulumi.Output[str]:
        """
        The tenant id of the service principal.
        """
        return pulumi.get(self, "azurecr_spn_tenantid")

    @property
    @pulumi.getter(name="azurecrSubscriptionId")
    def azurecr_subscription_id(self) -> pulumi.Output[str]:
        """
        The subscription id of the Azure targets.
        """
        return pulumi.get(self, "azurecr_subscription_id")

    @property
    @pulumi.getter(name="azurecrSubscriptionName")
    def azurecr_subscription_name(self) -> pulumi.Output[str]:
        """
        The subscription name of the Azure targets.
        """
        return pulumi.get(self, "azurecr_subscription_name")

    @property
    @pulumi.getter
    def description(self) -> pulumi.Output[Optional[str]]:
        """
        The name you will use to refer to this service connection in task inputs.
        """
        return pulumi.get(self, "description")

    @property
    @pulumi.getter(name="projectId")
    def project_id(self) -> pulumi.Output[str]:
        """
        The project ID or project name.
        """
        return pulumi.get(self, "project_id")

    @property
    @pulumi.getter(name="resourceGroup")
    def resource_group(self) -> pulumi.Output[str]:
        """
        The resource group to which the container registry belongs.
        """
        return pulumi.get(self, "resource_group")

    @property
    @pulumi.getter(name="serviceEndpointName")
    def service_endpoint_name(self) -> pulumi.Output[str]:
        """
        The name you will use to refer to this service connection in task inputs.
        """
        return pulumi.get(self, "service_endpoint_name")

    def translate_output_property(self, prop):
        return _tables.CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return _tables.SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

