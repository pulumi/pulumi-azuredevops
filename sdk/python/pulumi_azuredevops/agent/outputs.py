# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import copy
import warnings
import pulumi
import pulumi.runtime
from typing import Any, Callable, Mapping, Optional, Sequence, Union, overload
from .. import _utilities

__all__ = [
    'GetPoolsAgentPoolResult',
]

@pulumi.output_type
class GetPoolsAgentPoolResult(dict):
    def __init__(__self__, *,
                 auto_provision: bool,
                 auto_update: bool,
                 id: int,
                 name: str,
                 pool_type: str):
        """
        :param bool auto_provision: Specifies whether or not a queue should be automatically provisioned for each project collection.
        :param bool auto_update: Specifies whether or not agents within the pool should be automatically updated.
        :param str name: The name of the agent pool
        :param str pool_type: Specifies whether the agent pool type is Automation or Deployment.
        """
        GetPoolsAgentPoolResult._configure(
            lambda key, value: pulumi.set(__self__, key, value),
            auto_provision=auto_provision,
            auto_update=auto_update,
            id=id,
            name=name,
            pool_type=pool_type,
        )
    @staticmethod
    def _configure(
             _setter: Callable[[Any, Any], None],
             auto_provision: Optional[bool] = None,
             auto_update: Optional[bool] = None,
             id: Optional[int] = None,
             name: Optional[str] = None,
             pool_type: Optional[str] = None,
             opts: Optional[pulumi.ResourceOptions] = None,
             **kwargs):
        if auto_provision is None and 'autoProvision' in kwargs:
            auto_provision = kwargs['autoProvision']
        if auto_provision is None:
            raise TypeError("Missing 'auto_provision' argument")
        if auto_update is None and 'autoUpdate' in kwargs:
            auto_update = kwargs['autoUpdate']
        if auto_update is None:
            raise TypeError("Missing 'auto_update' argument")
        if id is None:
            raise TypeError("Missing 'id' argument")
        if name is None:
            raise TypeError("Missing 'name' argument")
        if pool_type is None and 'poolType' in kwargs:
            pool_type = kwargs['poolType']
        if pool_type is None:
            raise TypeError("Missing 'pool_type' argument")

        _setter("auto_provision", auto_provision)
        _setter("auto_update", auto_update)
        _setter("id", id)
        _setter("name", name)
        _setter("pool_type", pool_type)

    @property
    @pulumi.getter(name="autoProvision")
    def auto_provision(self) -> bool:
        """
        Specifies whether or not a queue should be automatically provisioned for each project collection.
        """
        return pulumi.get(self, "auto_provision")

    @property
    @pulumi.getter(name="autoUpdate")
    def auto_update(self) -> bool:
        """
        Specifies whether or not agents within the pool should be automatically updated.
        """
        return pulumi.get(self, "auto_update")

    @property
    @pulumi.getter
    def id(self) -> int:
        return pulumi.get(self, "id")

    @property
    @pulumi.getter
    def name(self) -> str:
        """
        The name of the agent pool
        """
        return pulumi.get(self, "name")

    @property
    @pulumi.getter(name="poolType")
    def pool_type(self) -> str:
        """
        Specifies whether the agent pool type is Automation or Deployment.
        """
        return pulumi.get(self, "pool_type")


