// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuredevops.inputs;

import com.pulumi.azuredevops.inputs.BuildDefinitionJobTargetExecutionOptionsArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BuildDefinitionJobTargetArgs extends com.pulumi.resources.ResourceArgs {

    public static final BuildDefinitionJobTargetArgs Empty = new BuildDefinitionJobTargetArgs();

    /**
     * A list of demands that represents the agent capabilities required by this build. Example: `git`
     * 
     */
    @Import(name="demands")
    private @Nullable Output<List<String>> demands;

    /**
     * @return A list of demands that represents the agent capabilities required by this build. Example: `git`
     * 
     */
    public Optional<Output<List<String>>> demands() {
        return Optional.ofNullable(this.demands);
    }

    /**
     * A `execution_options` blocks as documented below.
     * 
     */
    @Import(name="executionOptions", required=true)
    private Output<BuildDefinitionJobTargetExecutionOptionsArgs> executionOptions;

    /**
     * @return A `execution_options` blocks as documented below.
     * 
     */
    public Output<BuildDefinitionJobTargetExecutionOptionsArgs> executionOptions() {
        return this.executionOptions;
    }

    /**
     * The job type. Possible values: `AgentJob`, `AgentlessJob`
     * 
     */
    @Import(name="type", required=true)
    private Output<String> type;

    /**
     * @return The job type. Possible values: `AgentJob`, `AgentlessJob`
     * 
     */
    public Output<String> type() {
        return this.type;
    }

    private BuildDefinitionJobTargetArgs() {}

    private BuildDefinitionJobTargetArgs(BuildDefinitionJobTargetArgs $) {
        this.demands = $.demands;
        this.executionOptions = $.executionOptions;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BuildDefinitionJobTargetArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BuildDefinitionJobTargetArgs $;

        public Builder() {
            $ = new BuildDefinitionJobTargetArgs();
        }

        public Builder(BuildDefinitionJobTargetArgs defaults) {
            $ = new BuildDefinitionJobTargetArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param demands A list of demands that represents the agent capabilities required by this build. Example: `git`
         * 
         * @return builder
         * 
         */
        public Builder demands(@Nullable Output<List<String>> demands) {
            $.demands = demands;
            return this;
        }

        /**
         * @param demands A list of demands that represents the agent capabilities required by this build. Example: `git`
         * 
         * @return builder
         * 
         */
        public Builder demands(List<String> demands) {
            return demands(Output.of(demands));
        }

        /**
         * @param demands A list of demands that represents the agent capabilities required by this build. Example: `git`
         * 
         * @return builder
         * 
         */
        public Builder demands(String... demands) {
            return demands(List.of(demands));
        }

        /**
         * @param executionOptions A `execution_options` blocks as documented below.
         * 
         * @return builder
         * 
         */
        public Builder executionOptions(Output<BuildDefinitionJobTargetExecutionOptionsArgs> executionOptions) {
            $.executionOptions = executionOptions;
            return this;
        }

        /**
         * @param executionOptions A `execution_options` blocks as documented below.
         * 
         * @return builder
         * 
         */
        public Builder executionOptions(BuildDefinitionJobTargetExecutionOptionsArgs executionOptions) {
            return executionOptions(Output.of(executionOptions));
        }

        /**
         * @param type The job type. Possible values: `AgentJob`, `AgentlessJob`
         * 
         * @return builder
         * 
         */
        public Builder type(Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The job type. Possible values: `AgentJob`, `AgentlessJob`
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public BuildDefinitionJobTargetArgs build() {
            if ($.executionOptions == null) {
                throw new MissingRequiredPropertyException("BuildDefinitionJobTargetArgs", "executionOptions");
            }
            if ($.type == null) {
                throw new MissingRequiredPropertyException("BuildDefinitionJobTargetArgs", "type");
            }
            return $;
        }
    }

}
