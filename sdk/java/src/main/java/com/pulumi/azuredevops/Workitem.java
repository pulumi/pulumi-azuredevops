// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuredevops;

import com.pulumi.azuredevops.Utilities;
import com.pulumi.azuredevops.WorkitemArgs;
import com.pulumi.azuredevops.inputs.WorkitemState;
import com.pulumi.azuredevops.outputs.WorkitemRelation;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Map;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Manages a Work Item in Azure Devops.
 * 
 * ## Example Usage
 * 
 * ### Basic usage
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azuredevops.Project;
 * import com.pulumi.azuredevops.ProjectArgs;
 * import com.pulumi.azuredevops.Workitem;
 * import com.pulumi.azuredevops.WorkitemArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Project("example", ProjectArgs.builder()
 *             .name("Example Project")
 *             .workItemTemplate("Agile")
 *             .versionControl("Git")
 *             .visibility("private")
 *             .description("Managed by Pulumi")
 *             .build());
 * 
 *         var exampleWorkitem = new Workitem("exampleWorkitem", WorkitemArgs.builder()
 *             .projectId(exampleAzuredevopsProject.id())
 *             .title("Example Work Item")
 *             .type("Issue")
 *             .state("Active")
 *             .tags("Tag")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ### With custom fields
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azuredevops.Project;
 * import com.pulumi.azuredevops.ProjectArgs;
 * import com.pulumi.azuredevops.Workitem;
 * import com.pulumi.azuredevops.WorkitemArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Project("example", ProjectArgs.builder()
 *             .name("Example Project")
 *             .workItemTemplate("Agile")
 *             .versionControl("Git")
 *             .visibility("private")
 *             .description("Managed by Pulumi")
 *             .build());
 * 
 *         var exampleWorkitem = new Workitem("exampleWorkitem", WorkitemArgs.builder()
 *             .projectId(exampleAzuredevopsProject.id())
 *             .title("Example Work Item")
 *             .type("Issue")
 *             .state("Active")
 *             .tags("Tag")
 *             .customFields(Map.of("example", "example"))
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * ### With Parent Work Item
 * 
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azuredevops.Project;
 * import com.pulumi.azuredevops.ProjectArgs;
 * import com.pulumi.azuredevops.Workitem;
 * import com.pulumi.azuredevops.WorkitemArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Project("example", ProjectArgs.builder()
 *             .name("Example Project")
 *             .workItemTemplate("Agile")
 *             .versionControl("Git")
 *             .visibility("private")
 *             .build());
 * 
 *         var epic = new Workitem("epic", WorkitemArgs.builder()
 *             .projectId(example.id())
 *             .title("Example EPIC Title")
 *             .type("Epic")
 *             .state("New")
 *             .build());
 * 
 *         var exampleWorkitem = new Workitem("exampleWorkitem", WorkitemArgs.builder()
 *             .projectId(example.id())
 *             .title("Example Work Item")
 *             .type("Issue")
 *             .state("Active")
 *             .tags("Tag")
 *             .parentId(epic.id())
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Import
 * 
 * Azure DevOps Work Item can be imported using the Project ID and Work Item ID, e.g.
 * 
 * ```sh
 * $ pulumi import azuredevops:index/workitem:Workitem example 00000000-0000-0000-0000-000000000000/0
 * ```
 * 
 */
@ResourceType(type="azuredevops:index/workitem:Workitem")
public class Workitem extends com.pulumi.resources.CustomResource {
    /**
     * Specifies the area where the Work Item is used.
     * 
     */
    @Export(name="areaPath", refs={String.class}, tree="[0]")
    private Output<String> areaPath;

    /**
     * @return Specifies the area where the Work Item is used.
     * 
     */
    public Output<String> areaPath() {
        return this.areaPath;
    }
    /**
     * Specifies a list with Custom Fields for the Work Item.
     * 
     */
    @Export(name="customFields", refs={Map.class,String.class}, tree="[0,1,1]")
    private Output</* @Nullable */ Map<String,String>> customFields;

    /**
     * @return Specifies a list with Custom Fields for the Work Item.
     * 
     */
    public Output<Optional<Map<String,String>>> customFields() {
        return Codegen.optional(this.customFields);
    }
    /**
     * Specifies the iteration in which the Work Item is used.
     * 
     */
    @Export(name="iterationPath", refs={String.class}, tree="[0]")
    private Output<String> iterationPath;

    /**
     * @return Specifies the iteration in which the Work Item is used.
     * 
     */
    public Output<String> iterationPath() {
        return this.iterationPath;
    }
    /**
     * The parent work item.
     * 
     */
    @Export(name="parentId", refs={Integer.class}, tree="[0]")
    private Output</* @Nullable */ Integer> parentId;

    /**
     * @return The parent work item.
     * 
     */
    public Output<Optional<Integer>> parentId() {
        return Codegen.optional(this.parentId);
    }
    /**
     * The ID of the Project.
     * 
     */
    @Export(name="projectId", refs={String.class}, tree="[0]")
    private Output<String> projectId;

    /**
     * @return The ID of the Project.
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }
    /**
     * A `relations` blocks as documented below.
     * 
     */
    @Export(name="relations", refs={List.class,WorkitemRelation.class}, tree="[0,1]")
    private Output<List<WorkitemRelation>> relations;

    /**
     * @return A `relations` blocks as documented below.
     * 
     */
    public Output<List<WorkitemRelation>> relations() {
        return this.relations;
    }
    /**
     * The state of the Work Item. The four main states that are defined for the User Story (`Agile`) are `New`, `Active`, `Resolved`, and `Closed`. See [Workflow states](https://learn.microsoft.com/en-us/azure/devops/boards/work-items/workflow-and-state-categories?view=azure-devops&amp;tabs=agile-process#workflow-states) for more details.
     * 
     */
    @Export(name="state", refs={String.class}, tree="[0]")
    private Output<String> state;

    /**
     * @return The state of the Work Item. The four main states that are defined for the User Story (`Agile`) are `New`, `Active`, `Resolved`, and `Closed`. See [Workflow states](https://learn.microsoft.com/en-us/azure/devops/boards/work-items/workflow-and-state-categories?view=azure-devops&amp;tabs=agile-process#workflow-states) for more details.
     * 
     */
    public Output<String> state() {
        return this.state;
    }
    /**
     * Specifies a list of Tags.
     * 
     */
    @Export(name="tags", refs={List.class,String.class}, tree="[0,1]")
    private Output</* @Nullable */ List<String>> tags;

    /**
     * @return Specifies a list of Tags.
     * 
     */
    public Output<Optional<List<String>>> tags() {
        return Codegen.optional(this.tags);
    }
    /**
     * The Title of the Work Item.
     * 
     */
    @Export(name="title", refs={String.class}, tree="[0]")
    private Output<String> title;

    /**
     * @return The Title of the Work Item.
     * 
     */
    public Output<String> title() {
        return this.title;
    }
    /**
     * The Type of the Work Item. The work item type varies depending on the process used when creating the project(`Agile`, `Basic`, `Scrum`, `Scrum`). See [Work Item Types](https://learn.microsoft.com/en-us/azure/devops/boards/work-items/about-work-items?view=azure-devops) for more details.
     * 
     */
    @Export(name="type", refs={String.class}, tree="[0]")
    private Output<String> type;

    /**
     * @return The Type of the Work Item. The work item type varies depending on the process used when creating the project(`Agile`, `Basic`, `Scrum`, `Scrum`). See [Work Item Types](https://learn.microsoft.com/en-us/azure/devops/boards/work-items/about-work-items?view=azure-devops) for more details.
     * 
     */
    public Output<String> type() {
        return this.type;
    }
    /**
     * The URL of the Work Item.
     * 
     */
    @Export(name="url", refs={String.class}, tree="[0]")
    private Output<String> url;

    /**
     * @return The URL of the Work Item.
     * 
     */
    public Output<String> url() {
        return this.url;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Workitem(java.lang.String name) {
        this(name, WorkitemArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Workitem(java.lang.String name, WorkitemArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Workitem(java.lang.String name, WorkitemArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azuredevops:index/workitem:Workitem", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Workitem(java.lang.String name, Output<java.lang.String> id, @Nullable WorkitemState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azuredevops:index/workitem:Workitem", name, state, makeResourceOptions(options, id), false);
    }

    private static WorkitemArgs makeArgs(WorkitemArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? WorkitemArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Workitem get(java.lang.String name, Output<java.lang.String> id, @Nullable WorkitemState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Workitem(name, id, state, options);
    }
}
