// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuredevops.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetIdentityUsersArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetIdentityUsersArgs Empty = new GetIdentityUsersArgs();

    /**
     * The PrincipalName of this identity member from the source provider.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The PrincipalName of this identity member from the source provider.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The type of search to perform. Default is `General`. Possible values are `AccountName`, `DisplayName`, and `MailAddress`.
     * 
     */
    @Import(name="searchFilter")
    private @Nullable Output<String> searchFilter;

    /**
     * @return The type of search to perform. Default is `General`. Possible values are `AccountName`, `DisplayName`, and `MailAddress`.
     * 
     */
    public Optional<Output<String>> searchFilter() {
        return Optional.ofNullable(this.searchFilter);
    }

    private GetIdentityUsersArgs() {}

    private GetIdentityUsersArgs(GetIdentityUsersArgs $) {
        this.name = $.name;
        this.searchFilter = $.searchFilter;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetIdentityUsersArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetIdentityUsersArgs $;

        public Builder() {
            $ = new GetIdentityUsersArgs();
        }

        public Builder(GetIdentityUsersArgs defaults) {
            $ = new GetIdentityUsersArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The PrincipalName of this identity member from the source provider.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The PrincipalName of this identity member from the source provider.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param searchFilter The type of search to perform. Default is `General`. Possible values are `AccountName`, `DisplayName`, and `MailAddress`.
         * 
         * @return builder
         * 
         */
        public Builder searchFilter(@Nullable Output<String> searchFilter) {
            $.searchFilter = searchFilter;
            return this;
        }

        /**
         * @param searchFilter The type of search to perform. Default is `General`. Possible values are `AccountName`, `DisplayName`, and `MailAddress`.
         * 
         * @return builder
         * 
         */
        public Builder searchFilter(String searchFilter) {
            return searchFilter(Output.of(searchFilter));
        }

        public GetIdentityUsersArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetIdentityUsersArgs", "name");
            }
            return $;
        }
    }

}
