// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuredevops.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ProjectPermissionsState extends com.pulumi.resources.ResourceArgs {

    public static final ProjectPermissionsState Empty = new ProjectPermissionsState();

    /**
     * the permissions to assign. The following permissions are available
     * &lt;table&gt;
     * &lt;thead&gt;
     * &lt;tr&gt;
     * &lt;th&gt;Permission&lt;/th&gt;
     * &lt;th&gt;Description&lt;/th&gt;
     * &lt;/tr&gt;
     * &lt;/thead&gt;
     * &lt;tbody&gt;
     * &lt;tr&gt;
     * &lt;td&gt;GENERIC_READ&lt;/td&gt;
     * &lt;td&gt;View project-level information&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;GENERIC_WRITE&lt;/td&gt;
     * &lt;td&gt;Edit project-level information&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;DELETE&lt;/td&gt;
     * &lt;td&gt;Delete team project&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;PUBLISH_TEST_RESULTS&lt;/td&gt;
     * &lt;td&gt;Create test runs&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;ADMINISTER_BUILD&lt;/td&gt;
     * &lt;td&gt;Administer a build&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;START_BUILD&lt;/td&gt;
     * &lt;td&gt;Start a build&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;EDIT_BUILD_STATUS&lt;/td&gt;
     * &lt;td&gt;Edit build quality&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;UPDATE_BUILD&lt;/td&gt;
     * &lt;td&gt;Write to build operational store&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;DELETE_TEST_RESULTS&lt;/td&gt;
     * &lt;td&gt;Delete test runs&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;VIEW_TEST_RESULTS&lt;/td&gt;
     * &lt;td&gt;View test runs&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;MANAGE_TEST_ENVIRONMENTS&lt;/td&gt;
     * &lt;td&gt;Manage test environments&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;MANAGE_TEST_CONFIGURATIONS&lt;/td&gt;
     * &lt;td&gt;Manage test configurations&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;WORK_ITEM_DELETE&lt;/td&gt;
     * &lt;td&gt;Delete and restore work items&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;WORK_ITEM_MOVE&lt;/td&gt;
     * &lt;td&gt;Move work items out of this project&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;WORK_ITEM_PERMANENTLY_DELETE&lt;/td&gt;
     * &lt;td&gt;Permanently delete work items&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;RENAME&lt;/td&gt;
     * &lt;td&gt;Rename team project&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;MANAGE_PROPERTIES&lt;/td&gt;
     * &lt;td&gt;Manage project properties&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;MANAGE_SYSTEM_PROPERTIES&lt;/td&gt;
     * &lt;td&gt;Manage system project properties&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;BYPASS_PROPERTY_CACHE&lt;/td&gt;
     * &lt;td&gt;Bypass project property cache&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;BYPASS_RULES&lt;/td&gt;
     * &lt;td&gt;Bypass rules on work item updates&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;SUPPRESS_NOTIFICATIONS&lt;/td&gt;
     * &lt;td&gt;Suppress notifications for work item updates&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;UPDATE_VISIBILITY&lt;/td&gt;
     * &lt;td&gt;Update project visibility&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;CHANGE_PROCESS&lt;/td&gt;
     * &lt;td&gt;Change process of team project.&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;AGILETOOLS_BACKLOG&lt;/td&gt;
     * &lt;td&gt;Agile backlog management.&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;AGILETOOLS_PLANS&lt;/td&gt;
     * &lt;td&gt;Agile plans.&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;/tbody&gt;
     * &lt;/table&gt;
     * 
     */
    @Import(name="permissions")
    private @Nullable Output<Map<String,String>> permissions;

    /**
     * @return the permissions to assign. The following permissions are available
     * &lt;table&gt;
     * &lt;thead&gt;
     * &lt;tr&gt;
     * &lt;th&gt;Permission&lt;/th&gt;
     * &lt;th&gt;Description&lt;/th&gt;
     * &lt;/tr&gt;
     * &lt;/thead&gt;
     * &lt;tbody&gt;
     * &lt;tr&gt;
     * &lt;td&gt;GENERIC_READ&lt;/td&gt;
     * &lt;td&gt;View project-level information&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;GENERIC_WRITE&lt;/td&gt;
     * &lt;td&gt;Edit project-level information&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;DELETE&lt;/td&gt;
     * &lt;td&gt;Delete team project&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;PUBLISH_TEST_RESULTS&lt;/td&gt;
     * &lt;td&gt;Create test runs&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;ADMINISTER_BUILD&lt;/td&gt;
     * &lt;td&gt;Administer a build&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;START_BUILD&lt;/td&gt;
     * &lt;td&gt;Start a build&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;EDIT_BUILD_STATUS&lt;/td&gt;
     * &lt;td&gt;Edit build quality&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;UPDATE_BUILD&lt;/td&gt;
     * &lt;td&gt;Write to build operational store&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;DELETE_TEST_RESULTS&lt;/td&gt;
     * &lt;td&gt;Delete test runs&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;VIEW_TEST_RESULTS&lt;/td&gt;
     * &lt;td&gt;View test runs&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;MANAGE_TEST_ENVIRONMENTS&lt;/td&gt;
     * &lt;td&gt;Manage test environments&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;MANAGE_TEST_CONFIGURATIONS&lt;/td&gt;
     * &lt;td&gt;Manage test configurations&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;WORK_ITEM_DELETE&lt;/td&gt;
     * &lt;td&gt;Delete and restore work items&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;WORK_ITEM_MOVE&lt;/td&gt;
     * &lt;td&gt;Move work items out of this project&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;WORK_ITEM_PERMANENTLY_DELETE&lt;/td&gt;
     * &lt;td&gt;Permanently delete work items&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;RENAME&lt;/td&gt;
     * &lt;td&gt;Rename team project&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;MANAGE_PROPERTIES&lt;/td&gt;
     * &lt;td&gt;Manage project properties&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;MANAGE_SYSTEM_PROPERTIES&lt;/td&gt;
     * &lt;td&gt;Manage system project properties&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;BYPASS_PROPERTY_CACHE&lt;/td&gt;
     * &lt;td&gt;Bypass project property cache&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;BYPASS_RULES&lt;/td&gt;
     * &lt;td&gt;Bypass rules on work item updates&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;SUPPRESS_NOTIFICATIONS&lt;/td&gt;
     * &lt;td&gt;Suppress notifications for work item updates&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;UPDATE_VISIBILITY&lt;/td&gt;
     * &lt;td&gt;Update project visibility&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;CHANGE_PROCESS&lt;/td&gt;
     * &lt;td&gt;Change process of team project.&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;AGILETOOLS_BACKLOG&lt;/td&gt;
     * &lt;td&gt;Agile backlog management.&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;tr&gt;
     * &lt;td&gt;AGILETOOLS_PLANS&lt;/td&gt;
     * &lt;td&gt;Agile plans.&lt;/td&gt;
     * &lt;/tr&gt;
     * &lt;/tbody&gt;
     * &lt;/table&gt;
     * 
     */
    public Optional<Output<Map<String,String>>> permissions() {
        return Optional.ofNullable(this.permissions);
    }

    /**
     * The **group** principal to assign the permissions.
     * 
     */
    @Import(name="principal")
    private @Nullable Output<String> principal;

    /**
     * @return The **group** principal to assign the permissions.
     * 
     */
    public Optional<Output<String>> principal() {
        return Optional.ofNullable(this.principal);
    }

    /**
     * The ID of the project to assign the permissions.
     * 
     */
    @Import(name="projectId")
    private @Nullable Output<String> projectId;

    /**
     * @return The ID of the project to assign the permissions.
     * 
     */
    public Optional<Output<String>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    /**
     * Replace (`true`) or merge (`false`) the permissions. Default: `true`
     * 
     */
    @Import(name="replace")
    private @Nullable Output<Boolean> replace;

    /**
     * @return Replace (`true`) or merge (`false`) the permissions. Default: `true`
     * 
     */
    public Optional<Output<Boolean>> replace() {
        return Optional.ofNullable(this.replace);
    }

    private ProjectPermissionsState() {}

    private ProjectPermissionsState(ProjectPermissionsState $) {
        this.permissions = $.permissions;
        this.principal = $.principal;
        this.projectId = $.projectId;
        this.replace = $.replace;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ProjectPermissionsState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ProjectPermissionsState $;

        public Builder() {
            $ = new ProjectPermissionsState();
        }

        public Builder(ProjectPermissionsState defaults) {
            $ = new ProjectPermissionsState(Objects.requireNonNull(defaults));
        }

        /**
         * @param permissions the permissions to assign. The following permissions are available
         * &lt;table&gt;
         * &lt;thead&gt;
         * &lt;tr&gt;
         * &lt;th&gt;Permission&lt;/th&gt;
         * &lt;th&gt;Description&lt;/th&gt;
         * &lt;/tr&gt;
         * &lt;/thead&gt;
         * &lt;tbody&gt;
         * &lt;tr&gt;
         * &lt;td&gt;GENERIC_READ&lt;/td&gt;
         * &lt;td&gt;View project-level information&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;GENERIC_WRITE&lt;/td&gt;
         * &lt;td&gt;Edit project-level information&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;DELETE&lt;/td&gt;
         * &lt;td&gt;Delete team project&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;PUBLISH_TEST_RESULTS&lt;/td&gt;
         * &lt;td&gt;Create test runs&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;ADMINISTER_BUILD&lt;/td&gt;
         * &lt;td&gt;Administer a build&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;START_BUILD&lt;/td&gt;
         * &lt;td&gt;Start a build&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;EDIT_BUILD_STATUS&lt;/td&gt;
         * &lt;td&gt;Edit build quality&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;UPDATE_BUILD&lt;/td&gt;
         * &lt;td&gt;Write to build operational store&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;DELETE_TEST_RESULTS&lt;/td&gt;
         * &lt;td&gt;Delete test runs&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;VIEW_TEST_RESULTS&lt;/td&gt;
         * &lt;td&gt;View test runs&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;MANAGE_TEST_ENVIRONMENTS&lt;/td&gt;
         * &lt;td&gt;Manage test environments&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;MANAGE_TEST_CONFIGURATIONS&lt;/td&gt;
         * &lt;td&gt;Manage test configurations&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;WORK_ITEM_DELETE&lt;/td&gt;
         * &lt;td&gt;Delete and restore work items&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;WORK_ITEM_MOVE&lt;/td&gt;
         * &lt;td&gt;Move work items out of this project&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;WORK_ITEM_PERMANENTLY_DELETE&lt;/td&gt;
         * &lt;td&gt;Permanently delete work items&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;RENAME&lt;/td&gt;
         * &lt;td&gt;Rename team project&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;MANAGE_PROPERTIES&lt;/td&gt;
         * &lt;td&gt;Manage project properties&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;MANAGE_SYSTEM_PROPERTIES&lt;/td&gt;
         * &lt;td&gt;Manage system project properties&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;BYPASS_PROPERTY_CACHE&lt;/td&gt;
         * &lt;td&gt;Bypass project property cache&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;BYPASS_RULES&lt;/td&gt;
         * &lt;td&gt;Bypass rules on work item updates&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;SUPPRESS_NOTIFICATIONS&lt;/td&gt;
         * &lt;td&gt;Suppress notifications for work item updates&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;UPDATE_VISIBILITY&lt;/td&gt;
         * &lt;td&gt;Update project visibility&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;CHANGE_PROCESS&lt;/td&gt;
         * &lt;td&gt;Change process of team project.&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;AGILETOOLS_BACKLOG&lt;/td&gt;
         * &lt;td&gt;Agile backlog management.&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;AGILETOOLS_PLANS&lt;/td&gt;
         * &lt;td&gt;Agile plans.&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;/tbody&gt;
         * &lt;/table&gt;
         * 
         * @return builder
         * 
         */
        public Builder permissions(@Nullable Output<Map<String,String>> permissions) {
            $.permissions = permissions;
            return this;
        }

        /**
         * @param permissions the permissions to assign. The following permissions are available
         * &lt;table&gt;
         * &lt;thead&gt;
         * &lt;tr&gt;
         * &lt;th&gt;Permission&lt;/th&gt;
         * &lt;th&gt;Description&lt;/th&gt;
         * &lt;/tr&gt;
         * &lt;/thead&gt;
         * &lt;tbody&gt;
         * &lt;tr&gt;
         * &lt;td&gt;GENERIC_READ&lt;/td&gt;
         * &lt;td&gt;View project-level information&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;GENERIC_WRITE&lt;/td&gt;
         * &lt;td&gt;Edit project-level information&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;DELETE&lt;/td&gt;
         * &lt;td&gt;Delete team project&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;PUBLISH_TEST_RESULTS&lt;/td&gt;
         * &lt;td&gt;Create test runs&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;ADMINISTER_BUILD&lt;/td&gt;
         * &lt;td&gt;Administer a build&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;START_BUILD&lt;/td&gt;
         * &lt;td&gt;Start a build&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;EDIT_BUILD_STATUS&lt;/td&gt;
         * &lt;td&gt;Edit build quality&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;UPDATE_BUILD&lt;/td&gt;
         * &lt;td&gt;Write to build operational store&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;DELETE_TEST_RESULTS&lt;/td&gt;
         * &lt;td&gt;Delete test runs&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;VIEW_TEST_RESULTS&lt;/td&gt;
         * &lt;td&gt;View test runs&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;MANAGE_TEST_ENVIRONMENTS&lt;/td&gt;
         * &lt;td&gt;Manage test environments&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;MANAGE_TEST_CONFIGURATIONS&lt;/td&gt;
         * &lt;td&gt;Manage test configurations&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;WORK_ITEM_DELETE&lt;/td&gt;
         * &lt;td&gt;Delete and restore work items&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;WORK_ITEM_MOVE&lt;/td&gt;
         * &lt;td&gt;Move work items out of this project&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;WORK_ITEM_PERMANENTLY_DELETE&lt;/td&gt;
         * &lt;td&gt;Permanently delete work items&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;RENAME&lt;/td&gt;
         * &lt;td&gt;Rename team project&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;MANAGE_PROPERTIES&lt;/td&gt;
         * &lt;td&gt;Manage project properties&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;MANAGE_SYSTEM_PROPERTIES&lt;/td&gt;
         * &lt;td&gt;Manage system project properties&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;BYPASS_PROPERTY_CACHE&lt;/td&gt;
         * &lt;td&gt;Bypass project property cache&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;BYPASS_RULES&lt;/td&gt;
         * &lt;td&gt;Bypass rules on work item updates&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;SUPPRESS_NOTIFICATIONS&lt;/td&gt;
         * &lt;td&gt;Suppress notifications for work item updates&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;UPDATE_VISIBILITY&lt;/td&gt;
         * &lt;td&gt;Update project visibility&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;CHANGE_PROCESS&lt;/td&gt;
         * &lt;td&gt;Change process of team project.&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;AGILETOOLS_BACKLOG&lt;/td&gt;
         * &lt;td&gt;Agile backlog management.&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;tr&gt;
         * &lt;td&gt;AGILETOOLS_PLANS&lt;/td&gt;
         * &lt;td&gt;Agile plans.&lt;/td&gt;
         * &lt;/tr&gt;
         * &lt;/tbody&gt;
         * &lt;/table&gt;
         * 
         * @return builder
         * 
         */
        public Builder permissions(Map<String,String> permissions) {
            return permissions(Output.of(permissions));
        }

        /**
         * @param principal The **group** principal to assign the permissions.
         * 
         * @return builder
         * 
         */
        public Builder principal(@Nullable Output<String> principal) {
            $.principal = principal;
            return this;
        }

        /**
         * @param principal The **group** principal to assign the permissions.
         * 
         * @return builder
         * 
         */
        public Builder principal(String principal) {
            return principal(Output.of(principal));
        }

        /**
         * @param projectId The ID of the project to assign the permissions.
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId The ID of the project to assign the permissions.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param replace Replace (`true`) or merge (`false`) the permissions. Default: `true`
         * 
         * @return builder
         * 
         */
        public Builder replace(@Nullable Output<Boolean> replace) {
            $.replace = replace;
            return this;
        }

        /**
         * @param replace Replace (`true`) or merge (`false`) the permissions. Default: `true`
         * 
         * @return builder
         * 
         */
        public Builder replace(Boolean replace) {
            return replace(Output.of(replace));
        }

        public ProjectPermissionsState build() {
            return $;
        }
    }

}
