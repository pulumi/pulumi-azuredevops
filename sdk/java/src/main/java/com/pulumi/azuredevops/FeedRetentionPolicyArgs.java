// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuredevops;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class FeedRetentionPolicyArgs extends com.pulumi.resources.ResourceArgs {

    public static final FeedRetentionPolicyArgs Empty = new FeedRetentionPolicyArgs();

    /**
     * The maximum number of versions per package.
     * 
     */
    @Import(name="countLimit", required=true)
    private Output<Integer> countLimit;

    /**
     * @return The maximum number of versions per package.
     * 
     */
    public Output<Integer> countLimit() {
        return this.countLimit;
    }

    /**
     * The days to keep recently downloaded packages.
     * 
     */
    @Import(name="daysToKeepRecentlyDownloadedPackages", required=true)
    private Output<Integer> daysToKeepRecentlyDownloadedPackages;

    /**
     * @return The days to keep recently downloaded packages.
     * 
     */
    public Output<Integer> daysToKeepRecentlyDownloadedPackages() {
        return this.daysToKeepRecentlyDownloadedPackages;
    }

    /**
     * The ID of the Feed. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="feedId", required=true)
    private Output<String> feedId;

    /**
     * @return The ID of the Feed. Changing this forces a new resource to be created.
     * 
     */
    public Output<String> feedId() {
        return this.feedId;
    }

    /**
     * The ID of the Project. If not specified, Feed will be created at the organization level. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="projectId")
    private @Nullable Output<String> projectId;

    /**
     * @return The ID of the Project. If not specified, Feed will be created at the organization level. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    private FeedRetentionPolicyArgs() {}

    private FeedRetentionPolicyArgs(FeedRetentionPolicyArgs $) {
        this.countLimit = $.countLimit;
        this.daysToKeepRecentlyDownloadedPackages = $.daysToKeepRecentlyDownloadedPackages;
        this.feedId = $.feedId;
        this.projectId = $.projectId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(FeedRetentionPolicyArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private FeedRetentionPolicyArgs $;

        public Builder() {
            $ = new FeedRetentionPolicyArgs();
        }

        public Builder(FeedRetentionPolicyArgs defaults) {
            $ = new FeedRetentionPolicyArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param countLimit The maximum number of versions per package.
         * 
         * @return builder
         * 
         */
        public Builder countLimit(Output<Integer> countLimit) {
            $.countLimit = countLimit;
            return this;
        }

        /**
         * @param countLimit The maximum number of versions per package.
         * 
         * @return builder
         * 
         */
        public Builder countLimit(Integer countLimit) {
            return countLimit(Output.of(countLimit));
        }

        /**
         * @param daysToKeepRecentlyDownloadedPackages The days to keep recently downloaded packages.
         * 
         * @return builder
         * 
         */
        public Builder daysToKeepRecentlyDownloadedPackages(Output<Integer> daysToKeepRecentlyDownloadedPackages) {
            $.daysToKeepRecentlyDownloadedPackages = daysToKeepRecentlyDownloadedPackages;
            return this;
        }

        /**
         * @param daysToKeepRecentlyDownloadedPackages The days to keep recently downloaded packages.
         * 
         * @return builder
         * 
         */
        public Builder daysToKeepRecentlyDownloadedPackages(Integer daysToKeepRecentlyDownloadedPackages) {
            return daysToKeepRecentlyDownloadedPackages(Output.of(daysToKeepRecentlyDownloadedPackages));
        }

        /**
         * @param feedId The ID of the Feed. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder feedId(Output<String> feedId) {
            $.feedId = feedId;
            return this;
        }

        /**
         * @param feedId The ID of the Feed. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder feedId(String feedId) {
            return feedId(Output.of(feedId));
        }

        /**
         * @param projectId The ID of the Project. If not specified, Feed will be created at the organization level. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId The ID of the Project. If not specified, Feed will be created at the organization level. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        public FeedRetentionPolicyArgs build() {
            if ($.countLimit == null) {
                throw new MissingRequiredPropertyException("FeedRetentionPolicyArgs", "countLimit");
            }
            if ($.daysToKeepRecentlyDownloadedPackages == null) {
                throw new MissingRequiredPropertyException("FeedRetentionPolicyArgs", "daysToKeepRecentlyDownloadedPackages");
            }
            if ($.feedId == null) {
                throw new MissingRequiredPropertyException("FeedRetentionPolicyArgs", "feedId");
            }
            return $;
        }
    }

}
