// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuredevops.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class CheckRestApiState extends com.pulumi.resources.ResourceArgs {

    public static final CheckRestApiState Empty = new CheckRestApiState();

    /**
     * The Rest API request body.
     * 
     */
    @Import(name="body")
    private @Nullable Output<String> body;

    /**
     * @return The Rest API request body.
     * 
     */
    public Optional<Output<String>> body() {
        return Optional.ofNullable(this.body);
    }

    /**
     * The completion event of the Rest API call. Possible values: `Callback`, `ApiResponse`. Defaults to `Callback`.
     * 
     */
    @Import(name="completionEvent")
    private @Nullable Output<String> completionEvent;

    /**
     * @return The completion event of the Rest API call. Possible values: `Callback`, `ApiResponse`. Defaults to `Callback`.
     * 
     */
    public Optional<Output<String>> completionEvent() {
        return Optional.ofNullable(this.completionEvent);
    }

    /**
     * The name of the Service Connection.
     * 
     */
    @Import(name="connectedServiceName")
    private @Nullable Output<String> connectedServiceName;

    /**
     * @return The name of the Service Connection.
     * 
     */
    public Optional<Output<String>> connectedServiceName() {
        return Optional.ofNullable(this.connectedServiceName);
    }

    /**
     * The type of the Service Connection used to invoke the REST API. Possible values: `connectedServiceName`(**Generic** type service connection) and `connectedServiceNameARM`(**Azure Resource Manager** type service connection).
     * 
     */
    @Import(name="connectedServiceNameSelector")
    private @Nullable Output<String> connectedServiceNameSelector;

    /**
     * @return The type of the Service Connection used to invoke the REST API. Possible values: `connectedServiceName`(**Generic** type service connection) and `connectedServiceNameARM`(**Azure Resource Manager** type service connection).
     * 
     */
    public Optional<Output<String>> connectedServiceNameSelector() {
        return Optional.ofNullable(this.connectedServiceNameSelector);
    }

    /**
     * The Name of the Rest API check.
     * 
     */
    @Import(name="displayName")
    private @Nullable Output<String> displayName;

    /**
     * @return The Name of the Rest API check.
     * 
     */
    public Optional<Output<String>> displayName() {
        return Optional.ofNullable(this.displayName);
    }

    /**
     * The headers of the request in JSON format.
     * 
     */
    @Import(name="headers")
    private @Nullable Output<String> headers;

    /**
     * @return The headers of the request in JSON format.
     * 
     */
    public Optional<Output<String>> headers() {
        return Optional.ofNullable(this.headers);
    }

    /**
     * The HTTP method of the request. Possible values: `OPTIONS`, `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `TRACE`, `PATCH`
     * 
     */
    @Import(name="method")
    private @Nullable Output<String> method;

    /**
     * @return The HTTP method of the request. Possible values: `OPTIONS`, `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `TRACE`, `PATCH`
     * 
     */
    public Optional<Output<String>> method() {
        return Optional.ofNullable(this.method);
    }

    /**
     * The ID of the project. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="projectId")
    private @Nullable Output<String> projectId;

    /**
     * @return The ID of the project. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    /**
     * The time between evaluations (minutes).
     * 
     * ~&gt;**NOTE** 1. The retry times should less them 10 based on the timeout. For example: `timeout` is `4000` then `retry_interval` should be `0` or no less then `400`.
     * &lt;br&gt;2. `retry_interval` is not required when `completion_event=Callback`.
     * 
     */
    @Import(name="retryInterval")
    private @Nullable Output<Integer> retryInterval;

    /**
     * @return The time between evaluations (minutes).
     * 
     * ~&gt;**NOTE** 1. The retry times should less them 10 based on the timeout. For example: `timeout` is `4000` then `retry_interval` should be `0` or no less then `400`.
     * &lt;br&gt;2. `retry_interval` is not required when `completion_event=Callback`.
     * 
     */
    public Optional<Output<Integer>> retryInterval() {
        return Optional.ofNullable(this.retryInterval);
    }

    /**
     * The Criteria which defines when to pass the task. No criteria means response content does not influence the result.
     * 
     * ~&gt;**NOTE** `success_criteria` is used when `completion_event=ApiResponse`
     * 
     */
    @Import(name="successCriteria")
    private @Nullable Output<String> successCriteria;

    /**
     * @return The Criteria which defines when to pass the task. No criteria means response content does not influence the result.
     * 
     * ~&gt;**NOTE** `success_criteria` is used when `completion_event=ApiResponse`
     * 
     */
    public Optional<Output<String>> successCriteria() {
        return Optional.ofNullable(this.successCriteria);
    }

    /**
     * The ID of the resource being protected by the check. Changing this forces a new resource to be created
     * 
     */
    @Import(name="targetResourceId")
    private @Nullable Output<String> targetResourceId;

    /**
     * @return The ID of the resource being protected by the check. Changing this forces a new resource to be created
     * 
     */
    public Optional<Output<String>> targetResourceId() {
        return Optional.ofNullable(this.targetResourceId);
    }

    /**
     * The type of resource being protected by the check. Possible values: `endpoint`, `environment`, `queue`, `repository`, `securefile`, `variablegroup`. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="targetResourceType")
    private @Nullable Output<String> targetResourceType;

    /**
     * @return The type of resource being protected by the check. Possible values: `endpoint`, `environment`, `queue`, `repository`, `securefile`, `variablegroup`. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<String>> targetResourceType() {
        return Optional.ofNullable(this.targetResourceType);
    }

    /**
     * The timeout in minutes for the Rest API check. Defaults to `1440`.
     * 
     */
    @Import(name="timeout")
    private @Nullable Output<Integer> timeout;

    /**
     * @return The timeout in minutes for the Rest API check. Defaults to `1440`.
     * 
     */
    public Optional<Output<Integer>> timeout() {
        return Optional.ofNullable(this.timeout);
    }

    /**
     * The URL suffix and parameters.
     * 
     */
    @Import(name="urlSuffix")
    private @Nullable Output<String> urlSuffix;

    /**
     * @return The URL suffix and parameters.
     * 
     */
    public Optional<Output<String>> urlSuffix() {
        return Optional.ofNullable(this.urlSuffix);
    }

    /**
     * The name of the Variable Group.
     * 
     */
    @Import(name="variableGroupName")
    private @Nullable Output<String> variableGroupName;

    /**
     * @return The name of the Variable Group.
     * 
     */
    public Optional<Output<String>> variableGroupName() {
        return Optional.ofNullable(this.variableGroupName);
    }

    /**
     * The version of the Rest API check.
     * 
     */
    @Import(name="version")
    private @Nullable Output<Integer> version;

    /**
     * @return The version of the Rest API check.
     * 
     */
    public Optional<Output<Integer>> version() {
        return Optional.ofNullable(this.version);
    }

    private CheckRestApiState() {}

    private CheckRestApiState(CheckRestApiState $) {
        this.body = $.body;
        this.completionEvent = $.completionEvent;
        this.connectedServiceName = $.connectedServiceName;
        this.connectedServiceNameSelector = $.connectedServiceNameSelector;
        this.displayName = $.displayName;
        this.headers = $.headers;
        this.method = $.method;
        this.projectId = $.projectId;
        this.retryInterval = $.retryInterval;
        this.successCriteria = $.successCriteria;
        this.targetResourceId = $.targetResourceId;
        this.targetResourceType = $.targetResourceType;
        this.timeout = $.timeout;
        this.urlSuffix = $.urlSuffix;
        this.variableGroupName = $.variableGroupName;
        this.version = $.version;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(CheckRestApiState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private CheckRestApiState $;

        public Builder() {
            $ = new CheckRestApiState();
        }

        public Builder(CheckRestApiState defaults) {
            $ = new CheckRestApiState(Objects.requireNonNull(defaults));
        }

        /**
         * @param body The Rest API request body.
         * 
         * @return builder
         * 
         */
        public Builder body(@Nullable Output<String> body) {
            $.body = body;
            return this;
        }

        /**
         * @param body The Rest API request body.
         * 
         * @return builder
         * 
         */
        public Builder body(String body) {
            return body(Output.of(body));
        }

        /**
         * @param completionEvent The completion event of the Rest API call. Possible values: `Callback`, `ApiResponse`. Defaults to `Callback`.
         * 
         * @return builder
         * 
         */
        public Builder completionEvent(@Nullable Output<String> completionEvent) {
            $.completionEvent = completionEvent;
            return this;
        }

        /**
         * @param completionEvent The completion event of the Rest API call. Possible values: `Callback`, `ApiResponse`. Defaults to `Callback`.
         * 
         * @return builder
         * 
         */
        public Builder completionEvent(String completionEvent) {
            return completionEvent(Output.of(completionEvent));
        }

        /**
         * @param connectedServiceName The name of the Service Connection.
         * 
         * @return builder
         * 
         */
        public Builder connectedServiceName(@Nullable Output<String> connectedServiceName) {
            $.connectedServiceName = connectedServiceName;
            return this;
        }

        /**
         * @param connectedServiceName The name of the Service Connection.
         * 
         * @return builder
         * 
         */
        public Builder connectedServiceName(String connectedServiceName) {
            return connectedServiceName(Output.of(connectedServiceName));
        }

        /**
         * @param connectedServiceNameSelector The type of the Service Connection used to invoke the REST API. Possible values: `connectedServiceName`(**Generic** type service connection) and `connectedServiceNameARM`(**Azure Resource Manager** type service connection).
         * 
         * @return builder
         * 
         */
        public Builder connectedServiceNameSelector(@Nullable Output<String> connectedServiceNameSelector) {
            $.connectedServiceNameSelector = connectedServiceNameSelector;
            return this;
        }

        /**
         * @param connectedServiceNameSelector The type of the Service Connection used to invoke the REST API. Possible values: `connectedServiceName`(**Generic** type service connection) and `connectedServiceNameARM`(**Azure Resource Manager** type service connection).
         * 
         * @return builder
         * 
         */
        public Builder connectedServiceNameSelector(String connectedServiceNameSelector) {
            return connectedServiceNameSelector(Output.of(connectedServiceNameSelector));
        }

        /**
         * @param displayName The Name of the Rest API check.
         * 
         * @return builder
         * 
         */
        public Builder displayName(@Nullable Output<String> displayName) {
            $.displayName = displayName;
            return this;
        }

        /**
         * @param displayName The Name of the Rest API check.
         * 
         * @return builder
         * 
         */
        public Builder displayName(String displayName) {
            return displayName(Output.of(displayName));
        }

        /**
         * @param headers The headers of the request in JSON format.
         * 
         * @return builder
         * 
         */
        public Builder headers(@Nullable Output<String> headers) {
            $.headers = headers;
            return this;
        }

        /**
         * @param headers The headers of the request in JSON format.
         * 
         * @return builder
         * 
         */
        public Builder headers(String headers) {
            return headers(Output.of(headers));
        }

        /**
         * @param method The HTTP method of the request. Possible values: `OPTIONS`, `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `TRACE`, `PATCH`
         * 
         * @return builder
         * 
         */
        public Builder method(@Nullable Output<String> method) {
            $.method = method;
            return this;
        }

        /**
         * @param method The HTTP method of the request. Possible values: `OPTIONS`, `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `TRACE`, `PATCH`
         * 
         * @return builder
         * 
         */
        public Builder method(String method) {
            return method(Output.of(method));
        }

        /**
         * @param projectId The ID of the project. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId The ID of the project. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param retryInterval The time between evaluations (minutes).
         * 
         * ~&gt;**NOTE** 1. The retry times should less them 10 based on the timeout. For example: `timeout` is `4000` then `retry_interval` should be `0` or no less then `400`.
         * &lt;br&gt;2. `retry_interval` is not required when `completion_event=Callback`.
         * 
         * @return builder
         * 
         */
        public Builder retryInterval(@Nullable Output<Integer> retryInterval) {
            $.retryInterval = retryInterval;
            return this;
        }

        /**
         * @param retryInterval The time between evaluations (minutes).
         * 
         * ~&gt;**NOTE** 1. The retry times should less them 10 based on the timeout. For example: `timeout` is `4000` then `retry_interval` should be `0` or no less then `400`.
         * &lt;br&gt;2. `retry_interval` is not required when `completion_event=Callback`.
         * 
         * @return builder
         * 
         */
        public Builder retryInterval(Integer retryInterval) {
            return retryInterval(Output.of(retryInterval));
        }

        /**
         * @param successCriteria The Criteria which defines when to pass the task. No criteria means response content does not influence the result.
         * 
         * ~&gt;**NOTE** `success_criteria` is used when `completion_event=ApiResponse`
         * 
         * @return builder
         * 
         */
        public Builder successCriteria(@Nullable Output<String> successCriteria) {
            $.successCriteria = successCriteria;
            return this;
        }

        /**
         * @param successCriteria The Criteria which defines when to pass the task. No criteria means response content does not influence the result.
         * 
         * ~&gt;**NOTE** `success_criteria` is used when `completion_event=ApiResponse`
         * 
         * @return builder
         * 
         */
        public Builder successCriteria(String successCriteria) {
            return successCriteria(Output.of(successCriteria));
        }

        /**
         * @param targetResourceId The ID of the resource being protected by the check. Changing this forces a new resource to be created
         * 
         * @return builder
         * 
         */
        public Builder targetResourceId(@Nullable Output<String> targetResourceId) {
            $.targetResourceId = targetResourceId;
            return this;
        }

        /**
         * @param targetResourceId The ID of the resource being protected by the check. Changing this forces a new resource to be created
         * 
         * @return builder
         * 
         */
        public Builder targetResourceId(String targetResourceId) {
            return targetResourceId(Output.of(targetResourceId));
        }

        /**
         * @param targetResourceType The type of resource being protected by the check. Possible values: `endpoint`, `environment`, `queue`, `repository`, `securefile`, `variablegroup`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder targetResourceType(@Nullable Output<String> targetResourceType) {
            $.targetResourceType = targetResourceType;
            return this;
        }

        /**
         * @param targetResourceType The type of resource being protected by the check. Possible values: `endpoint`, `environment`, `queue`, `repository`, `securefile`, `variablegroup`. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder targetResourceType(String targetResourceType) {
            return targetResourceType(Output.of(targetResourceType));
        }

        /**
         * @param timeout The timeout in minutes for the Rest API check. Defaults to `1440`.
         * 
         * @return builder
         * 
         */
        public Builder timeout(@Nullable Output<Integer> timeout) {
            $.timeout = timeout;
            return this;
        }

        /**
         * @param timeout The timeout in minutes for the Rest API check. Defaults to `1440`.
         * 
         * @return builder
         * 
         */
        public Builder timeout(Integer timeout) {
            return timeout(Output.of(timeout));
        }

        /**
         * @param urlSuffix The URL suffix and parameters.
         * 
         * @return builder
         * 
         */
        public Builder urlSuffix(@Nullable Output<String> urlSuffix) {
            $.urlSuffix = urlSuffix;
            return this;
        }

        /**
         * @param urlSuffix The URL suffix and parameters.
         * 
         * @return builder
         * 
         */
        public Builder urlSuffix(String urlSuffix) {
            return urlSuffix(Output.of(urlSuffix));
        }

        /**
         * @param variableGroupName The name of the Variable Group.
         * 
         * @return builder
         * 
         */
        public Builder variableGroupName(@Nullable Output<String> variableGroupName) {
            $.variableGroupName = variableGroupName;
            return this;
        }

        /**
         * @param variableGroupName The name of the Variable Group.
         * 
         * @return builder
         * 
         */
        public Builder variableGroupName(String variableGroupName) {
            return variableGroupName(Output.of(variableGroupName));
        }

        /**
         * @param version The version of the Rest API check.
         * 
         * @return builder
         * 
         */
        public Builder version(@Nullable Output<Integer> version) {
            $.version = version;
            return this;
        }

        /**
         * @param version The version of the Rest API check.
         * 
         * @return builder
         * 
         */
        public Builder version(Integer version) {
            return version(Output.of(version));
        }

        public CheckRestApiState build() {
            return $;
        }
    }

}
