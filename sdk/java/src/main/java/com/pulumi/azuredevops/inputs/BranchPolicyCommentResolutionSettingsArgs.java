// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuredevops.inputs;

import com.pulumi.azuredevops.inputs.BranchPolicyCommentResolutionSettingsScopeArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.util.List;
import java.util.Objects;


public final class BranchPolicyCommentResolutionSettingsArgs extends com.pulumi.resources.ResourceArgs {

    public static final BranchPolicyCommentResolutionSettingsArgs Empty = new BranchPolicyCommentResolutionSettingsArgs();

    /**
     * Controls which repositories and branches the policy will be enabled for. This block must be defined at least once.
     * 
     */
    @Import(name="scopes", required=true)
    private Output<List<BranchPolicyCommentResolutionSettingsScopeArgs>> scopes;

    /**
     * @return Controls which repositories and branches the policy will be enabled for. This block must be defined at least once.
     * 
     */
    public Output<List<BranchPolicyCommentResolutionSettingsScopeArgs>> scopes() {
        return this.scopes;
    }

    private BranchPolicyCommentResolutionSettingsArgs() {}

    private BranchPolicyCommentResolutionSettingsArgs(BranchPolicyCommentResolutionSettingsArgs $) {
        this.scopes = $.scopes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BranchPolicyCommentResolutionSettingsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BranchPolicyCommentResolutionSettingsArgs $;

        public Builder() {
            $ = new BranchPolicyCommentResolutionSettingsArgs();
        }

        public Builder(BranchPolicyCommentResolutionSettingsArgs defaults) {
            $ = new BranchPolicyCommentResolutionSettingsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param scopes Controls which repositories and branches the policy will be enabled for. This block must be defined at least once.
         * 
         * @return builder
         * 
         */
        public Builder scopes(Output<List<BranchPolicyCommentResolutionSettingsScopeArgs>> scopes) {
            $.scopes = scopes;
            return this;
        }

        /**
         * @param scopes Controls which repositories and branches the policy will be enabled for. This block must be defined at least once.
         * 
         * @return builder
         * 
         */
        public Builder scopes(List<BranchPolicyCommentResolutionSettingsScopeArgs> scopes) {
            return scopes(Output.of(scopes));
        }

        /**
         * @param scopes Controls which repositories and branches the policy will be enabled for. This block must be defined at least once.
         * 
         * @return builder
         * 
         */
        public Builder scopes(BranchPolicyCommentResolutionSettingsScopeArgs... scopes) {
            return scopes(List.of(scopes));
        }

        public BranchPolicyCommentResolutionSettingsArgs build() {
            $.scopes = Objects.requireNonNull($.scopes, "expected parameter 'scopes' to be non-null");
            return $;
        }
    }

}
