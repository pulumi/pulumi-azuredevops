// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuredevops.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceEndpointAzureRMCredentialsArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceEndpointAzureRMCredentialsArgs Empty = new ServiceEndpointAzureRMCredentialsArgs();

    /**
     * The service principal certificate. This not required if `serviceEndpointAuthenticationScheme` is set to `WorkloadIdentityFederation`.
     * 
     */
    @Import(name="serviceprincipalcertificate")
    private @Nullable Output<String> serviceprincipalcertificate;

    /**
     * @return The service principal certificate. This not required if `serviceEndpointAuthenticationScheme` is set to `WorkloadIdentityFederation`.
     * 
     */
    public Optional<Output<String>> serviceprincipalcertificate() {
        return Optional.ofNullable(this.serviceprincipalcertificate);
    }

    /**
     * The service principal application ID
     * 
     */
    @Import(name="serviceprincipalid", required=true)
    private Output<String> serviceprincipalid;

    /**
     * @return The service principal application ID
     * 
     */
    public Output<String> serviceprincipalid() {
        return this.serviceprincipalid;
    }

    /**
     * The service principal secret. This not required if `serviceEndpointAuthenticationScheme` is set to `WorkloadIdentityFederation`.
     * 
     */
    @Import(name="serviceprincipalkey")
    private @Nullable Output<String> serviceprincipalkey;

    /**
     * @return The service principal secret. This not required if `serviceEndpointAuthenticationScheme` is set to `WorkloadIdentityFederation`.
     * 
     */
    public Optional<Output<String>> serviceprincipalkey() {
        return Optional.ofNullable(this.serviceprincipalkey);
    }

    private ServiceEndpointAzureRMCredentialsArgs() {}

    private ServiceEndpointAzureRMCredentialsArgs(ServiceEndpointAzureRMCredentialsArgs $) {
        this.serviceprincipalcertificate = $.serviceprincipalcertificate;
        this.serviceprincipalid = $.serviceprincipalid;
        this.serviceprincipalkey = $.serviceprincipalkey;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceEndpointAzureRMCredentialsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceEndpointAzureRMCredentialsArgs $;

        public Builder() {
            $ = new ServiceEndpointAzureRMCredentialsArgs();
        }

        public Builder(ServiceEndpointAzureRMCredentialsArgs defaults) {
            $ = new ServiceEndpointAzureRMCredentialsArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param serviceprincipalcertificate The service principal certificate. This not required if `serviceEndpointAuthenticationScheme` is set to `WorkloadIdentityFederation`.
         * 
         * @return builder
         * 
         */
        public Builder serviceprincipalcertificate(@Nullable Output<String> serviceprincipalcertificate) {
            $.serviceprincipalcertificate = serviceprincipalcertificate;
            return this;
        }

        /**
         * @param serviceprincipalcertificate The service principal certificate. This not required if `serviceEndpointAuthenticationScheme` is set to `WorkloadIdentityFederation`.
         * 
         * @return builder
         * 
         */
        public Builder serviceprincipalcertificate(String serviceprincipalcertificate) {
            return serviceprincipalcertificate(Output.of(serviceprincipalcertificate));
        }

        /**
         * @param serviceprincipalid The service principal application ID
         * 
         * @return builder
         * 
         */
        public Builder serviceprincipalid(Output<String> serviceprincipalid) {
            $.serviceprincipalid = serviceprincipalid;
            return this;
        }

        /**
         * @param serviceprincipalid The service principal application ID
         * 
         * @return builder
         * 
         */
        public Builder serviceprincipalid(String serviceprincipalid) {
            return serviceprincipalid(Output.of(serviceprincipalid));
        }

        /**
         * @param serviceprincipalkey The service principal secret. This not required if `serviceEndpointAuthenticationScheme` is set to `WorkloadIdentityFederation`.
         * 
         * @return builder
         * 
         */
        public Builder serviceprincipalkey(@Nullable Output<String> serviceprincipalkey) {
            $.serviceprincipalkey = serviceprincipalkey;
            return this;
        }

        /**
         * @param serviceprincipalkey The service principal secret. This not required if `serviceEndpointAuthenticationScheme` is set to `WorkloadIdentityFederation`.
         * 
         * @return builder
         * 
         */
        public Builder serviceprincipalkey(String serviceprincipalkey) {
            return serviceprincipalkey(Output.of(serviceprincipalkey));
        }

        public ServiceEndpointAzureRMCredentialsArgs build() {
            if ($.serviceprincipalid == null) {
                throw new MissingRequiredPropertyException("ServiceEndpointAzureRMCredentialsArgs", "serviceprincipalid");
            }
            return $;
        }
    }

}
