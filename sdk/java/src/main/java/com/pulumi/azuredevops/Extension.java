// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuredevops;

import com.pulumi.azuredevops.ExtensionArgs;
import com.pulumi.azuredevops.Utilities;
import com.pulumi.azuredevops.inputs.ExtensionState;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.List;
import javax.annotation.Nullable;

/**
 * Manages extension within Azure DevOps organization.
 * 
 * ## Example Usage
 * 
 * ### Install Extension
 * <pre>
 * {@code
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azuredevops.Extension;
 * import com.pulumi.azuredevops.ExtensionArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var example = new Extension("example", ExtensionArgs.builder()
 *             .extensionId("extension ID")
 *             .publisherId("publisher ID")
 *             .build());
 * 
 *     }
 * }
 * }
 * </pre>
 * 
 * ## Relevant Links
 * 
 * - [Azure DevOps Service REST API 7.1 - Extension Management](https://learn.microsoft.com/en-us/rest/api/azure/devops/extensionmanagement/installed-extensions?view=azure-devops-rest-7.1)
 * 
 * ## Import
 * 
 * Azure DevOps Extension can be imported using the publisher ID and extension ID:
 * 
 * ```sh
 * $ pulumi import azuredevops:index/extension:Extension example publisherId/extensionId
 * ```
 * 
 */
@ResourceType(type="azuredevops:index/extension:Extension")
public class Extension extends com.pulumi.resources.CustomResource {
    /**
     * Whether to disable the extension.
     * 
     */
    @Export(name="disabled", refs={Boolean.class}, tree="[0]")
    private Output<Boolean> disabled;

    /**
     * @return Whether to disable the extension.
     * 
     */
    public Output<Boolean> disabled() {
        return this.disabled;
    }
    /**
     * The publisher ID of the extension.
     * 
     */
    @Export(name="extensionId", refs={String.class}, tree="[0]")
    private Output<String> extensionId;

    /**
     * @return The publisher ID of the extension.
     * 
     */
    public Output<String> extensionId() {
        return this.extensionId;
    }
    /**
     * The name of the extension.
     * 
     */
    @Export(name="extensionName", refs={String.class}, tree="[0]")
    private Output<String> extensionName;

    /**
     * @return The name of the extension.
     * 
     */
    public Output<String> extensionName() {
        return this.extensionName;
    }
    /**
     * The extension ID of the extension.
     * 
     */
    @Export(name="publisherId", refs={String.class}, tree="[0]")
    private Output<String> publisherId;

    /**
     * @return The extension ID of the extension.
     * 
     */
    public Output<String> publisherId() {
        return this.publisherId;
    }
    /**
     * The name of the publisher.
     * 
     */
    @Export(name="publisherName", refs={String.class}, tree="[0]")
    private Output<String> publisherName;

    /**
     * @return The name of the publisher.
     * 
     */
    public Output<String> publisherName() {
        return this.publisherName;
    }
    /**
     * List of all oauth scopes required by this extension.
     * 
     */
    @Export(name="scopes", refs={List.class,String.class}, tree="[0,1]")
    private Output<List<String>> scopes;

    /**
     * @return List of all oauth scopes required by this extension.
     * 
     */
    public Output<List<String>> scopes() {
        return this.scopes;
    }
    /**
     * The version of the extension.
     * 
     */
    @Export(name="version", refs={String.class}, tree="[0]")
    private Output<String> version;

    /**
     * @return The version of the extension.
     * 
     */
    public Output<String> version() {
        return this.version;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public Extension(java.lang.String name) {
        this(name, ExtensionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public Extension(java.lang.String name, ExtensionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public Extension(java.lang.String name, ExtensionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azuredevops:index/extension:Extension", name, makeArgs(args, options), makeResourceOptions(options, Codegen.empty()), false);
    }

    private Extension(java.lang.String name, Output<java.lang.String> id, @Nullable ExtensionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azuredevops:index/extension:Extension", name, state, makeResourceOptions(options, id), false);
    }

    private static ExtensionArgs makeArgs(ExtensionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        if (options != null && options.getUrn().isPresent()) {
            return null;
        }
        return args == null ? ExtensionArgs.Empty : args;
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<java.lang.String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static Extension get(java.lang.String name, Output<java.lang.String> id, @Nullable ExtensionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new Extension(name, id, state, options);
    }
}
