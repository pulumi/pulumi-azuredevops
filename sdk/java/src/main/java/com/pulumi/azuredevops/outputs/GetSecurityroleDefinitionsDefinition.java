// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuredevops.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetSecurityroleDefinitionsDefinition {
    /**
     * @return The mask of allowed permissions of the Security Role Definition.
     * 
     */
    private Integer allowPermissions;
    /**
     * @return The mask of the denied permissions of the Security Role Definition.
     * 
     */
    private @Nullable Integer denyPermissions;
    /**
     * @return The description of the Security Role Definition.
     * 
     */
    private String description;
    /**
     * @return The display name of the Security Role Definition.
     * 
     */
    private String displayName;
    /**
     * @return The identifier of the Security Role Definition.
     * 
     */
    private String identifier;
    /**
     * @return The name of the Security Role Definition.
     * 
     */
    private String name;
    /**
     * @return Name of the Scope for which Security Role Definitions will be returned.
     * 
     * &gt; **NOTE:** DataSource without specifying any arguments will return all projects.
     * 
     */
    private String scope;

    private GetSecurityroleDefinitionsDefinition() {}
    /**
     * @return The mask of allowed permissions of the Security Role Definition.
     * 
     */
    public Integer allowPermissions() {
        return this.allowPermissions;
    }
    /**
     * @return The mask of the denied permissions of the Security Role Definition.
     * 
     */
    public Optional<Integer> denyPermissions() {
        return Optional.ofNullable(this.denyPermissions);
    }
    /**
     * @return The description of the Security Role Definition.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The display name of the Security Role Definition.
     * 
     */
    public String displayName() {
        return this.displayName;
    }
    /**
     * @return The identifier of the Security Role Definition.
     * 
     */
    public String identifier() {
        return this.identifier;
    }
    /**
     * @return The name of the Security Role Definition.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return Name of the Scope for which Security Role Definitions will be returned.
     * 
     * &gt; **NOTE:** DataSource without specifying any arguments will return all projects.
     * 
     */
    public String scope() {
        return this.scope;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetSecurityroleDefinitionsDefinition defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Integer allowPermissions;
        private @Nullable Integer denyPermissions;
        private String description;
        private String displayName;
        private String identifier;
        private String name;
        private String scope;
        public Builder() {}
        public Builder(GetSecurityroleDefinitionsDefinition defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowPermissions = defaults.allowPermissions;
    	      this.denyPermissions = defaults.denyPermissions;
    	      this.description = defaults.description;
    	      this.displayName = defaults.displayName;
    	      this.identifier = defaults.identifier;
    	      this.name = defaults.name;
    	      this.scope = defaults.scope;
        }

        @CustomType.Setter
        public Builder allowPermissions(Integer allowPermissions) {
            if (allowPermissions == null) {
              throw new MissingRequiredPropertyException("GetSecurityroleDefinitionsDefinition", "allowPermissions");
            }
            this.allowPermissions = allowPermissions;
            return this;
        }
        @CustomType.Setter
        public Builder denyPermissions(@Nullable Integer denyPermissions) {

            this.denyPermissions = denyPermissions;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetSecurityroleDefinitionsDefinition", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder displayName(String displayName) {
            if (displayName == null) {
              throw new MissingRequiredPropertyException("GetSecurityroleDefinitionsDefinition", "displayName");
            }
            this.displayName = displayName;
            return this;
        }
        @CustomType.Setter
        public Builder identifier(String identifier) {
            if (identifier == null) {
              throw new MissingRequiredPropertyException("GetSecurityroleDefinitionsDefinition", "identifier");
            }
            this.identifier = identifier;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetSecurityroleDefinitionsDefinition", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder scope(String scope) {
            if (scope == null) {
              throw new MissingRequiredPropertyException("GetSecurityroleDefinitionsDefinition", "scope");
            }
            this.scope = scope;
            return this;
        }
        public GetSecurityroleDefinitionsDefinition build() {
            final var _resultValue = new GetSecurityroleDefinitionsDefinition();
            _resultValue.allowPermissions = allowPermissions;
            _resultValue.denyPermissions = denyPermissions;
            _resultValue.description = description;
            _resultValue.displayName = displayName;
            _resultValue.identifier = identifier;
            _resultValue.name = name;
            _resultValue.scope = scope;
            return _resultValue;
        }
    }
}
