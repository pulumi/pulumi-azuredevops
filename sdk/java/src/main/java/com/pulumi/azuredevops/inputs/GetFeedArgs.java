// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuredevops.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetFeedArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetFeedArgs Empty = new GetFeedArgs();

    /**
     * The ID of the Feed.
     * 
     * &gt; **Note** Only one of `name` or `feed_id` can be set at the same time.
     * 
     */
    @Import(name="feedId")
    private @Nullable Output<String> feedId;

    /**
     * @return The ID of the Feed.
     * 
     * &gt; **Note** Only one of `name` or `feed_id` can be set at the same time.
     * 
     */
    public Optional<Output<String>> feedId() {
        return Optional.ofNullable(this.feedId);
    }

    /**
     * The Name of the Feed.
     * 
     */
    @Import(name="name")
    private @Nullable Output<String> name;

    /**
     * @return The Name of the Feed.
     * 
     */
    public Optional<Output<String>> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * ID of the Project Feed is created in.
     * 
     */
    @Import(name="projectId")
    private @Nullable Output<String> projectId;

    /**
     * @return ID of the Project Feed is created in.
     * 
     */
    public Optional<Output<String>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    private GetFeedArgs() {}

    private GetFeedArgs(GetFeedArgs $) {
        this.feedId = $.feedId;
        this.name = $.name;
        this.projectId = $.projectId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetFeedArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetFeedArgs $;

        public Builder() {
            $ = new GetFeedArgs();
        }

        public Builder(GetFeedArgs defaults) {
            $ = new GetFeedArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param feedId The ID of the Feed.
         * 
         * &gt; **Note** Only one of `name` or `feed_id` can be set at the same time.
         * 
         * @return builder
         * 
         */
        public Builder feedId(@Nullable Output<String> feedId) {
            $.feedId = feedId;
            return this;
        }

        /**
         * @param feedId The ID of the Feed.
         * 
         * &gt; **Note** Only one of `name` or `feed_id` can be set at the same time.
         * 
         * @return builder
         * 
         */
        public Builder feedId(String feedId) {
            return feedId(Output.of(feedId));
        }

        /**
         * @param name The Name of the Feed.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The Name of the Feed.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param projectId ID of the Project Feed is created in.
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId ID of the Project Feed is created in.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        public GetFeedArgs build() {
            return $;
        }
    }

}
