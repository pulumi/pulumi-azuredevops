// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuredevops;

import com.pulumi.azuredevops.BranchPolicyCommentResolutionArgs;
import com.pulumi.azuredevops.Utilities;
import com.pulumi.azuredevops.inputs.BranchPolicyCommentResolutionState;
import com.pulumi.azuredevops.outputs.BranchPolicyCommentResolutionSettings;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Export;
import com.pulumi.core.annotations.ResourceType;
import com.pulumi.core.internal.Codegen;
import java.lang.Boolean;
import java.lang.String;
import java.util.Optional;
import javax.annotation.Nullable;

/**
 * Configure a comment resolution policy for your branch within Azure DevOps project.
 * 
 * ## Example Usage
 * 
 * &lt;!--Start PulumiCodeChooser --&gt;
 * ```java
 * package generated_program;
 * 
 * import com.pulumi.Context;
 * import com.pulumi.Pulumi;
 * import com.pulumi.core.Output;
 * import com.pulumi.azuredevops.Project;
 * import com.pulumi.azuredevops.Git;
 * import com.pulumi.azuredevops.GitArgs;
 * import com.pulumi.azuredevops.inputs.GitInitializationArgs;
 * import com.pulumi.azuredevops.BranchPolicyCommentResolution;
 * import com.pulumi.azuredevops.BranchPolicyCommentResolutionArgs;
 * import com.pulumi.azuredevops.inputs.BranchPolicyCommentResolutionSettingsArgs;
 * import java.util.List;
 * import java.util.ArrayList;
 * import java.util.Map;
 * import java.io.File;
 * import java.nio.file.Files;
 * import java.nio.file.Paths;
 * 
 * public class App {
 *     public static void main(String[] args) {
 *         Pulumi.run(App::stack);
 *     }
 * 
 *     public static void stack(Context ctx) {
 *         var exampleProject = new Project(&#34;exampleProject&#34;);
 * 
 *         var exampleGit = new Git(&#34;exampleGit&#34;, GitArgs.builder()        
 *             .projectId(exampleProject.id())
 *             .initialization(GitInitializationArgs.builder()
 *                 .initType(&#34;Clean&#34;)
 *                 .build())
 *             .build());
 * 
 *         var exampleBranchPolicyCommentResolution = new BranchPolicyCommentResolution(&#34;exampleBranchPolicyCommentResolution&#34;, BranchPolicyCommentResolutionArgs.builder()        
 *             .projectId(exampleProject.id())
 *             .enabled(true)
 *             .blocking(true)
 *             .settings(BranchPolicyCommentResolutionSettingsArgs.builder()
 *                 .scopes(                
 *                     BranchPolicyCommentResolutionSettingsScopeArgs.builder()
 *                         .repositoryId(exampleGit.id())
 *                         .repositoryRef(exampleGit.defaultBranch())
 *                         .matchType(&#34;Exact&#34;)
 *                         .build(),
 *                     BranchPolicyCommentResolutionSettingsScopeArgs.builder()
 *                         .repositoryId(exampleGit.id())
 *                         .repositoryRef(&#34;refs/heads/releases&#34;)
 *                         .matchType(&#34;Prefix&#34;)
 *                         .build(),
 *                     BranchPolicyCommentResolutionSettingsScopeArgs.builder()
 *                         .matchType(&#34;DefaultBranch&#34;)
 *                         .build())
 *                 .build())
 *             .build());
 * 
 *     }
 * }
 * ```
 * &lt;!--End PulumiCodeChooser --&gt;
 * 
 * ## Relevant Links
 * 
 * - [Azure DevOps Service REST API 7.0 - Policy Configurations](https://docs.microsoft.com/en-us/rest/api/azure/devops/policy/configurations/create?view=azure-devops-rest-7.0)
 * 
 * ## Import
 * 
 * Azure DevOps Branch Policies can be imported using the project ID and policy configuration ID:
 * 
 * ```sh
 * $ pulumi import azuredevops:index/branchPolicyCommentResolution:BranchPolicyCommentResolution example 00000000-0000-0000-0000-000000000000/0
 * ```
 * 
 */
@ResourceType(type="azuredevops:index/branchPolicyCommentResolution:BranchPolicyCommentResolution")
public class BranchPolicyCommentResolution extends com.pulumi.resources.CustomResource {
    /**
     * A flag indicating if the policy should be blocking. Defaults to `true`.
     * 
     */
    @Export(name="blocking", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> blocking;

    /**
     * @return A flag indicating if the policy should be blocking. Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> blocking() {
        return Codegen.optional(this.blocking);
    }
    /**
     * A flag indicating if the policy should be enabled. Defaults to `true`.
     * 
     */
    @Export(name="enabled", refs={Boolean.class}, tree="[0]")
    private Output</* @Nullable */ Boolean> enabled;

    /**
     * @return A flag indicating if the policy should be enabled. Defaults to `true`.
     * 
     */
    public Output<Optional<Boolean>> enabled() {
        return Codegen.optional(this.enabled);
    }
    /**
     * The ID of the project in which the policy will be created.
     * 
     */
    @Export(name="projectId", refs={String.class}, tree="[0]")
    private Output<String> projectId;

    /**
     * @return The ID of the project in which the policy will be created.
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }
    /**
     * Configuration for the policy. This block must be defined exactly once.
     * 
     */
    @Export(name="settings", refs={BranchPolicyCommentResolutionSettings.class}, tree="[0]")
    private Output<BranchPolicyCommentResolutionSettings> settings;

    /**
     * @return Configuration for the policy. This block must be defined exactly once.
     * 
     */
    public Output<BranchPolicyCommentResolutionSettings> settings() {
        return this.settings;
    }

    /**
     *
     * @param name The _unique_ name of the resulting resource.
     */
    public BranchPolicyCommentResolution(String name) {
        this(name, BranchPolicyCommentResolutionArgs.Empty);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     */
    public BranchPolicyCommentResolution(String name, BranchPolicyCommentResolutionArgs args) {
        this(name, args, null);
    }
    /**
     *
     * @param name The _unique_ name of the resulting resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param options A bag of options that control this resource's behavior.
     */
    public BranchPolicyCommentResolution(String name, BranchPolicyCommentResolutionArgs args, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azuredevops:index/branchPolicyCommentResolution:BranchPolicyCommentResolution", name, args == null ? BranchPolicyCommentResolutionArgs.Empty : args, makeResourceOptions(options, Codegen.empty()));
    }

    private BranchPolicyCommentResolution(String name, Output<String> id, @Nullable BranchPolicyCommentResolutionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        super("azuredevops:index/branchPolicyCommentResolution:BranchPolicyCommentResolution", name, state, makeResourceOptions(options, id));
    }

    private static com.pulumi.resources.CustomResourceOptions makeResourceOptions(@Nullable com.pulumi.resources.CustomResourceOptions options, @Nullable Output<String> id) {
        var defaultOptions = com.pulumi.resources.CustomResourceOptions.builder()
            .version(Utilities.getVersion())
            .build();
        return com.pulumi.resources.CustomResourceOptions.merge(defaultOptions, options, id);
    }

    /**
     * Get an existing Host resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state
     * @param options Optional settings to control the behavior of the CustomResource.
     */
    public static BranchPolicyCommentResolution get(String name, Output<String> id, @Nullable BranchPolicyCommentResolutionState state, @Nullable com.pulumi.resources.CustomResourceOptions options) {
        return new BranchPolicyCommentResolution(name, id, state, options);
    }
}
