// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuredevops;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceendpointDynamicsLifecycleServicesArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceendpointDynamicsLifecycleServicesArgs Empty = new ServiceendpointDynamicsLifecycleServicesArgs();

    /**
     * The URL of the Authentication Endpoint.
     * 
     */
    @Import(name="authorizationEndpoint", required=true)
    private Output<String> authorizationEndpoint;

    /**
     * @return The URL of the Authentication Endpoint.
     * 
     */
    public Output<String> authorizationEndpoint() {
        return this.authorizationEndpoint;
    }

    /**
     * The client ID for a native application registration in Azure Active Directory with API permissions for Dynamics Lifecycle Services.
     * 
     */
    @Import(name="clientId", required=true)
    private Output<String> clientId;

    /**
     * @return The client ID for a native application registration in Azure Active Directory with API permissions for Dynamics Lifecycle Services.
     * 
     */
    public Output<String> clientId() {
        return this.clientId;
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * The URL of the Lifecycle Services API Endpoint.
     * 
     */
    @Import(name="lifecycleServicesApiEndpoint", required=true)
    private Output<String> lifecycleServicesApiEndpoint;

    /**
     * @return The URL of the Lifecycle Services API Endpoint.
     * 
     */
    public Output<String> lifecycleServicesApiEndpoint() {
        return this.lifecycleServicesApiEndpoint;
    }

    /**
     * The Password for the Azure Active Directory account.
     * 
     */
    @Import(name="password", required=true)
    private Output<String> password;

    /**
     * @return The Password for the Azure Active Directory account.
     * 
     */
    public Output<String> password() {
        return this.password;
    }

    /**
     * The ID of the project.
     * 
     */
    @Import(name="projectId", required=true)
    private Output<String> projectId;

    /**
     * @return The ID of the project.
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }

    /**
     * The Service Endpoint name.
     * 
     */
    @Import(name="serviceEndpointName", required=true)
    private Output<String> serviceEndpointName;

    /**
     * @return The Service Endpoint name.
     * 
     */
    public Output<String> serviceEndpointName() {
        return this.serviceEndpointName;
    }

    /**
     * The E-mail address of user with sufficient permissions to interact with LCS asset library and environments.
     * 
     */
    @Import(name="username", required=true)
    private Output<String> username;

    /**
     * @return The E-mail address of user with sufficient permissions to interact with LCS asset library and environments.
     * 
     */
    public Output<String> username() {
        return this.username;
    }

    private ServiceendpointDynamicsLifecycleServicesArgs() {}

    private ServiceendpointDynamicsLifecycleServicesArgs(ServiceendpointDynamicsLifecycleServicesArgs $) {
        this.authorizationEndpoint = $.authorizationEndpoint;
        this.clientId = $.clientId;
        this.description = $.description;
        this.lifecycleServicesApiEndpoint = $.lifecycleServicesApiEndpoint;
        this.password = $.password;
        this.projectId = $.projectId;
        this.serviceEndpointName = $.serviceEndpointName;
        this.username = $.username;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceendpointDynamicsLifecycleServicesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceendpointDynamicsLifecycleServicesArgs $;

        public Builder() {
            $ = new ServiceendpointDynamicsLifecycleServicesArgs();
        }

        public Builder(ServiceendpointDynamicsLifecycleServicesArgs defaults) {
            $ = new ServiceendpointDynamicsLifecycleServicesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param authorizationEndpoint The URL of the Authentication Endpoint.
         * 
         * @return builder
         * 
         */
        public Builder authorizationEndpoint(Output<String> authorizationEndpoint) {
            $.authorizationEndpoint = authorizationEndpoint;
            return this;
        }

        /**
         * @param authorizationEndpoint The URL of the Authentication Endpoint.
         * 
         * @return builder
         * 
         */
        public Builder authorizationEndpoint(String authorizationEndpoint) {
            return authorizationEndpoint(Output.of(authorizationEndpoint));
        }

        /**
         * @param clientId The client ID for a native application registration in Azure Active Directory with API permissions for Dynamics Lifecycle Services.
         * 
         * @return builder
         * 
         */
        public Builder clientId(Output<String> clientId) {
            $.clientId = clientId;
            return this;
        }

        /**
         * @param clientId The client ID for a native application registration in Azure Active Directory with API permissions for Dynamics Lifecycle Services.
         * 
         * @return builder
         * 
         */
        public Builder clientId(String clientId) {
            return clientId(Output.of(clientId));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param lifecycleServicesApiEndpoint The URL of the Lifecycle Services API Endpoint.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleServicesApiEndpoint(Output<String> lifecycleServicesApiEndpoint) {
            $.lifecycleServicesApiEndpoint = lifecycleServicesApiEndpoint;
            return this;
        }

        /**
         * @param lifecycleServicesApiEndpoint The URL of the Lifecycle Services API Endpoint.
         * 
         * @return builder
         * 
         */
        public Builder lifecycleServicesApiEndpoint(String lifecycleServicesApiEndpoint) {
            return lifecycleServicesApiEndpoint(Output.of(lifecycleServicesApiEndpoint));
        }

        /**
         * @param password The Password for the Azure Active Directory account.
         * 
         * @return builder
         * 
         */
        public Builder password(Output<String> password) {
            $.password = password;
            return this;
        }

        /**
         * @param password The Password for the Azure Active Directory account.
         * 
         * @return builder
         * 
         */
        public Builder password(String password) {
            return password(Output.of(password));
        }

        /**
         * @param projectId The ID of the project.
         * 
         * @return builder
         * 
         */
        public Builder projectId(Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId The ID of the project.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param serviceEndpointName The Service Endpoint name.
         * 
         * @return builder
         * 
         */
        public Builder serviceEndpointName(Output<String> serviceEndpointName) {
            $.serviceEndpointName = serviceEndpointName;
            return this;
        }

        /**
         * @param serviceEndpointName The Service Endpoint name.
         * 
         * @return builder
         * 
         */
        public Builder serviceEndpointName(String serviceEndpointName) {
            return serviceEndpointName(Output.of(serviceEndpointName));
        }

        /**
         * @param username The E-mail address of user with sufficient permissions to interact with LCS asset library and environments.
         * 
         * @return builder
         * 
         */
        public Builder username(Output<String> username) {
            $.username = username;
            return this;
        }

        /**
         * @param username The E-mail address of user with sufficient permissions to interact with LCS asset library and environments.
         * 
         * @return builder
         * 
         */
        public Builder username(String username) {
            return username(Output.of(username));
        }

        public ServiceendpointDynamicsLifecycleServicesArgs build() {
            if ($.authorizationEndpoint == null) {
                throw new MissingRequiredPropertyException("ServiceendpointDynamicsLifecycleServicesArgs", "authorizationEndpoint");
            }
            if ($.clientId == null) {
                throw new MissingRequiredPropertyException("ServiceendpointDynamicsLifecycleServicesArgs", "clientId");
            }
            if ($.lifecycleServicesApiEndpoint == null) {
                throw new MissingRequiredPropertyException("ServiceendpointDynamicsLifecycleServicesArgs", "lifecycleServicesApiEndpoint");
            }
            if ($.password == null) {
                throw new MissingRequiredPropertyException("ServiceendpointDynamicsLifecycleServicesArgs", "password");
            }
            if ($.projectId == null) {
                throw new MissingRequiredPropertyException("ServiceendpointDynamicsLifecycleServicesArgs", "projectId");
            }
            if ($.serviceEndpointName == null) {
                throw new MissingRequiredPropertyException("ServiceendpointDynamicsLifecycleServicesArgs", "serviceEndpointName");
            }
            if ($.username == null) {
                throw new MissingRequiredPropertyException("ServiceendpointDynamicsLifecycleServicesArgs", "username");
            }
            return $;
        }
    }

}
