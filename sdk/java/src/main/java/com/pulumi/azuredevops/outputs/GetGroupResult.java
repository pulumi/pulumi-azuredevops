// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuredevops.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetGroupResult {
    /**
     * @return The Descriptor is the primary way to reference the graph subject. This field will uniquely identify the same graph subject across both Accounts and Organizations.
     * 
     */
    private String descriptor;
    /**
     * @return The ID of the group.
     * 
     */
    private String groupId;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String name;
    /**
     * @return The type of source provider for the origin identifier (ex:AD, AAD, MSA)
     * 
     */
    private String origin;
    /**
     * @return The unique identifier from the system of origin. Typically a sid, object id or Guid. Linking and unlinking operations can cause this value to change for a user because the user is not backed by a different provider and has a different unique id in the new provider.
     * 
     */
    private String originId;
    private @Nullable String projectId;

    private GetGroupResult() {}
    /**
     * @return The Descriptor is the primary way to reference the graph subject. This field will uniquely identify the same graph subject across both Accounts and Organizations.
     * 
     */
    public String descriptor() {
        return this.descriptor;
    }
    /**
     * @return The ID of the group.
     * 
     */
    public String groupId() {
        return this.groupId;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String name() {
        return this.name;
    }
    /**
     * @return The type of source provider for the origin identifier (ex:AD, AAD, MSA)
     * 
     */
    public String origin() {
        return this.origin;
    }
    /**
     * @return The unique identifier from the system of origin. Typically a sid, object id or Guid. Linking and unlinking operations can cause this value to change for a user because the user is not backed by a different provider and has a different unique id in the new provider.
     * 
     */
    public String originId() {
        return this.originId;
    }
    public Optional<String> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetGroupResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String descriptor;
        private String groupId;
        private String id;
        private String name;
        private String origin;
        private String originId;
        private @Nullable String projectId;
        public Builder() {}
        public Builder(GetGroupResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.descriptor = defaults.descriptor;
    	      this.groupId = defaults.groupId;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.origin = defaults.origin;
    	      this.originId = defaults.originId;
    	      this.projectId = defaults.projectId;
        }

        @CustomType.Setter
        public Builder descriptor(String descriptor) {
            if (descriptor == null) {
              throw new MissingRequiredPropertyException("GetGroupResult", "descriptor");
            }
            this.descriptor = descriptor;
            return this;
        }
        @CustomType.Setter
        public Builder groupId(String groupId) {
            if (groupId == null) {
              throw new MissingRequiredPropertyException("GetGroupResult", "groupId");
            }
            this.groupId = groupId;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetGroupResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("GetGroupResult", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder origin(String origin) {
            if (origin == null) {
              throw new MissingRequiredPropertyException("GetGroupResult", "origin");
            }
            this.origin = origin;
            return this;
        }
        @CustomType.Setter
        public Builder originId(String originId) {
            if (originId == null) {
              throw new MissingRequiredPropertyException("GetGroupResult", "originId");
            }
            this.originId = originId;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(@Nullable String projectId) {

            this.projectId = projectId;
            return this;
        }
        public GetGroupResult build() {
            final var _resultValue = new GetGroupResult();
            _resultValue.descriptor = descriptor;
            _resultValue.groupId = groupId;
            _resultValue.id = id;
            _resultValue.name = name;
            _resultValue.origin = origin;
            _resultValue.originId = originId;
            _resultValue.projectId = projectId;
            return _resultValue;
        }
    }
}
