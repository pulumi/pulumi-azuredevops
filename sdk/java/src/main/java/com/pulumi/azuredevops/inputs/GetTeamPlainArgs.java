// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuredevops.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetTeamPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetTeamPlainArgs Empty = new GetTeamPlainArgs();

    /**
     * The name of the Team.
     * 
     */
    @Import(name="name", required=true)
    private String name;

    /**
     * @return The name of the Team.
     * 
     */
    public String name() {
        return this.name;
    }

    /**
     * The Project ID.
     * 
     */
    @Import(name="projectId", required=true)
    private String projectId;

    /**
     * @return The Project ID.
     * 
     */
    public String projectId() {
        return this.projectId;
    }

    /**
     * The maximum number of teams to return. Defaults to `100`. This property is deprecated and will be removed in the feature
     * 
     * @deprecated
     * This property is deprecated and will be removed in the feature
     * 
     */
    @Deprecated /* This property is deprecated and will be removed in the feature */
    @Import(name="top")
    private @Nullable Integer top;

    /**
     * @return The maximum number of teams to return. Defaults to `100`. This property is deprecated and will be removed in the feature
     * 
     * @deprecated
     * This property is deprecated and will be removed in the feature
     * 
     */
    @Deprecated /* This property is deprecated and will be removed in the feature */
    public Optional<Integer> top() {
        return Optional.ofNullable(this.top);
    }

    private GetTeamPlainArgs() {}

    private GetTeamPlainArgs(GetTeamPlainArgs $) {
        this.name = $.name;
        this.projectId = $.projectId;
        this.top = $.top;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetTeamPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetTeamPlainArgs $;

        public Builder() {
            $ = new GetTeamPlainArgs();
        }

        public Builder(GetTeamPlainArgs defaults) {
            $ = new GetTeamPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param name The name of the Team.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            $.name = name;
            return this;
        }

        /**
         * @param projectId The Project ID.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param top The maximum number of teams to return. Defaults to `100`. This property is deprecated and will be removed in the feature
         * 
         * @return builder
         * 
         * @deprecated
         * This property is deprecated and will be removed in the feature
         * 
         */
        @Deprecated /* This property is deprecated and will be removed in the feature */
        public Builder top(@Nullable Integer top) {
            $.top = top;
            return this;
        }

        public GetTeamPlainArgs build() {
            if ($.name == null) {
                throw new MissingRequiredPropertyException("GetTeamPlainArgs", "name");
            }
            if ($.projectId == null) {
                throw new MissingRequiredPropertyException("GetTeamPlainArgs", "projectId");
            }
            return $;
        }
    }

}
