// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuredevops.Identities.inputs;

import com.pulumi.azuredevops.Identities.inputs.GetUsersFeatures;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetUsersPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetUsersPlainArgs Empty = new GetUsersPlainArgs();

    /**
     * A `features` block as defined below.
     * 
     * DataSource without specifying any arguments will return all users inside an organization.
     * 
     * List of possible subject types
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * 
     * List of possible origins
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * 
     */
    @Import(name="features")
    private @Nullable GetUsersFeatures features;

    /**
     * @return A `features` block as defined below.
     * 
     * DataSource without specifying any arguments will return all users inside an organization.
     * 
     * List of possible subject types
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * 
     * List of possible origins
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *     }
     * }
     * ```
     * 
     */
    public Optional<GetUsersFeatures> features() {
        return Optional.ofNullable(this.features);
    }

    /**
     * The type of source provider for the `origin_id` parameter (ex:AD, AAD, MSA) The supported origins are listed below.
     * 
     */
    @Import(name="origin")
    private @Nullable String origin;

    /**
     * @return The type of source provider for the `origin_id` parameter (ex:AD, AAD, MSA) The supported origins are listed below.
     * 
     */
    public Optional<String> origin() {
        return Optional.ofNullable(this.origin);
    }

    /**
     * The unique identifier from the system of origin.
     * 
     */
    @Import(name="originId")
    private @Nullable String originId;

    /**
     * @return The unique identifier from the system of origin.
     * 
     */
    public Optional<String> originId() {
        return Optional.ofNullable(this.originId);
    }

    /**
     * The PrincipalName of this graph member from the source provider.
     * 
     */
    @Import(name="principalName")
    private @Nullable String principalName;

    /**
     * @return The PrincipalName of this graph member from the source provider.
     * 
     */
    public Optional<String> principalName() {
        return Optional.ofNullable(this.principalName);
    }

    /**
     * A list of user subject subtypes to reduce the retrieved results, e.g. `msa`, `aad`, `svc` (service identity), `imp` (imported identity), etc. The supported subject types are listed below.
     * 
     */
    @Import(name="subjectTypes")
    private @Nullable List<String> subjectTypes;

    /**
     * @return A list of user subject subtypes to reduce the retrieved results, e.g. `msa`, `aad`, `svc` (service identity), `imp` (imported identity), etc. The supported subject types are listed below.
     * 
     */
    public Optional<List<String>> subjectTypes() {
        return Optional.ofNullable(this.subjectTypes);
    }

    private GetUsersPlainArgs() {}

    private GetUsersPlainArgs(GetUsersPlainArgs $) {
        this.features = $.features;
        this.origin = $.origin;
        this.originId = $.originId;
        this.principalName = $.principalName;
        this.subjectTypes = $.subjectTypes;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetUsersPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetUsersPlainArgs $;

        public Builder() {
            $ = new GetUsersPlainArgs();
        }

        public Builder(GetUsersPlainArgs defaults) {
            $ = new GetUsersPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param features A `features` block as defined below.
         * 
         * DataSource without specifying any arguments will return all users inside an organization.
         * 
         * List of possible subject types
         * ```java
         * package generated_program;
         * 
         * import com.pulumi.Context;
         * import com.pulumi.Pulumi;
         * import com.pulumi.core.Output;
         * import java.util.List;
         * import java.util.ArrayList;
         * import java.util.Map;
         * import java.io.File;
         * import java.nio.file.Files;
         * import java.nio.file.Paths;
         * 
         * public class App {
         *     public static void main(String[] args) {
         *         Pulumi.run(App::stack);
         *     }
         * 
         *     public static void stack(Context ctx) {
         *     }
         * }
         * ```
         * 
         * List of possible origins
         * ```java
         * package generated_program;
         * 
         * import com.pulumi.Context;
         * import com.pulumi.Pulumi;
         * import com.pulumi.core.Output;
         * import java.util.List;
         * import java.util.ArrayList;
         * import java.util.Map;
         * import java.io.File;
         * import java.nio.file.Files;
         * import java.nio.file.Paths;
         * 
         * public class App {
         *     public static void main(String[] args) {
         *         Pulumi.run(App::stack);
         *     }
         * 
         *     public static void stack(Context ctx) {
         *     }
         * }
         * ```
         * 
         * @return builder
         * 
         */
        public Builder features(@Nullable GetUsersFeatures features) {
            $.features = features;
            return this;
        }

        /**
         * @param origin The type of source provider for the `origin_id` parameter (ex:AD, AAD, MSA) The supported origins are listed below.
         * 
         * @return builder
         * 
         */
        public Builder origin(@Nullable String origin) {
            $.origin = origin;
            return this;
        }

        /**
         * @param originId The unique identifier from the system of origin.
         * 
         * @return builder
         * 
         */
        public Builder originId(@Nullable String originId) {
            $.originId = originId;
            return this;
        }

        /**
         * @param principalName The PrincipalName of this graph member from the source provider.
         * 
         * @return builder
         * 
         */
        public Builder principalName(@Nullable String principalName) {
            $.principalName = principalName;
            return this;
        }

        /**
         * @param subjectTypes A list of user subject subtypes to reduce the retrieved results, e.g. `msa`, `aad`, `svc` (service identity), `imp` (imported identity), etc. The supported subject types are listed below.
         * 
         * @return builder
         * 
         */
        public Builder subjectTypes(@Nullable List<String> subjectTypes) {
            $.subjectTypes = subjectTypes;
            return this;
        }

        /**
         * @param subjectTypes A list of user subject subtypes to reduce the retrieved results, e.g. `msa`, `aad`, `svc` (service identity), `imp` (imported identity), etc. The supported subject types are listed below.
         * 
         * @return builder
         * 
         */
        public Builder subjectTypes(String... subjectTypes) {
            return subjectTypes(List.of(subjectTypes));
        }

        public GetUsersPlainArgs build() {
            return $;
        }
    }

}
