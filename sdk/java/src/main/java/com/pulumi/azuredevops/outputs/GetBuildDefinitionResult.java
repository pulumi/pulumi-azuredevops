// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuredevops.outputs;

import com.pulumi.azuredevops.outputs.GetBuildDefinitionCiTrigger;
import com.pulumi.azuredevops.outputs.GetBuildDefinitionPullRequestTrigger;
import com.pulumi.azuredevops.outputs.GetBuildDefinitionRepository;
import com.pulumi.azuredevops.outputs.GetBuildDefinitionSchedule;
import com.pulumi.azuredevops.outputs.GetBuildDefinitionVariable;
import com.pulumi.core.annotations.CustomType;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class GetBuildDefinitionResult {
    /**
     * @return The agent pool that should execute the build.
     * 
     */
    private String agentPoolName;
    /**
     * @return A `ci_trigger` block as defined below.
     * 
     */
    private List<GetBuildDefinitionCiTrigger> ciTriggers;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    /**
     * @return The name of the variable.
     * 
     */
    private String name;
    private @Nullable String path;
    private String projectId;
    /**
     * @return A `pull_request_trigger` block as defined below.
     * 
     */
    private List<GetBuildDefinitionPullRequestTrigger> pullRequestTriggers;
    /**
     * @return A `repository` block as defined below.
     * 
     */
    private List<GetBuildDefinitionRepository> repositories;
    /**
     * @return The revision of the build definition.
     * 
     */
    private Integer revision;
    /**
     * @return A `schedules` block as defined below.
     * 
     */
    private List<GetBuildDefinitionSchedule> schedules;
    /**
     * @return A list of variable group IDs.
     * 
     */
    private List<Integer> variableGroups;
    /**
     * @return A `variable` block as defined below.
     * 
     */
    private List<GetBuildDefinitionVariable> variables;

    private GetBuildDefinitionResult() {}
    /**
     * @return The agent pool that should execute the build.
     * 
     */
    public String agentPoolName() {
        return this.agentPoolName;
    }
    /**
     * @return A `ci_trigger` block as defined below.
     * 
     */
    public List<GetBuildDefinitionCiTrigger> ciTriggers() {
        return this.ciTriggers;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    /**
     * @return The name of the variable.
     * 
     */
    public String name() {
        return this.name;
    }
    public Optional<String> path() {
        return Optional.ofNullable(this.path);
    }
    public String projectId() {
        return this.projectId;
    }
    /**
     * @return A `pull_request_trigger` block as defined below.
     * 
     */
    public List<GetBuildDefinitionPullRequestTrigger> pullRequestTriggers() {
        return this.pullRequestTriggers;
    }
    /**
     * @return A `repository` block as defined below.
     * 
     */
    public List<GetBuildDefinitionRepository> repositories() {
        return this.repositories;
    }
    /**
     * @return The revision of the build definition.
     * 
     */
    public Integer revision() {
        return this.revision;
    }
    /**
     * @return A `schedules` block as defined below.
     * 
     */
    public List<GetBuildDefinitionSchedule> schedules() {
        return this.schedules;
    }
    /**
     * @return A list of variable group IDs.
     * 
     */
    public List<Integer> variableGroups() {
        return this.variableGroups;
    }
    /**
     * @return A `variable` block as defined below.
     * 
     */
    public List<GetBuildDefinitionVariable> variables() {
        return this.variables;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBuildDefinitionResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String agentPoolName;
        private List<GetBuildDefinitionCiTrigger> ciTriggers;
        private String id;
        private String name;
        private @Nullable String path;
        private String projectId;
        private List<GetBuildDefinitionPullRequestTrigger> pullRequestTriggers;
        private List<GetBuildDefinitionRepository> repositories;
        private Integer revision;
        private List<GetBuildDefinitionSchedule> schedules;
        private List<Integer> variableGroups;
        private List<GetBuildDefinitionVariable> variables;
        public Builder() {}
        public Builder(GetBuildDefinitionResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.agentPoolName = defaults.agentPoolName;
    	      this.ciTriggers = defaults.ciTriggers;
    	      this.id = defaults.id;
    	      this.name = defaults.name;
    	      this.path = defaults.path;
    	      this.projectId = defaults.projectId;
    	      this.pullRequestTriggers = defaults.pullRequestTriggers;
    	      this.repositories = defaults.repositories;
    	      this.revision = defaults.revision;
    	      this.schedules = defaults.schedules;
    	      this.variableGroups = defaults.variableGroups;
    	      this.variables = defaults.variables;
        }

        @CustomType.Setter
        public Builder agentPoolName(String agentPoolName) {
            this.agentPoolName = Objects.requireNonNull(agentPoolName);
            return this;
        }
        @CustomType.Setter
        public Builder ciTriggers(List<GetBuildDefinitionCiTrigger> ciTriggers) {
            this.ciTriggers = Objects.requireNonNull(ciTriggers);
            return this;
        }
        public Builder ciTriggers(GetBuildDefinitionCiTrigger... ciTriggers) {
            return ciTriggers(List.of(ciTriggers));
        }
        @CustomType.Setter
        public Builder id(String id) {
            this.id = Objects.requireNonNull(id);
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            this.name = Objects.requireNonNull(name);
            return this;
        }
        @CustomType.Setter
        public Builder path(@Nullable String path) {
            this.path = path;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            this.projectId = Objects.requireNonNull(projectId);
            return this;
        }
        @CustomType.Setter
        public Builder pullRequestTriggers(List<GetBuildDefinitionPullRequestTrigger> pullRequestTriggers) {
            this.pullRequestTriggers = Objects.requireNonNull(pullRequestTriggers);
            return this;
        }
        public Builder pullRequestTriggers(GetBuildDefinitionPullRequestTrigger... pullRequestTriggers) {
            return pullRequestTriggers(List.of(pullRequestTriggers));
        }
        @CustomType.Setter
        public Builder repositories(List<GetBuildDefinitionRepository> repositories) {
            this.repositories = Objects.requireNonNull(repositories);
            return this;
        }
        public Builder repositories(GetBuildDefinitionRepository... repositories) {
            return repositories(List.of(repositories));
        }
        @CustomType.Setter
        public Builder revision(Integer revision) {
            this.revision = Objects.requireNonNull(revision);
            return this;
        }
        @CustomType.Setter
        public Builder schedules(List<GetBuildDefinitionSchedule> schedules) {
            this.schedules = Objects.requireNonNull(schedules);
            return this;
        }
        public Builder schedules(GetBuildDefinitionSchedule... schedules) {
            return schedules(List.of(schedules));
        }
        @CustomType.Setter
        public Builder variableGroups(List<Integer> variableGroups) {
            this.variableGroups = Objects.requireNonNull(variableGroups);
            return this;
        }
        public Builder variableGroups(Integer... variableGroups) {
            return variableGroups(List.of(variableGroups));
        }
        @CustomType.Setter
        public Builder variables(List<GetBuildDefinitionVariable> variables) {
            this.variables = Objects.requireNonNull(variables);
            return this;
        }
        public Builder variables(GetBuildDefinitionVariable... variables) {
            return variables(List.of(variables));
        }
        public GetBuildDefinitionResult build() {
            final var o = new GetBuildDefinitionResult();
            o.agentPoolName = agentPoolName;
            o.ciTriggers = ciTriggers;
            o.id = id;
            o.name = name;
            o.path = path;
            o.projectId = projectId;
            o.pullRequestTriggers = pullRequestTriggers;
            o.repositories = repositories;
            o.revision = revision;
            o.schedules = schedules;
            o.variableGroups = variableGroups;
            o.variables = variables;
            return o;
        }
    }
}
