// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuredevops.outputs;

import com.pulumi.azuredevops.outputs.BuildDefinitionPullRequestTriggerOverrideBranchFilter;
import com.pulumi.azuredevops.outputs.BuildDefinitionPullRequestTriggerOverridePathFilter;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BuildDefinitionPullRequestTriggerOverride {
    /**
     * @return . Defaults to `true`.
     * 
     */
    private @Nullable Boolean autoCancel;
    /**
     * @return The branches to include and exclude from the trigger. A `branch_filter` block as documented below.
     * 
     */
    private List<BuildDefinitionPullRequestTriggerOverrideBranchFilter> branchFilters;
    /**
     * @return Specify file paths to include or exclude. Note that the wildcard syntax is different between branches/tags and file paths.
     * 
     */
    private @Nullable List<BuildDefinitionPullRequestTriggerOverridePathFilter> pathFilters;

    private BuildDefinitionPullRequestTriggerOverride() {}
    /**
     * @return . Defaults to `true`.
     * 
     */
    public Optional<Boolean> autoCancel() {
        return Optional.ofNullable(this.autoCancel);
    }
    /**
     * @return The branches to include and exclude from the trigger. A `branch_filter` block as documented below.
     * 
     */
    public List<BuildDefinitionPullRequestTriggerOverrideBranchFilter> branchFilters() {
        return this.branchFilters;
    }
    /**
     * @return Specify file paths to include or exclude. Note that the wildcard syntax is different between branches/tags and file paths.
     * 
     */
    public List<BuildDefinitionPullRequestTriggerOverridePathFilter> pathFilters() {
        return this.pathFilters == null ? List.of() : this.pathFilters;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BuildDefinitionPullRequestTriggerOverride defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean autoCancel;
        private List<BuildDefinitionPullRequestTriggerOverrideBranchFilter> branchFilters;
        private @Nullable List<BuildDefinitionPullRequestTriggerOverridePathFilter> pathFilters;
        public Builder() {}
        public Builder(BuildDefinitionPullRequestTriggerOverride defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.autoCancel = defaults.autoCancel;
    	      this.branchFilters = defaults.branchFilters;
    	      this.pathFilters = defaults.pathFilters;
        }

        @CustomType.Setter
        public Builder autoCancel(@Nullable Boolean autoCancel) {

            this.autoCancel = autoCancel;
            return this;
        }
        @CustomType.Setter
        public Builder branchFilters(List<BuildDefinitionPullRequestTriggerOverrideBranchFilter> branchFilters) {
            if (branchFilters == null) {
              throw new MissingRequiredPropertyException("BuildDefinitionPullRequestTriggerOverride", "branchFilters");
            }
            this.branchFilters = branchFilters;
            return this;
        }
        public Builder branchFilters(BuildDefinitionPullRequestTriggerOverrideBranchFilter... branchFilters) {
            return branchFilters(List.of(branchFilters));
        }
        @CustomType.Setter
        public Builder pathFilters(@Nullable List<BuildDefinitionPullRequestTriggerOverridePathFilter> pathFilters) {

            this.pathFilters = pathFilters;
            return this;
        }
        public Builder pathFilters(BuildDefinitionPullRequestTriggerOverridePathFilter... pathFilters) {
            return pathFilters(List.of(pathFilters));
        }
        public BuildDefinitionPullRequestTriggerOverride build() {
            final var _resultValue = new BuildDefinitionPullRequestTriggerOverride();
            _resultValue.autoCancel = autoCancel;
            _resultValue.branchFilters = branchFilters;
            _resultValue.pathFilters = pathFilters;
            return _resultValue;
        }
    }
}
