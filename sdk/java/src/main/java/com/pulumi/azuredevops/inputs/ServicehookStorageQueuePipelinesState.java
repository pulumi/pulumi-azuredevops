// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuredevops.inputs;

import com.pulumi.azuredevops.inputs.ServicehookStorageQueuePipelinesRunStateChangedEventArgs;
import com.pulumi.azuredevops.inputs.ServicehookStorageQueuePipelinesStageStateChangedEventArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServicehookStorageQueuePipelinesState extends com.pulumi.resources.ResourceArgs {

    public static final ServicehookStorageQueuePipelinesState Empty = new ServicehookStorageQueuePipelinesState();

    /**
     * A valid account key from the queue&#39;s storage account.
     * 
     */
    @Import(name="accountKey")
    private @Nullable Output<String> accountKey;

    /**
     * @return A valid account key from the queue&#39;s storage account.
     * 
     */
    public Optional<Output<String>> accountKey() {
        return Optional.ofNullable(this.accountKey);
    }

    /**
     * The queue&#39;s storage account name.
     * 
     */
    @Import(name="accountName")
    private @Nullable Output<String> accountName;

    /**
     * @return The queue&#39;s storage account name.
     * 
     */
    public Optional<Output<String>> accountName() {
        return Optional.ofNullable(this.accountName);
    }

    /**
     * The ID of the associated project. Changing this forces a new Service Hook Storage Queue Pipelines to be created.
     * 
     */
    @Import(name="projectId")
    private @Nullable Output<String> projectId;

    /**
     * @return The ID of the associated project. Changing this forces a new Service Hook Storage Queue Pipelines to be created.
     * 
     */
    public Optional<Output<String>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    /**
     * The name of the queue that will store the events.
     * 
     */
    @Import(name="queueName")
    private @Nullable Output<String> queueName;

    /**
     * @return The name of the queue that will store the events.
     * 
     */
    public Optional<Output<String>> queueName() {
        return Optional.ofNullable(this.queueName);
    }

    /**
     * A `runStateChangedEvent` block as defined below. Conflicts with `stageStateChangedEvent`
     * 
     */
    @Import(name="runStateChangedEvent")
    private @Nullable Output<ServicehookStorageQueuePipelinesRunStateChangedEventArgs> runStateChangedEvent;

    /**
     * @return A `runStateChangedEvent` block as defined below. Conflicts with `stageStateChangedEvent`
     * 
     */
    public Optional<Output<ServicehookStorageQueuePipelinesRunStateChangedEventArgs>> runStateChangedEvent() {
        return Optional.ofNullable(this.runStateChangedEvent);
    }

    /**
     * A `stageStateChangedEvent` block as defined below. Conflicts with `runStateChangedEvent`
     * 
     * &gt; **Note** At least one of `runStateChangedEvent` and `stageStateChangedEvent` has to be set.
     * 
     */
    @Import(name="stageStateChangedEvent")
    private @Nullable Output<ServicehookStorageQueuePipelinesStageStateChangedEventArgs> stageStateChangedEvent;

    /**
     * @return A `stageStateChangedEvent` block as defined below. Conflicts with `runStateChangedEvent`
     * 
     * &gt; **Note** At least one of `runStateChangedEvent` and `stageStateChangedEvent` has to be set.
     * 
     */
    public Optional<Output<ServicehookStorageQueuePipelinesStageStateChangedEventArgs>> stageStateChangedEvent() {
        return Optional.ofNullable(this.stageStateChangedEvent);
    }

    /**
     * event time-to-live - the duration a message can remain in the queue before it&#39;s automatically removed. Defaults to `604800`.
     * 
     */
    @Import(name="ttl")
    private @Nullable Output<Integer> ttl;

    /**
     * @return event time-to-live - the duration a message can remain in the queue before it&#39;s automatically removed. Defaults to `604800`.
     * 
     */
    public Optional<Output<Integer>> ttl() {
        return Optional.ofNullable(this.ttl);
    }

    /**
     * event visibility timout - how long a message is invisible to other consumers after it&#39;s been dequeued. Defaults to `0`.
     * 
     */
    @Import(name="visiTimeout")
    private @Nullable Output<Integer> visiTimeout;

    /**
     * @return event visibility timout - how long a message is invisible to other consumers after it&#39;s been dequeued. Defaults to `0`.
     * 
     */
    public Optional<Output<Integer>> visiTimeout() {
        return Optional.ofNullable(this.visiTimeout);
    }

    private ServicehookStorageQueuePipelinesState() {}

    private ServicehookStorageQueuePipelinesState(ServicehookStorageQueuePipelinesState $) {
        this.accountKey = $.accountKey;
        this.accountName = $.accountName;
        this.projectId = $.projectId;
        this.queueName = $.queueName;
        this.runStateChangedEvent = $.runStateChangedEvent;
        this.stageStateChangedEvent = $.stageStateChangedEvent;
        this.ttl = $.ttl;
        this.visiTimeout = $.visiTimeout;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServicehookStorageQueuePipelinesState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServicehookStorageQueuePipelinesState $;

        public Builder() {
            $ = new ServicehookStorageQueuePipelinesState();
        }

        public Builder(ServicehookStorageQueuePipelinesState defaults) {
            $ = new ServicehookStorageQueuePipelinesState(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountKey A valid account key from the queue&#39;s storage account.
         * 
         * @return builder
         * 
         */
        public Builder accountKey(@Nullable Output<String> accountKey) {
            $.accountKey = accountKey;
            return this;
        }

        /**
         * @param accountKey A valid account key from the queue&#39;s storage account.
         * 
         * @return builder
         * 
         */
        public Builder accountKey(String accountKey) {
            return accountKey(Output.of(accountKey));
        }

        /**
         * @param accountName The queue&#39;s storage account name.
         * 
         * @return builder
         * 
         */
        public Builder accountName(@Nullable Output<String> accountName) {
            $.accountName = accountName;
            return this;
        }

        /**
         * @param accountName The queue&#39;s storage account name.
         * 
         * @return builder
         * 
         */
        public Builder accountName(String accountName) {
            return accountName(Output.of(accountName));
        }

        /**
         * @param projectId The ID of the associated project. Changing this forces a new Service Hook Storage Queue Pipelines to be created.
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId The ID of the associated project. Changing this forces a new Service Hook Storage Queue Pipelines to be created.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param queueName The name of the queue that will store the events.
         * 
         * @return builder
         * 
         */
        public Builder queueName(@Nullable Output<String> queueName) {
            $.queueName = queueName;
            return this;
        }

        /**
         * @param queueName The name of the queue that will store the events.
         * 
         * @return builder
         * 
         */
        public Builder queueName(String queueName) {
            return queueName(Output.of(queueName));
        }

        /**
         * @param runStateChangedEvent A `runStateChangedEvent` block as defined below. Conflicts with `stageStateChangedEvent`
         * 
         * @return builder
         * 
         */
        public Builder runStateChangedEvent(@Nullable Output<ServicehookStorageQueuePipelinesRunStateChangedEventArgs> runStateChangedEvent) {
            $.runStateChangedEvent = runStateChangedEvent;
            return this;
        }

        /**
         * @param runStateChangedEvent A `runStateChangedEvent` block as defined below. Conflicts with `stageStateChangedEvent`
         * 
         * @return builder
         * 
         */
        public Builder runStateChangedEvent(ServicehookStorageQueuePipelinesRunStateChangedEventArgs runStateChangedEvent) {
            return runStateChangedEvent(Output.of(runStateChangedEvent));
        }

        /**
         * @param stageStateChangedEvent A `stageStateChangedEvent` block as defined below. Conflicts with `runStateChangedEvent`
         * 
         * &gt; **Note** At least one of `runStateChangedEvent` and `stageStateChangedEvent` has to be set.
         * 
         * @return builder
         * 
         */
        public Builder stageStateChangedEvent(@Nullable Output<ServicehookStorageQueuePipelinesStageStateChangedEventArgs> stageStateChangedEvent) {
            $.stageStateChangedEvent = stageStateChangedEvent;
            return this;
        }

        /**
         * @param stageStateChangedEvent A `stageStateChangedEvent` block as defined below. Conflicts with `runStateChangedEvent`
         * 
         * &gt; **Note** At least one of `runStateChangedEvent` and `stageStateChangedEvent` has to be set.
         * 
         * @return builder
         * 
         */
        public Builder stageStateChangedEvent(ServicehookStorageQueuePipelinesStageStateChangedEventArgs stageStateChangedEvent) {
            return stageStateChangedEvent(Output.of(stageStateChangedEvent));
        }

        /**
         * @param ttl event time-to-live - the duration a message can remain in the queue before it&#39;s automatically removed. Defaults to `604800`.
         * 
         * @return builder
         * 
         */
        public Builder ttl(@Nullable Output<Integer> ttl) {
            $.ttl = ttl;
            return this;
        }

        /**
         * @param ttl event time-to-live - the duration a message can remain in the queue before it&#39;s automatically removed. Defaults to `604800`.
         * 
         * @return builder
         * 
         */
        public Builder ttl(Integer ttl) {
            return ttl(Output.of(ttl));
        }

        /**
         * @param visiTimeout event visibility timout - how long a message is invisible to other consumers after it&#39;s been dequeued. Defaults to `0`.
         * 
         * @return builder
         * 
         */
        public Builder visiTimeout(@Nullable Output<Integer> visiTimeout) {
            $.visiTimeout = visiTimeout;
            return this;
        }

        /**
         * @param visiTimeout event visibility timout - how long a message is invisible to other consumers after it&#39;s been dequeued. Defaults to `0`.
         * 
         * @return builder
         * 
         */
        public Builder visiTimeout(Integer visiTimeout) {
            return visiTimeout(Output.of(visiTimeout));
        }

        public ServicehookStorageQueuePipelinesState build() {
            return $;
        }
    }

}
