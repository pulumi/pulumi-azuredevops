// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuredevops.Repository;

import com.pulumi.azuredevops.Repository.inputs.GetRepositoriesArgs;
import com.pulumi.azuredevops.Repository.inputs.GetRepositoriesPlainArgs;
import com.pulumi.azuredevops.Repository.outputs.GetRepositoriesResult;
import com.pulumi.azuredevops.Utilities;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import java.util.concurrent.CompletableFuture;

public final class RepositoryFunctions {
    /**
     * Use this data source to access information about **multiple** existing Git Repositories within Azure DevOps.
     * To read informations about a **single** Git Repository use the data source `azuredevops.Git`
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.Core.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.Repository.inputs.GetRepositoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name(&#34;Example Project&#34;)
     *             .build());
     * 
     *         final var example-all-repos = AzuredevopsFunctions.getRepositories(GetRepositoriesArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -&gt; getProjectResult.id()))
     *             .includeHidden(true)
     *             .build());
     * 
     *         final var example-single-repo = AzuredevopsFunctions.getRepositories(GetRepositoriesArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -&gt; getProjectResult.id()))
     *             .name(&#34;Example Repository&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 6.0 - Git API](https://docs.microsoft.com/en-us/rest/api/azure/devops/git/?view=azure-devops-rest-6.0)
     * 
     * @deprecated
     * azuredevops.repository.getRepositories has been deprecated in favor of azuredevops.getRepositories
     * 
     */
    @Deprecated /* azuredevops.repository.getRepositories has been deprecated in favor of azuredevops.getRepositories */
    public static Output<GetRepositoriesResult> getRepositories() {
        return getRepositories(GetRepositoriesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about **multiple** existing Git Repositories within Azure DevOps.
     * To read informations about a **single** Git Repository use the data source `azuredevops.Git`
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.Core.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.Repository.inputs.GetRepositoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name(&#34;Example Project&#34;)
     *             .build());
     * 
     *         final var example-all-repos = AzuredevopsFunctions.getRepositories(GetRepositoriesArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -&gt; getProjectResult.id()))
     *             .includeHidden(true)
     *             .build());
     * 
     *         final var example-single-repo = AzuredevopsFunctions.getRepositories(GetRepositoriesArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -&gt; getProjectResult.id()))
     *             .name(&#34;Example Repository&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 6.0 - Git API](https://docs.microsoft.com/en-us/rest/api/azure/devops/git/?view=azure-devops-rest-6.0)
     * 
     * @deprecated
     * azuredevops.repository.getRepositories has been deprecated in favor of azuredevops.getRepositories
     * 
     */
    @Deprecated /* azuredevops.repository.getRepositories has been deprecated in favor of azuredevops.getRepositories */
    public static CompletableFuture<GetRepositoriesResult> getRepositoriesPlain() {
        return getRepositoriesPlain(GetRepositoriesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about **multiple** existing Git Repositories within Azure DevOps.
     * To read informations about a **single** Git Repository use the data source `azuredevops.Git`
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.Core.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.Repository.inputs.GetRepositoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name(&#34;Example Project&#34;)
     *             .build());
     * 
     *         final var example-all-repos = AzuredevopsFunctions.getRepositories(GetRepositoriesArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -&gt; getProjectResult.id()))
     *             .includeHidden(true)
     *             .build());
     * 
     *         final var example-single-repo = AzuredevopsFunctions.getRepositories(GetRepositoriesArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -&gt; getProjectResult.id()))
     *             .name(&#34;Example Repository&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 6.0 - Git API](https://docs.microsoft.com/en-us/rest/api/azure/devops/git/?view=azure-devops-rest-6.0)
     * 
     * @deprecated
     * azuredevops.repository.getRepositories has been deprecated in favor of azuredevops.getRepositories
     * 
     */
    @Deprecated /* azuredevops.repository.getRepositories has been deprecated in favor of azuredevops.getRepositories */
    public static Output<GetRepositoriesResult> getRepositories(GetRepositoriesArgs args) {
        return getRepositories(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about **multiple** existing Git Repositories within Azure DevOps.
     * To read informations about a **single** Git Repository use the data source `azuredevops.Git`
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.Core.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.Repository.inputs.GetRepositoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name(&#34;Example Project&#34;)
     *             .build());
     * 
     *         final var example-all-repos = AzuredevopsFunctions.getRepositories(GetRepositoriesArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -&gt; getProjectResult.id()))
     *             .includeHidden(true)
     *             .build());
     * 
     *         final var example-single-repo = AzuredevopsFunctions.getRepositories(GetRepositoriesArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -&gt; getProjectResult.id()))
     *             .name(&#34;Example Repository&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 6.0 - Git API](https://docs.microsoft.com/en-us/rest/api/azure/devops/git/?view=azure-devops-rest-6.0)
     * 
     * @deprecated
     * azuredevops.repository.getRepositories has been deprecated in favor of azuredevops.getRepositories
     * 
     */
    @Deprecated /* azuredevops.repository.getRepositories has been deprecated in favor of azuredevops.getRepositories */
    public static CompletableFuture<GetRepositoriesResult> getRepositoriesPlain(GetRepositoriesPlainArgs args) {
        return getRepositoriesPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about **multiple** existing Git Repositories within Azure DevOps.
     * To read informations about a **single** Git Repository use the data source `azuredevops.Git`
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.Core.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.Repository.inputs.GetRepositoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name(&#34;Example Project&#34;)
     *             .build());
     * 
     *         final var example-all-repos = AzuredevopsFunctions.getRepositories(GetRepositoriesArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -&gt; getProjectResult.id()))
     *             .includeHidden(true)
     *             .build());
     * 
     *         final var example-single-repo = AzuredevopsFunctions.getRepositories(GetRepositoriesArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -&gt; getProjectResult.id()))
     *             .name(&#34;Example Repository&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 6.0 - Git API](https://docs.microsoft.com/en-us/rest/api/azure/devops/git/?view=azure-devops-rest-6.0)
     * 
     * @deprecated
     * azuredevops.repository.getRepositories has been deprecated in favor of azuredevops.getRepositories
     * 
     */
    @Deprecated /* azuredevops.repository.getRepositories has been deprecated in favor of azuredevops.getRepositories */
    public static Output<GetRepositoriesResult> getRepositories(GetRepositoriesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azuredevops:Repository/getRepositories:getRepositories", TypeShape.of(GetRepositoriesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about **multiple** existing Git Repositories within Azure DevOps.
     * To read informations about a **single** Git Repository use the data source `azuredevops.Git`
     * 
     * ## Example Usage
     * ```java
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.Core.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.Repository.inputs.GetRepositoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name(&#34;Example Project&#34;)
     *             .build());
     * 
     *         final var example-all-repos = AzuredevopsFunctions.getRepositories(GetRepositoriesArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -&gt; getProjectResult.id()))
     *             .includeHidden(true)
     *             .build());
     * 
     *         final var example-single-repo = AzuredevopsFunctions.getRepositories(GetRepositoriesArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -&gt; getProjectResult.id()))
     *             .name(&#34;Example Repository&#34;)
     *             .build());
     * 
     *     }
     * }
     * ```
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 6.0 - Git API](https://docs.microsoft.com/en-us/rest/api/azure/devops/git/?view=azure-devops-rest-6.0)
     * 
     * @deprecated
     * azuredevops.repository.getRepositories has been deprecated in favor of azuredevops.getRepositories
     * 
     */
    @Deprecated /* azuredevops.repository.getRepositories has been deprecated in favor of azuredevops.getRepositories */
    public static CompletableFuture<GetRepositoriesResult> getRepositoriesPlain(GetRepositoriesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azuredevops:Repository/getRepositories:getRepositories", TypeShape.of(GetRepositoriesResult.class), args, Utilities.withVersion(options));
    }
}
