// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuredevops.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetUsersFeaturesArgs extends com.pulumi.resources.ResourceArgs {

    public static final GetUsersFeaturesArgs Empty = new GetUsersFeaturesArgs();

    /**
     * Number of workers to process user data concurrently.
     * 
     * &gt; **Note** Setting `concurrent_workers` to a value greater than 1 can greatly decrease the time it takes to read the data source.
     * 
     */
    @Import(name="concurrentWorkers")
    private @Nullable Output<Integer> concurrentWorkers;

    /**
     * @return Number of workers to process user data concurrently.
     * 
     * &gt; **Note** Setting `concurrent_workers` to a value greater than 1 can greatly decrease the time it takes to read the data source.
     * 
     */
    public Optional<Output<Integer>> concurrentWorkers() {
        return Optional.ofNullable(this.concurrentWorkers);
    }

    private GetUsersFeaturesArgs() {}

    private GetUsersFeaturesArgs(GetUsersFeaturesArgs $) {
        this.concurrentWorkers = $.concurrentWorkers;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetUsersFeaturesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetUsersFeaturesArgs $;

        public Builder() {
            $ = new GetUsersFeaturesArgs();
        }

        public Builder(GetUsersFeaturesArgs defaults) {
            $ = new GetUsersFeaturesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param concurrentWorkers Number of workers to process user data concurrently.
         * 
         * &gt; **Note** Setting `concurrent_workers` to a value greater than 1 can greatly decrease the time it takes to read the data source.
         * 
         * @return builder
         * 
         */
        public Builder concurrentWorkers(@Nullable Output<Integer> concurrentWorkers) {
            $.concurrentWorkers = concurrentWorkers;
            return this;
        }

        /**
         * @param concurrentWorkers Number of workers to process user data concurrently.
         * 
         * &gt; **Note** Setting `concurrent_workers` to a value greater than 1 can greatly decrease the time it takes to read the data source.
         * 
         * @return builder
         * 
         */
        public Builder concurrentWorkers(Integer concurrentWorkers) {
            return concurrentWorkers(Output.of(concurrentWorkers));
        }

        public GetUsersFeaturesArgs build() {
            return $;
        }
    }

}
