// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuredevops;

import com.pulumi.azuredevops.inputs.ServicehookStorageQueuePipelinesRunStateChangedEventArgs;
import com.pulumi.azuredevops.inputs.ServicehookStorageQueuePipelinesStageStateChangedEventArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServicehookStorageQueuePipelinesArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServicehookStorageQueuePipelinesArgs Empty = new ServicehookStorageQueuePipelinesArgs();

    /**
     * A valid account key from the queue&#39;s storage account.
     * 
     */
    @Import(name="accountKey", required=true)
    private Output<String> accountKey;

    /**
     * @return A valid account key from the queue&#39;s storage account.
     * 
     */
    public Output<String> accountKey() {
        return this.accountKey;
    }

    /**
     * The queue&#39;s storage account name.
     * 
     */
    @Import(name="accountName", required=true)
    private Output<String> accountName;

    /**
     * @return The queue&#39;s storage account name.
     * 
     */
    public Output<String> accountName() {
        return this.accountName;
    }

    /**
     * The ID of the associated project. Changing this forces a new Service Hook Storage Queue Pipelines to be created.
     * 
     */
    @Import(name="projectId", required=true)
    private Output<String> projectId;

    /**
     * @return The ID of the associated project. Changing this forces a new Service Hook Storage Queue Pipelines to be created.
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }

    /**
     * The name of the queue that will store the events.
     * 
     */
    @Import(name="queueName", required=true)
    private Output<String> queueName;

    /**
     * @return The name of the queue that will store the events.
     * 
     */
    public Output<String> queueName() {
        return this.queueName;
    }

    /**
     * A `run_state_changed_event` block as defined below. Conflicts with `stage_state_changed_event`
     * 
     */
    @Import(name="runStateChangedEvent")
    private @Nullable Output<ServicehookStorageQueuePipelinesRunStateChangedEventArgs> runStateChangedEvent;

    /**
     * @return A `run_state_changed_event` block as defined below. Conflicts with `stage_state_changed_event`
     * 
     */
    public Optional<Output<ServicehookStorageQueuePipelinesRunStateChangedEventArgs>> runStateChangedEvent() {
        return Optional.ofNullable(this.runStateChangedEvent);
    }

    /**
     * A `stage_state_changed_event` block as defined below. Conflicts with `run_state_changed_event`
     * 
     * &gt; **Note** At least one of `run_state_changed_event` and `stage_state_changed_event` has to be set.
     * 
     */
    @Import(name="stageStateChangedEvent")
    private @Nullable Output<ServicehookStorageQueuePipelinesStageStateChangedEventArgs> stageStateChangedEvent;

    /**
     * @return A `stage_state_changed_event` block as defined below. Conflicts with `run_state_changed_event`
     * 
     * &gt; **Note** At least one of `run_state_changed_event` and `stage_state_changed_event` has to be set.
     * 
     */
    public Optional<Output<ServicehookStorageQueuePipelinesStageStateChangedEventArgs>> stageStateChangedEvent() {
        return Optional.ofNullable(this.stageStateChangedEvent);
    }

    /**
     * event time-to-live - the duration a message can remain in the queue before it&#39;s automatically removed. Defaults to `604800`.
     * 
     */
    @Import(name="ttl")
    private @Nullable Output<Integer> ttl;

    /**
     * @return event time-to-live - the duration a message can remain in the queue before it&#39;s automatically removed. Defaults to `604800`.
     * 
     */
    public Optional<Output<Integer>> ttl() {
        return Optional.ofNullable(this.ttl);
    }

    /**
     * event visibility timout - how long a message is invisible to other consumers after it&#39;s been dequeued. Defaults to `0`.
     * 
     */
    @Import(name="visiTimeout")
    private @Nullable Output<Integer> visiTimeout;

    /**
     * @return event visibility timout - how long a message is invisible to other consumers after it&#39;s been dequeued. Defaults to `0`.
     * 
     */
    public Optional<Output<Integer>> visiTimeout() {
        return Optional.ofNullable(this.visiTimeout);
    }

    private ServicehookStorageQueuePipelinesArgs() {}

    private ServicehookStorageQueuePipelinesArgs(ServicehookStorageQueuePipelinesArgs $) {
        this.accountKey = $.accountKey;
        this.accountName = $.accountName;
        this.projectId = $.projectId;
        this.queueName = $.queueName;
        this.runStateChangedEvent = $.runStateChangedEvent;
        this.stageStateChangedEvent = $.stageStateChangedEvent;
        this.ttl = $.ttl;
        this.visiTimeout = $.visiTimeout;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServicehookStorageQueuePipelinesArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServicehookStorageQueuePipelinesArgs $;

        public Builder() {
            $ = new ServicehookStorageQueuePipelinesArgs();
        }

        public Builder(ServicehookStorageQueuePipelinesArgs defaults) {
            $ = new ServicehookStorageQueuePipelinesArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param accountKey A valid account key from the queue&#39;s storage account.
         * 
         * @return builder
         * 
         */
        public Builder accountKey(Output<String> accountKey) {
            $.accountKey = accountKey;
            return this;
        }

        /**
         * @param accountKey A valid account key from the queue&#39;s storage account.
         * 
         * @return builder
         * 
         */
        public Builder accountKey(String accountKey) {
            return accountKey(Output.of(accountKey));
        }

        /**
         * @param accountName The queue&#39;s storage account name.
         * 
         * @return builder
         * 
         */
        public Builder accountName(Output<String> accountName) {
            $.accountName = accountName;
            return this;
        }

        /**
         * @param accountName The queue&#39;s storage account name.
         * 
         * @return builder
         * 
         */
        public Builder accountName(String accountName) {
            return accountName(Output.of(accountName));
        }

        /**
         * @param projectId The ID of the associated project. Changing this forces a new Service Hook Storage Queue Pipelines to be created.
         * 
         * @return builder
         * 
         */
        public Builder projectId(Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId The ID of the associated project. Changing this forces a new Service Hook Storage Queue Pipelines to be created.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param queueName The name of the queue that will store the events.
         * 
         * @return builder
         * 
         */
        public Builder queueName(Output<String> queueName) {
            $.queueName = queueName;
            return this;
        }

        /**
         * @param queueName The name of the queue that will store the events.
         * 
         * @return builder
         * 
         */
        public Builder queueName(String queueName) {
            return queueName(Output.of(queueName));
        }

        /**
         * @param runStateChangedEvent A `run_state_changed_event` block as defined below. Conflicts with `stage_state_changed_event`
         * 
         * @return builder
         * 
         */
        public Builder runStateChangedEvent(@Nullable Output<ServicehookStorageQueuePipelinesRunStateChangedEventArgs> runStateChangedEvent) {
            $.runStateChangedEvent = runStateChangedEvent;
            return this;
        }

        /**
         * @param runStateChangedEvent A `run_state_changed_event` block as defined below. Conflicts with `stage_state_changed_event`
         * 
         * @return builder
         * 
         */
        public Builder runStateChangedEvent(ServicehookStorageQueuePipelinesRunStateChangedEventArgs runStateChangedEvent) {
            return runStateChangedEvent(Output.of(runStateChangedEvent));
        }

        /**
         * @param stageStateChangedEvent A `stage_state_changed_event` block as defined below. Conflicts with `run_state_changed_event`
         * 
         * &gt; **Note** At least one of `run_state_changed_event` and `stage_state_changed_event` has to be set.
         * 
         * @return builder
         * 
         */
        public Builder stageStateChangedEvent(@Nullable Output<ServicehookStorageQueuePipelinesStageStateChangedEventArgs> stageStateChangedEvent) {
            $.stageStateChangedEvent = stageStateChangedEvent;
            return this;
        }

        /**
         * @param stageStateChangedEvent A `stage_state_changed_event` block as defined below. Conflicts with `run_state_changed_event`
         * 
         * &gt; **Note** At least one of `run_state_changed_event` and `stage_state_changed_event` has to be set.
         * 
         * @return builder
         * 
         */
        public Builder stageStateChangedEvent(ServicehookStorageQueuePipelinesStageStateChangedEventArgs stageStateChangedEvent) {
            return stageStateChangedEvent(Output.of(stageStateChangedEvent));
        }

        /**
         * @param ttl event time-to-live - the duration a message can remain in the queue before it&#39;s automatically removed. Defaults to `604800`.
         * 
         * @return builder
         * 
         */
        public Builder ttl(@Nullable Output<Integer> ttl) {
            $.ttl = ttl;
            return this;
        }

        /**
         * @param ttl event time-to-live - the duration a message can remain in the queue before it&#39;s automatically removed. Defaults to `604800`.
         * 
         * @return builder
         * 
         */
        public Builder ttl(Integer ttl) {
            return ttl(Output.of(ttl));
        }

        /**
         * @param visiTimeout event visibility timout - how long a message is invisible to other consumers after it&#39;s been dequeued. Defaults to `0`.
         * 
         * @return builder
         * 
         */
        public Builder visiTimeout(@Nullable Output<Integer> visiTimeout) {
            $.visiTimeout = visiTimeout;
            return this;
        }

        /**
         * @param visiTimeout event visibility timout - how long a message is invisible to other consumers after it&#39;s been dequeued. Defaults to `0`.
         * 
         * @return builder
         * 
         */
        public Builder visiTimeout(Integer visiTimeout) {
            return visiTimeout(Output.of(visiTimeout));
        }

        public ServicehookStorageQueuePipelinesArgs build() {
            if ($.accountKey == null) {
                throw new MissingRequiredPropertyException("ServicehookStorageQueuePipelinesArgs", "accountKey");
            }
            if ($.accountName == null) {
                throw new MissingRequiredPropertyException("ServicehookStorageQueuePipelinesArgs", "accountName");
            }
            if ($.projectId == null) {
                throw new MissingRequiredPropertyException("ServicehookStorageQueuePipelinesArgs", "projectId");
            }
            if ($.queueName == null) {
                throw new MissingRequiredPropertyException("ServicehookStorageQueuePipelinesArgs", "queueName");
            }
            return $;
        }
    }

}
