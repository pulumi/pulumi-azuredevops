// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuredevops.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BuildDefinitionJobTargetExecutionOptions {
    /**
     * @return Whether to continue the job when an error occurs. Possible values are: `true`, `false`.
     * 
     */
    private @Nullable Boolean continueOnError;
    /**
     * @return Limit the number of agents to be used. If job type is `AgentlessJob`, the concurrency is not configurable and is fixed to 50.
     * 
     */
    private @Nullable Integer maxConcurrency;
    /**
     * @return A list of comma separated configuration variables to use. These are defined on the Variables tab. For example, OperatingSystem, Browser will run the tasks for both variables. Available when `execution_options.type` is `Multi-Configuration`.
     * 
     */
    private @Nullable String multipliers;
    /**
     * @return The execution type of the Job. Possible values are: `None`, `Multi-Configuration`, `Multi-Agent`.
     * 
     */
    private String type;

    private BuildDefinitionJobTargetExecutionOptions() {}
    /**
     * @return Whether to continue the job when an error occurs. Possible values are: `true`, `false`.
     * 
     */
    public Optional<Boolean> continueOnError() {
        return Optional.ofNullable(this.continueOnError);
    }
    /**
     * @return Limit the number of agents to be used. If job type is `AgentlessJob`, the concurrency is not configurable and is fixed to 50.
     * 
     */
    public Optional<Integer> maxConcurrency() {
        return Optional.ofNullable(this.maxConcurrency);
    }
    /**
     * @return A list of comma separated configuration variables to use. These are defined on the Variables tab. For example, OperatingSystem, Browser will run the tasks for both variables. Available when `execution_options.type` is `Multi-Configuration`.
     * 
     */
    public Optional<String> multipliers() {
        return Optional.ofNullable(this.multipliers);
    }
    /**
     * @return The execution type of the Job. Possible values are: `None`, `Multi-Configuration`, `Multi-Agent`.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BuildDefinitionJobTargetExecutionOptions defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean continueOnError;
        private @Nullable Integer maxConcurrency;
        private @Nullable String multipliers;
        private String type;
        public Builder() {}
        public Builder(BuildDefinitionJobTargetExecutionOptions defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.continueOnError = defaults.continueOnError;
    	      this.maxConcurrency = defaults.maxConcurrency;
    	      this.multipliers = defaults.multipliers;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder continueOnError(@Nullable Boolean continueOnError) {

            this.continueOnError = continueOnError;
            return this;
        }
        @CustomType.Setter
        public Builder maxConcurrency(@Nullable Integer maxConcurrency) {

            this.maxConcurrency = maxConcurrency;
            return this;
        }
        @CustomType.Setter
        public Builder multipliers(@Nullable String multipliers) {

            this.multipliers = multipliers;
            return this;
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("BuildDefinitionJobTargetExecutionOptions", "type");
            }
            this.type = type;
            return this;
        }
        public BuildDefinitionJobTargetExecutionOptions build() {
            final var _resultValue = new BuildDefinitionJobTargetExecutionOptions();
            _resultValue.continueOnError = continueOnError;
            _resultValue.maxConcurrency = maxConcurrency;
            _resultValue.multipliers = multipliers;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
