// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuredevops.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetServiceEndpointAzureRMResult {
    /**
     * @return The Authorization Scheme Map.
     * 
     */
    private Map<String,String> authorization;
    /**
     * @return The Management Group ID of the Service Endpoint is target, if available.
     * 
     */
    private String azurermManagementGroupId;
    /**
     * @return The Management Group Name of the Service Endpoint target, if available.
     * 
     */
    private String azurermManagementGroupName;
    /**
     * @return The Tenant ID of the Azure targets.
     * 
     */
    private String azurermSpnTenantid;
    /**
     * @return The Subscription ID of the Service Endpoint target, if available.
     * 
     */
    private String azurermSubscriptionId;
    /**
     * @return The Subscription Name of the Service Endpoint target, if available.
     * 
     */
    private String azurermSubscriptionName;
    /**
     * @return The description of the Service Endpoint.
     * 
     */
    private String description;
    /**
     * @return The Cloud Environment.
     * 
     */
    private String environment;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String projectId;
    /**
     * @return The Resource Group of the Service Endpoint target, if available.
     * 
     */
    private String resourceGroup;
    /**
     * @return The server URL of the service Endpoint.
     * 
     */
    private String serverUrl;
    /**
     * @return The authentication scheme of Azure Resource Management Endpoint
     * 
     */
    private String serviceEndpointAuthenticationScheme;
    private String serviceEndpointId;
    private String serviceEndpointName;
    /**
     * @return The Application(Client) ID of the Service Principal.
     * 
     */
    private String servicePrincipalId;
    /**
     * @return The issuer if `of the Workload Identity Federation Subject
     * 
     */
    private String workloadIdentityFederationIssuer;
    /**
     * @return The subject of the Workload Identity Federation Subject.
     * 
     */
    private String workloadIdentityFederationSubject;

    private GetServiceEndpointAzureRMResult() {}
    /**
     * @return The Authorization Scheme Map.
     * 
     */
    public Map<String,String> authorization() {
        return this.authorization;
    }
    /**
     * @return The Management Group ID of the Service Endpoint is target, if available.
     * 
     */
    public String azurermManagementGroupId() {
        return this.azurermManagementGroupId;
    }
    /**
     * @return The Management Group Name of the Service Endpoint target, if available.
     * 
     */
    public String azurermManagementGroupName() {
        return this.azurermManagementGroupName;
    }
    /**
     * @return The Tenant ID of the Azure targets.
     * 
     */
    public String azurermSpnTenantid() {
        return this.azurermSpnTenantid;
    }
    /**
     * @return The Subscription ID of the Service Endpoint target, if available.
     * 
     */
    public String azurermSubscriptionId() {
        return this.azurermSubscriptionId;
    }
    /**
     * @return The Subscription Name of the Service Endpoint target, if available.
     * 
     */
    public String azurermSubscriptionName() {
        return this.azurermSubscriptionName;
    }
    /**
     * @return The description of the Service Endpoint.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The Cloud Environment.
     * 
     */
    public String environment() {
        return this.environment;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String projectId() {
        return this.projectId;
    }
    /**
     * @return The Resource Group of the Service Endpoint target, if available.
     * 
     */
    public String resourceGroup() {
        return this.resourceGroup;
    }
    /**
     * @return The server URL of the service Endpoint.
     * 
     */
    public String serverUrl() {
        return this.serverUrl;
    }
    /**
     * @return The authentication scheme of Azure Resource Management Endpoint
     * 
     */
    public String serviceEndpointAuthenticationScheme() {
        return this.serviceEndpointAuthenticationScheme;
    }
    public String serviceEndpointId() {
        return this.serviceEndpointId;
    }
    public String serviceEndpointName() {
        return this.serviceEndpointName;
    }
    /**
     * @return The Application(Client) ID of the Service Principal.
     * 
     */
    public String servicePrincipalId() {
        return this.servicePrincipalId;
    }
    /**
     * @return The issuer if `of the Workload Identity Federation Subject
     * 
     */
    public String workloadIdentityFederationIssuer() {
        return this.workloadIdentityFederationIssuer;
    }
    /**
     * @return The subject of the Workload Identity Federation Subject.
     * 
     */
    public String workloadIdentityFederationSubject() {
        return this.workloadIdentityFederationSubject;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceEndpointAzureRMResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private Map<String,String> authorization;
        private String azurermManagementGroupId;
        private String azurermManagementGroupName;
        private String azurermSpnTenantid;
        private String azurermSubscriptionId;
        private String azurermSubscriptionName;
        private String description;
        private String environment;
        private String id;
        private String projectId;
        private String resourceGroup;
        private String serverUrl;
        private String serviceEndpointAuthenticationScheme;
        private String serviceEndpointId;
        private String serviceEndpointName;
        private String servicePrincipalId;
        private String workloadIdentityFederationIssuer;
        private String workloadIdentityFederationSubject;
        public Builder() {}
        public Builder(GetServiceEndpointAzureRMResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.authorization = defaults.authorization;
    	      this.azurermManagementGroupId = defaults.azurermManagementGroupId;
    	      this.azurermManagementGroupName = defaults.azurermManagementGroupName;
    	      this.azurermSpnTenantid = defaults.azurermSpnTenantid;
    	      this.azurermSubscriptionId = defaults.azurermSubscriptionId;
    	      this.azurermSubscriptionName = defaults.azurermSubscriptionName;
    	      this.description = defaults.description;
    	      this.environment = defaults.environment;
    	      this.id = defaults.id;
    	      this.projectId = defaults.projectId;
    	      this.resourceGroup = defaults.resourceGroup;
    	      this.serverUrl = defaults.serverUrl;
    	      this.serviceEndpointAuthenticationScheme = defaults.serviceEndpointAuthenticationScheme;
    	      this.serviceEndpointId = defaults.serviceEndpointId;
    	      this.serviceEndpointName = defaults.serviceEndpointName;
    	      this.servicePrincipalId = defaults.servicePrincipalId;
    	      this.workloadIdentityFederationIssuer = defaults.workloadIdentityFederationIssuer;
    	      this.workloadIdentityFederationSubject = defaults.workloadIdentityFederationSubject;
        }

        @CustomType.Setter
        public Builder authorization(Map<String,String> authorization) {
            if (authorization == null) {
              throw new MissingRequiredPropertyException("GetServiceEndpointAzureRMResult", "authorization");
            }
            this.authorization = authorization;
            return this;
        }
        @CustomType.Setter
        public Builder azurermManagementGroupId(String azurermManagementGroupId) {
            if (azurermManagementGroupId == null) {
              throw new MissingRequiredPropertyException("GetServiceEndpointAzureRMResult", "azurermManagementGroupId");
            }
            this.azurermManagementGroupId = azurermManagementGroupId;
            return this;
        }
        @CustomType.Setter
        public Builder azurermManagementGroupName(String azurermManagementGroupName) {
            if (azurermManagementGroupName == null) {
              throw new MissingRequiredPropertyException("GetServiceEndpointAzureRMResult", "azurermManagementGroupName");
            }
            this.azurermManagementGroupName = azurermManagementGroupName;
            return this;
        }
        @CustomType.Setter
        public Builder azurermSpnTenantid(String azurermSpnTenantid) {
            if (azurermSpnTenantid == null) {
              throw new MissingRequiredPropertyException("GetServiceEndpointAzureRMResult", "azurermSpnTenantid");
            }
            this.azurermSpnTenantid = azurermSpnTenantid;
            return this;
        }
        @CustomType.Setter
        public Builder azurermSubscriptionId(String azurermSubscriptionId) {
            if (azurermSubscriptionId == null) {
              throw new MissingRequiredPropertyException("GetServiceEndpointAzureRMResult", "azurermSubscriptionId");
            }
            this.azurermSubscriptionId = azurermSubscriptionId;
            return this;
        }
        @CustomType.Setter
        public Builder azurermSubscriptionName(String azurermSubscriptionName) {
            if (azurermSubscriptionName == null) {
              throw new MissingRequiredPropertyException("GetServiceEndpointAzureRMResult", "azurermSubscriptionName");
            }
            this.azurermSubscriptionName = azurermSubscriptionName;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetServiceEndpointAzureRMResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder environment(String environment) {
            if (environment == null) {
              throw new MissingRequiredPropertyException("GetServiceEndpointAzureRMResult", "environment");
            }
            this.environment = environment;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetServiceEndpointAzureRMResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            if (projectId == null) {
              throw new MissingRequiredPropertyException("GetServiceEndpointAzureRMResult", "projectId");
            }
            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroup(String resourceGroup) {
            if (resourceGroup == null) {
              throw new MissingRequiredPropertyException("GetServiceEndpointAzureRMResult", "resourceGroup");
            }
            this.resourceGroup = resourceGroup;
            return this;
        }
        @CustomType.Setter
        public Builder serverUrl(String serverUrl) {
            if (serverUrl == null) {
              throw new MissingRequiredPropertyException("GetServiceEndpointAzureRMResult", "serverUrl");
            }
            this.serverUrl = serverUrl;
            return this;
        }
        @CustomType.Setter
        public Builder serviceEndpointAuthenticationScheme(String serviceEndpointAuthenticationScheme) {
            if (serviceEndpointAuthenticationScheme == null) {
              throw new MissingRequiredPropertyException("GetServiceEndpointAzureRMResult", "serviceEndpointAuthenticationScheme");
            }
            this.serviceEndpointAuthenticationScheme = serviceEndpointAuthenticationScheme;
            return this;
        }
        @CustomType.Setter
        public Builder serviceEndpointId(String serviceEndpointId) {
            if (serviceEndpointId == null) {
              throw new MissingRequiredPropertyException("GetServiceEndpointAzureRMResult", "serviceEndpointId");
            }
            this.serviceEndpointId = serviceEndpointId;
            return this;
        }
        @CustomType.Setter
        public Builder serviceEndpointName(String serviceEndpointName) {
            if (serviceEndpointName == null) {
              throw new MissingRequiredPropertyException("GetServiceEndpointAzureRMResult", "serviceEndpointName");
            }
            this.serviceEndpointName = serviceEndpointName;
            return this;
        }
        @CustomType.Setter
        public Builder servicePrincipalId(String servicePrincipalId) {
            if (servicePrincipalId == null) {
              throw new MissingRequiredPropertyException("GetServiceEndpointAzureRMResult", "servicePrincipalId");
            }
            this.servicePrincipalId = servicePrincipalId;
            return this;
        }
        @CustomType.Setter
        public Builder workloadIdentityFederationIssuer(String workloadIdentityFederationIssuer) {
            if (workloadIdentityFederationIssuer == null) {
              throw new MissingRequiredPropertyException("GetServiceEndpointAzureRMResult", "workloadIdentityFederationIssuer");
            }
            this.workloadIdentityFederationIssuer = workloadIdentityFederationIssuer;
            return this;
        }
        @CustomType.Setter
        public Builder workloadIdentityFederationSubject(String workloadIdentityFederationSubject) {
            if (workloadIdentityFederationSubject == null) {
              throw new MissingRequiredPropertyException("GetServiceEndpointAzureRMResult", "workloadIdentityFederationSubject");
            }
            this.workloadIdentityFederationSubject = workloadIdentityFederationSubject;
            return this;
        }
        public GetServiceEndpointAzureRMResult build() {
            final var _resultValue = new GetServiceEndpointAzureRMResult();
            _resultValue.authorization = authorization;
            _resultValue.azurermManagementGroupId = azurermManagementGroupId;
            _resultValue.azurermManagementGroupName = azurermManagementGroupName;
            _resultValue.azurermSpnTenantid = azurermSpnTenantid;
            _resultValue.azurermSubscriptionId = azurermSubscriptionId;
            _resultValue.azurermSubscriptionName = azurermSubscriptionName;
            _resultValue.description = description;
            _resultValue.environment = environment;
            _resultValue.id = id;
            _resultValue.projectId = projectId;
            _resultValue.resourceGroup = resourceGroup;
            _resultValue.serverUrl = serverUrl;
            _resultValue.serviceEndpointAuthenticationScheme = serviceEndpointAuthenticationScheme;
            _resultValue.serviceEndpointId = serviceEndpointId;
            _resultValue.serviceEndpointName = serviceEndpointName;
            _resultValue.servicePrincipalId = servicePrincipalId;
            _resultValue.workloadIdentityFederationIssuer = workloadIdentityFederationIssuer;
            _resultValue.workloadIdentityFederationSubject = workloadIdentityFederationSubject;
            return _resultValue;
        }
    }
}
