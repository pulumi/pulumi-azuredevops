// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuredevops.inputs;

import com.pulumi.azuredevops.inputs.BuildDefinitionJobDependencyArgs;
import com.pulumi.azuredevops.inputs.BuildDefinitionJobTargetArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BuildDefinitionJobArgs extends com.pulumi.resources.ResourceArgs {

    public static final BuildDefinitionJobArgs Empty = new BuildDefinitionJobArgs();

    /**
     * Enables scripts and other processes launched by tasks to access the OAuth token through the `System.AccessToken` variable. Possible values: `true`, `false`. Defaults to `false`. Available when Job type is `AgentJob`
     * 
     */
    @Import(name="allowScriptsAuthAccessOption")
    private @Nullable Output<Boolean> allowScriptsAuthAccessOption;

    /**
     * @return Enables scripts and other processes launched by tasks to access the OAuth token through the `System.AccessToken` variable. Possible values: `true`, `false`. Defaults to `false`. Available when Job type is `AgentJob`
     * 
     */
    public Optional<Output<Boolean>> allowScriptsAuthAccessOption() {
        return Optional.ofNullable(this.allowScriptsAuthAccessOption);
    }

    /**
     * Specifies when this job should run. Can **Custom conditions** to specify more complex conditions. Possible values: `succeeded()`, `succeededOrFailed()`, `always()`, `failed()` etc. More details: [Pipeline conditions](https://learn.microsoft.com/en-us/azure/devops/pipelines/process/conditions?view=azure-devops)
     * 
     */
    @Import(name="condition", required=true)
    private Output<String> condition;

    /**
     * @return Specifies when this job should run. Can **Custom conditions** to specify more complex conditions. Possible values: `succeeded()`, `succeededOrFailed()`, `always()`, `failed()` etc. More details: [Pipeline conditions](https://learn.microsoft.com/en-us/azure/devops/pipelines/process/conditions?view=azure-devops)
     * 
     */
    public Output<String> condition() {
        return this.condition;
    }

    /**
     * A `dependencies` blocks as documented below. Define the job dependencies.
     * 
     */
    @Import(name="dependencies")
    private @Nullable Output<List<BuildDefinitionJobDependencyArgs>> dependencies;

    /**
     * @return A `dependencies` blocks as documented below. Define the job dependencies.
     * 
     */
    public Optional<Output<List<BuildDefinitionJobDependencyArgs>>> dependencies() {
        return Optional.ofNullable(this.dependencies);
    }

    /**
     * The job authorization scope for builds queued against this definition. Possible values are: `project`, `projectCollection`. Defaults to `projectCollection`.
     * 
     */
    @Import(name="jobAuthorizationScope")
    private @Nullable Output<String> jobAuthorizationScope;

    /**
     * @return The job authorization scope for builds queued against this definition. Possible values are: `project`, `projectCollection`. Defaults to `projectCollection`.
     * 
     */
    public Optional<Output<String>> jobAuthorizationScope() {
        return Optional.ofNullable(this.jobAuthorizationScope);
    }

    /**
     * The job cancel timeout (in minutes) for builds cancelled by user for this definition. Possible values are between `0` and `60`. Defaults to `0`.
     * 
     */
    @Import(name="jobCancelTimeoutInMinutes")
    private @Nullable Output<Integer> jobCancelTimeoutInMinutes;

    /**
     * @return The job cancel timeout (in minutes) for builds cancelled by user for this definition. Possible values are between `0` and `60`. Defaults to `0`.
     * 
     */
    public Optional<Output<Integer>> jobCancelTimeoutInMinutes() {
        return Optional.ofNullable(this.jobCancelTimeoutInMinutes);
    }

    /**
     * The job execution timeout (in minutes) for builds queued against this definition. Possible values are between `0` and `1000000000`. Defaults to `0`.
     * 
     */
    @Import(name="jobTimeoutInMinutes")
    private @Nullable Output<Integer> jobTimeoutInMinutes;

    /**
     * @return The job execution timeout (in minutes) for builds queued against this definition. Possible values are between `0` and `1000000000`. Defaults to `0`.
     * 
     */
    public Optional<Output<Integer>> jobTimeoutInMinutes() {
        return Optional.ofNullable(this.jobTimeoutInMinutes);
    }

    /**
     * The name of the job.
     * 
     */
    @Import(name="name", required=true)
    private Output<String> name;

    /**
     * @return The name of the job.
     * 
     */
    public Output<String> name() {
        return this.name;
    }

    /**
     * The reference name of the job, can be used to define the job dependencies.
     * 
     */
    @Import(name="refName", required=true)
    private Output<String> refName;

    /**
     * @return The reference name of the job, can be used to define the job dependencies.
     * 
     */
    public Output<String> refName() {
        return this.refName;
    }

    /**
     * A `target` blocks as documented below.
     * 
     */
    @Import(name="target", required=true)
    private Output<BuildDefinitionJobTargetArgs> target;

    /**
     * @return A `target` blocks as documented below.
     * 
     */
    public Output<BuildDefinitionJobTargetArgs> target() {
        return this.target;
    }

    private BuildDefinitionJobArgs() {}

    private BuildDefinitionJobArgs(BuildDefinitionJobArgs $) {
        this.allowScriptsAuthAccessOption = $.allowScriptsAuthAccessOption;
        this.condition = $.condition;
        this.dependencies = $.dependencies;
        this.jobAuthorizationScope = $.jobAuthorizationScope;
        this.jobCancelTimeoutInMinutes = $.jobCancelTimeoutInMinutes;
        this.jobTimeoutInMinutes = $.jobTimeoutInMinutes;
        this.name = $.name;
        this.refName = $.refName;
        this.target = $.target;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BuildDefinitionJobArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BuildDefinitionJobArgs $;

        public Builder() {
            $ = new BuildDefinitionJobArgs();
        }

        public Builder(BuildDefinitionJobArgs defaults) {
            $ = new BuildDefinitionJobArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param allowScriptsAuthAccessOption Enables scripts and other processes launched by tasks to access the OAuth token through the `System.AccessToken` variable. Possible values: `true`, `false`. Defaults to `false`. Available when Job type is `AgentJob`
         * 
         * @return builder
         * 
         */
        public Builder allowScriptsAuthAccessOption(@Nullable Output<Boolean> allowScriptsAuthAccessOption) {
            $.allowScriptsAuthAccessOption = allowScriptsAuthAccessOption;
            return this;
        }

        /**
         * @param allowScriptsAuthAccessOption Enables scripts and other processes launched by tasks to access the OAuth token through the `System.AccessToken` variable. Possible values: `true`, `false`. Defaults to `false`. Available when Job type is `AgentJob`
         * 
         * @return builder
         * 
         */
        public Builder allowScriptsAuthAccessOption(Boolean allowScriptsAuthAccessOption) {
            return allowScriptsAuthAccessOption(Output.of(allowScriptsAuthAccessOption));
        }

        /**
         * @param condition Specifies when this job should run. Can **Custom conditions** to specify more complex conditions. Possible values: `succeeded()`, `succeededOrFailed()`, `always()`, `failed()` etc. More details: [Pipeline conditions](https://learn.microsoft.com/en-us/azure/devops/pipelines/process/conditions?view=azure-devops)
         * 
         * @return builder
         * 
         */
        public Builder condition(Output<String> condition) {
            $.condition = condition;
            return this;
        }

        /**
         * @param condition Specifies when this job should run. Can **Custom conditions** to specify more complex conditions. Possible values: `succeeded()`, `succeededOrFailed()`, `always()`, `failed()` etc. More details: [Pipeline conditions](https://learn.microsoft.com/en-us/azure/devops/pipelines/process/conditions?view=azure-devops)
         * 
         * @return builder
         * 
         */
        public Builder condition(String condition) {
            return condition(Output.of(condition));
        }

        /**
         * @param dependencies A `dependencies` blocks as documented below. Define the job dependencies.
         * 
         * @return builder
         * 
         */
        public Builder dependencies(@Nullable Output<List<BuildDefinitionJobDependencyArgs>> dependencies) {
            $.dependencies = dependencies;
            return this;
        }

        /**
         * @param dependencies A `dependencies` blocks as documented below. Define the job dependencies.
         * 
         * @return builder
         * 
         */
        public Builder dependencies(List<BuildDefinitionJobDependencyArgs> dependencies) {
            return dependencies(Output.of(dependencies));
        }

        /**
         * @param dependencies A `dependencies` blocks as documented below. Define the job dependencies.
         * 
         * @return builder
         * 
         */
        public Builder dependencies(BuildDefinitionJobDependencyArgs... dependencies) {
            return dependencies(List.of(dependencies));
        }

        /**
         * @param jobAuthorizationScope The job authorization scope for builds queued against this definition. Possible values are: `project`, `projectCollection`. Defaults to `projectCollection`.
         * 
         * @return builder
         * 
         */
        public Builder jobAuthorizationScope(@Nullable Output<String> jobAuthorizationScope) {
            $.jobAuthorizationScope = jobAuthorizationScope;
            return this;
        }

        /**
         * @param jobAuthorizationScope The job authorization scope for builds queued against this definition. Possible values are: `project`, `projectCollection`. Defaults to `projectCollection`.
         * 
         * @return builder
         * 
         */
        public Builder jobAuthorizationScope(String jobAuthorizationScope) {
            return jobAuthorizationScope(Output.of(jobAuthorizationScope));
        }

        /**
         * @param jobCancelTimeoutInMinutes The job cancel timeout (in minutes) for builds cancelled by user for this definition. Possible values are between `0` and `60`. Defaults to `0`.
         * 
         * @return builder
         * 
         */
        public Builder jobCancelTimeoutInMinutes(@Nullable Output<Integer> jobCancelTimeoutInMinutes) {
            $.jobCancelTimeoutInMinutes = jobCancelTimeoutInMinutes;
            return this;
        }

        /**
         * @param jobCancelTimeoutInMinutes The job cancel timeout (in minutes) for builds cancelled by user for this definition. Possible values are between `0` and `60`. Defaults to `0`.
         * 
         * @return builder
         * 
         */
        public Builder jobCancelTimeoutInMinutes(Integer jobCancelTimeoutInMinutes) {
            return jobCancelTimeoutInMinutes(Output.of(jobCancelTimeoutInMinutes));
        }

        /**
         * @param jobTimeoutInMinutes The job execution timeout (in minutes) for builds queued against this definition. Possible values are between `0` and `1000000000`. Defaults to `0`.
         * 
         * @return builder
         * 
         */
        public Builder jobTimeoutInMinutes(@Nullable Output<Integer> jobTimeoutInMinutes) {
            $.jobTimeoutInMinutes = jobTimeoutInMinutes;
            return this;
        }

        /**
         * @param jobTimeoutInMinutes The job execution timeout (in minutes) for builds queued against this definition. Possible values are between `0` and `1000000000`. Defaults to `0`.
         * 
         * @return builder
         * 
         */
        public Builder jobTimeoutInMinutes(Integer jobTimeoutInMinutes) {
            return jobTimeoutInMinutes(Output.of(jobTimeoutInMinutes));
        }

        /**
         * @param name The name of the job.
         * 
         * @return builder
         * 
         */
        public Builder name(Output<String> name) {
            $.name = name;
            return this;
        }

        /**
         * @param name The name of the job.
         * 
         * @return builder
         * 
         */
        public Builder name(String name) {
            return name(Output.of(name));
        }

        /**
         * @param refName The reference name of the job, can be used to define the job dependencies.
         * 
         * @return builder
         * 
         */
        public Builder refName(Output<String> refName) {
            $.refName = refName;
            return this;
        }

        /**
         * @param refName The reference name of the job, can be used to define the job dependencies.
         * 
         * @return builder
         * 
         */
        public Builder refName(String refName) {
            return refName(Output.of(refName));
        }

        /**
         * @param target A `target` blocks as documented below.
         * 
         * @return builder
         * 
         */
        public Builder target(Output<BuildDefinitionJobTargetArgs> target) {
            $.target = target;
            return this;
        }

        /**
         * @param target A `target` blocks as documented below.
         * 
         * @return builder
         * 
         */
        public Builder target(BuildDefinitionJobTargetArgs target) {
            return target(Output.of(target));
        }

        public BuildDefinitionJobArgs build() {
            if ($.condition == null) {
                throw new MissingRequiredPropertyException("BuildDefinitionJobArgs", "condition");
            }
            if ($.name == null) {
                throw new MissingRequiredPropertyException("BuildDefinitionJobArgs", "name");
            }
            if ($.refName == null) {
                throw new MissingRequiredPropertyException("BuildDefinitionJobArgs", "refName");
            }
            if ($.target == null) {
                throw new MissingRequiredPropertyException("BuildDefinitionJobArgs", "target");
            }
            return $;
        }
    }

}
