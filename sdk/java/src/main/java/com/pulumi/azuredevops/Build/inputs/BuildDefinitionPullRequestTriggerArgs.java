// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuredevops.Build.inputs;

import com.pulumi.azuredevops.Build.inputs.BuildDefinitionPullRequestTriggerForksArgs;
import com.pulumi.azuredevops.Build.inputs.BuildDefinitionPullRequestTriggerOverrideArgs;
import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BuildDefinitionPullRequestTriggerArgs extends com.pulumi.resources.ResourceArgs {

    public static final BuildDefinitionPullRequestTriggerArgs Empty = new BuildDefinitionPullRequestTriggerArgs();

    @Import(name="commentRequired")
    private @Nullable Output<String> commentRequired;

    public Optional<Output<String>> commentRequired() {
        return Optional.ofNullable(this.commentRequired);
    }

    /**
     * Set permissions for Forked repositories.
     * 
     */
    @Import(name="forks", required=true)
    private Output<BuildDefinitionPullRequestTriggerForksArgs> forks;

    /**
     * @return Set permissions for Forked repositories.
     * 
     */
    public Output<BuildDefinitionPullRequestTriggerForksArgs> forks() {
        return this.forks;
    }

    @Import(name="initialBranch")
    private @Nullable Output<String> initialBranch;

    public Optional<Output<String>> initialBranch() {
        return Optional.ofNullable(this.initialBranch);
    }

    /**
     * Override the azure-pipeline file and use this configuration for all builds.
     * 
     */
    @Import(name="override")
    private @Nullable Output<BuildDefinitionPullRequestTriggerOverrideArgs> override;

    /**
     * @return Override the azure-pipeline file and use this configuration for all builds.
     * 
     */
    public Optional<Output<BuildDefinitionPullRequestTriggerOverrideArgs>> override() {
        return Optional.ofNullable(this.override);
    }

    /**
     * Use the azure-pipeline file for the build configuration. Defaults to `false`.
     * 
     */
    @Import(name="useYaml")
    private @Nullable Output<Boolean> useYaml;

    /**
     * @return Use the azure-pipeline file for the build configuration. Defaults to `false`.
     * 
     */
    public Optional<Output<Boolean>> useYaml() {
        return Optional.ofNullable(this.useYaml);
    }

    private BuildDefinitionPullRequestTriggerArgs() {}

    private BuildDefinitionPullRequestTriggerArgs(BuildDefinitionPullRequestTriggerArgs $) {
        this.commentRequired = $.commentRequired;
        this.forks = $.forks;
        this.initialBranch = $.initialBranch;
        this.override = $.override;
        this.useYaml = $.useYaml;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BuildDefinitionPullRequestTriggerArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BuildDefinitionPullRequestTriggerArgs $;

        public Builder() {
            $ = new BuildDefinitionPullRequestTriggerArgs();
        }

        public Builder(BuildDefinitionPullRequestTriggerArgs defaults) {
            $ = new BuildDefinitionPullRequestTriggerArgs(Objects.requireNonNull(defaults));
        }

        public Builder commentRequired(@Nullable Output<String> commentRequired) {
            $.commentRequired = commentRequired;
            return this;
        }

        public Builder commentRequired(String commentRequired) {
            return commentRequired(Output.of(commentRequired));
        }

        /**
         * @param forks Set permissions for Forked repositories.
         * 
         * @return builder
         * 
         */
        public Builder forks(Output<BuildDefinitionPullRequestTriggerForksArgs> forks) {
            $.forks = forks;
            return this;
        }

        /**
         * @param forks Set permissions for Forked repositories.
         * 
         * @return builder
         * 
         */
        public Builder forks(BuildDefinitionPullRequestTriggerForksArgs forks) {
            return forks(Output.of(forks));
        }

        public Builder initialBranch(@Nullable Output<String> initialBranch) {
            $.initialBranch = initialBranch;
            return this;
        }

        public Builder initialBranch(String initialBranch) {
            return initialBranch(Output.of(initialBranch));
        }

        /**
         * @param override Override the azure-pipeline file and use this configuration for all builds.
         * 
         * @return builder
         * 
         */
        public Builder override(@Nullable Output<BuildDefinitionPullRequestTriggerOverrideArgs> override) {
            $.override = override;
            return this;
        }

        /**
         * @param override Override the azure-pipeline file and use this configuration for all builds.
         * 
         * @return builder
         * 
         */
        public Builder override(BuildDefinitionPullRequestTriggerOverrideArgs override) {
            return override(Output.of(override));
        }

        /**
         * @param useYaml Use the azure-pipeline file for the build configuration. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder useYaml(@Nullable Output<Boolean> useYaml) {
            $.useYaml = useYaml;
            return this;
        }

        /**
         * @param useYaml Use the azure-pipeline file for the build configuration. Defaults to `false`.
         * 
         * @return builder
         * 
         */
        public Builder useYaml(Boolean useYaml) {
            return useYaml(Output.of(useYaml));
        }

        public BuildDefinitionPullRequestTriggerArgs build() {
            $.forks = Objects.requireNonNull($.forks, "expected parameter 'forks' to be non-null");
            return $;
        }
    }

}
