// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuredevops.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class PipelineAuthorizationState extends com.pulumi.resources.ResourceArgs {

    public static final PipelineAuthorizationState Empty = new PipelineAuthorizationState();

    /**
     * The ID of the pipeline. If not configured, all pipelines will be authorized. Changing this forces a new resource to be created.
     * 
     */
    @Import(name="pipelineId")
    private @Nullable Output<Integer> pipelineId;

    /**
     * @return The ID of the pipeline. If not configured, all pipelines will be authorized. Changing this forces a new resource to be created.
     * 
     */
    public Optional<Output<Integer>> pipelineId() {
        return Optional.ofNullable(this.pipelineId);
    }

    /**
     * The  ID of the project. Changing this forces a new resource to be created
     * 
     */
    @Import(name="projectId")
    private @Nullable Output<String> projectId;

    /**
     * @return The  ID of the project. Changing this forces a new resource to be created
     * 
     */
    public Optional<Output<String>> projectId() {
        return Optional.ofNullable(this.projectId);
    }

    /**
     * The ID of the resource to authorize. Changing this forces a new resource to be created
     * 
     */
    @Import(name="resourceId")
    private @Nullable Output<String> resourceId;

    /**
     * @return The ID of the resource to authorize. Changing this forces a new resource to be created
     * 
     */
    public Optional<Output<String>> resourceId() {
        return Optional.ofNullable(this.resourceId);
    }

    /**
     * The type of the resource to authorize. Valid values: `endpoint`, `queue`, `variablegroup`, `environment`, `repository`. Changing this forces a new resource to be created
     * 
     */
    @Import(name="type")
    private @Nullable Output<String> type;

    /**
     * @return The type of the resource to authorize. Valid values: `endpoint`, `queue`, `variablegroup`, `environment`, `repository`. Changing this forces a new resource to be created
     * 
     */
    public Optional<Output<String>> type() {
        return Optional.ofNullable(this.type);
    }

    private PipelineAuthorizationState() {}

    private PipelineAuthorizationState(PipelineAuthorizationState $) {
        this.pipelineId = $.pipelineId;
        this.projectId = $.projectId;
        this.resourceId = $.resourceId;
        this.type = $.type;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(PipelineAuthorizationState defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private PipelineAuthorizationState $;

        public Builder() {
            $ = new PipelineAuthorizationState();
        }

        public Builder(PipelineAuthorizationState defaults) {
            $ = new PipelineAuthorizationState(Objects.requireNonNull(defaults));
        }

        /**
         * @param pipelineId The ID of the pipeline. If not configured, all pipelines will be authorized. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder pipelineId(@Nullable Output<Integer> pipelineId) {
            $.pipelineId = pipelineId;
            return this;
        }

        /**
         * @param pipelineId The ID of the pipeline. If not configured, all pipelines will be authorized. Changing this forces a new resource to be created.
         * 
         * @return builder
         * 
         */
        public Builder pipelineId(Integer pipelineId) {
            return pipelineId(Output.of(pipelineId));
        }

        /**
         * @param projectId The  ID of the project. Changing this forces a new resource to be created
         * 
         * @return builder
         * 
         */
        public Builder projectId(@Nullable Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId The  ID of the project. Changing this forces a new resource to be created
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param resourceId The ID of the resource to authorize. Changing this forces a new resource to be created
         * 
         * @return builder
         * 
         */
        public Builder resourceId(@Nullable Output<String> resourceId) {
            $.resourceId = resourceId;
            return this;
        }

        /**
         * @param resourceId The ID of the resource to authorize. Changing this forces a new resource to be created
         * 
         * @return builder
         * 
         */
        public Builder resourceId(String resourceId) {
            return resourceId(Output.of(resourceId));
        }

        /**
         * @param type The type of the resource to authorize. Valid values: `endpoint`, `queue`, `variablegroup`, `environment`, `repository`. Changing this forces a new resource to be created
         * 
         * @return builder
         * 
         */
        public Builder type(@Nullable Output<String> type) {
            $.type = type;
            return this;
        }

        /**
         * @param type The type of the resource to authorize. Valid values: `endpoint`, `queue`, `variablegroup`, `environment`, `repository`. Changing this forces a new resource to be created
         * 
         * @return builder
         * 
         */
        public Builder type(String type) {
            return type(Output.of(type));
        }

        public PipelineAuthorizationState build() {
            return $;
        }
    }

}
