// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuredevops.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServicehookStorageQueuePipelinesRunStateChangedEvent {
    /**
     * @return The pipeline ID that will generate an event. If not specified, all pipelines in the project will trigger the event.
     * 
     */
    private @Nullable String pipelineId;
    /**
     * @return Which run result should generate an event. Only valid if published_event is `RunStateChanged`. If not specified, all results will trigger the event.
     * 
     */
    private @Nullable String runResultFilter;
    /**
     * @return Which run state should generate an event. Only valid if published_event is `RunStateChanged`. If not specified, all states will trigger the event.
     * 
     */
    private @Nullable String runStateFilter;

    private ServicehookStorageQueuePipelinesRunStateChangedEvent() {}
    /**
     * @return The pipeline ID that will generate an event. If not specified, all pipelines in the project will trigger the event.
     * 
     */
    public Optional<String> pipelineId() {
        return Optional.ofNullable(this.pipelineId);
    }
    /**
     * @return Which run result should generate an event. Only valid if published_event is `RunStateChanged`. If not specified, all results will trigger the event.
     * 
     */
    public Optional<String> runResultFilter() {
        return Optional.ofNullable(this.runResultFilter);
    }
    /**
     * @return Which run state should generate an event. Only valid if published_event is `RunStateChanged`. If not specified, all states will trigger the event.
     * 
     */
    public Optional<String> runStateFilter() {
        return Optional.ofNullable(this.runStateFilter);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServicehookStorageQueuePipelinesRunStateChangedEvent defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String pipelineId;
        private @Nullable String runResultFilter;
        private @Nullable String runStateFilter;
        public Builder() {}
        public Builder(ServicehookStorageQueuePipelinesRunStateChangedEvent defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.pipelineId = defaults.pipelineId;
    	      this.runResultFilter = defaults.runResultFilter;
    	      this.runStateFilter = defaults.runStateFilter;
        }

        @CustomType.Setter
        public Builder pipelineId(@Nullable String pipelineId) {

            this.pipelineId = pipelineId;
            return this;
        }
        @CustomType.Setter
        public Builder runResultFilter(@Nullable String runResultFilter) {

            this.runResultFilter = runResultFilter;
            return this;
        }
        @CustomType.Setter
        public Builder runStateFilter(@Nullable String runStateFilter) {

            this.runStateFilter = runStateFilter;
            return this;
        }
        public ServicehookStorageQueuePipelinesRunStateChangedEvent build() {
            final var _resultValue = new ServicehookStorageQueuePipelinesRunStateChangedEvent();
            _resultValue.pipelineId = pipelineId;
            _resultValue.runResultFilter = runResultFilter;
            _resultValue.runStateFilter = runStateFilter;
            return _resultValue;
        }
    }
}
