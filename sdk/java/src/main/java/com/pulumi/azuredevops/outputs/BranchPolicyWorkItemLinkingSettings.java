// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuredevops.outputs;

import com.pulumi.azuredevops.outputs.BranchPolicyWorkItemLinkingSettingsScope;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.util.List;
import java.util.Objects;

@CustomType
public final class BranchPolicyWorkItemLinkingSettings {
    /**
     * @return A `scope` block as defined below. Controls which repositories and branches the policy will be enabled for. This block must be defined at least once.
     * 
     */
    private List<BranchPolicyWorkItemLinkingSettingsScope> scopes;

    private BranchPolicyWorkItemLinkingSettings() {}
    /**
     * @return A `scope` block as defined below. Controls which repositories and branches the policy will be enabled for. This block must be defined at least once.
     * 
     */
    public List<BranchPolicyWorkItemLinkingSettingsScope> scopes() {
        return this.scopes;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BranchPolicyWorkItemLinkingSettings defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<BranchPolicyWorkItemLinkingSettingsScope> scopes;
        public Builder() {}
        public Builder(BranchPolicyWorkItemLinkingSettings defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.scopes = defaults.scopes;
        }

        @CustomType.Setter
        public Builder scopes(List<BranchPolicyWorkItemLinkingSettingsScope> scopes) {
            if (scopes == null) {
              throw new MissingRequiredPropertyException("BranchPolicyWorkItemLinkingSettings", "scopes");
            }
            this.scopes = scopes;
            return this;
        }
        public Builder scopes(BranchPolicyWorkItemLinkingSettingsScope... scopes) {
            return scopes(List.of(scopes));
        }
        public BranchPolicyWorkItemLinkingSettings build() {
            final var _resultValue = new BranchPolicyWorkItemLinkingSettings();
            _resultValue.scopes = scopes;
            return _resultValue;
        }
    }
}
