// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuredevops.outputs;

import com.pulumi.core.annotations.CustomType;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class ServicehookStorageQueuePipelinesStageStateChangedEvent {
    /**
     * @return The pipeline ID that will generate an event.
     * 
     */
    private @Nullable String pipelineId;
    /**
     * @return Which stage should generate an event. Only valid if published_event is `StageStateChanged`. If not specified, all stages will trigger the event.
     * 
     */
    private @Nullable String stageName;
    /**
     * @return Which stage result should generate an event. Only valid if published_event is `StageStateChanged`. If not specified, all results will trigger the event.
     * 
     */
    private @Nullable String stageResultFilter;
    /**
     * @return Which stage state should generate an event. Only valid if published_event is `StageStateChanged`. If not specified, all states will trigger the event.
     * 
     */
    private @Nullable String stageStateFilter;

    private ServicehookStorageQueuePipelinesStageStateChangedEvent() {}
    /**
     * @return The pipeline ID that will generate an event.
     * 
     */
    public Optional<String> pipelineId() {
        return Optional.ofNullable(this.pipelineId);
    }
    /**
     * @return Which stage should generate an event. Only valid if published_event is `StageStateChanged`. If not specified, all stages will trigger the event.
     * 
     */
    public Optional<String> stageName() {
        return Optional.ofNullable(this.stageName);
    }
    /**
     * @return Which stage result should generate an event. Only valid if published_event is `StageStateChanged`. If not specified, all results will trigger the event.
     * 
     */
    public Optional<String> stageResultFilter() {
        return Optional.ofNullable(this.stageResultFilter);
    }
    /**
     * @return Which stage state should generate an event. Only valid if published_event is `StageStateChanged`. If not specified, all states will trigger the event.
     * 
     */
    public Optional<String> stageStateFilter() {
        return Optional.ofNullable(this.stageStateFilter);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(ServicehookStorageQueuePipelinesStageStateChangedEvent defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable String pipelineId;
        private @Nullable String stageName;
        private @Nullable String stageResultFilter;
        private @Nullable String stageStateFilter;
        public Builder() {}
        public Builder(ServicehookStorageQueuePipelinesStageStateChangedEvent defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.pipelineId = defaults.pipelineId;
    	      this.stageName = defaults.stageName;
    	      this.stageResultFilter = defaults.stageResultFilter;
    	      this.stageStateFilter = defaults.stageStateFilter;
        }

        @CustomType.Setter
        public Builder pipelineId(@Nullable String pipelineId) {

            this.pipelineId = pipelineId;
            return this;
        }
        @CustomType.Setter
        public Builder stageName(@Nullable String stageName) {

            this.stageName = stageName;
            return this;
        }
        @CustomType.Setter
        public Builder stageResultFilter(@Nullable String stageResultFilter) {

            this.stageResultFilter = stageResultFilter;
            return this;
        }
        @CustomType.Setter
        public Builder stageStateFilter(@Nullable String stageStateFilter) {

            this.stageStateFilter = stageStateFilter;
            return this;
        }
        public ServicehookStorageQueuePipelinesStageStateChangedEvent build() {
            final var _resultValue = new ServicehookStorageQueuePipelinesStageStateChangedEvent();
            _resultValue.pipelineId = pipelineId;
            _resultValue.stageName = stageName;
            _resultValue.stageResultFilter = stageResultFilter;
            _resultValue.stageStateFilter = stageStateFilter;
            return _resultValue;
        }
    }
}
