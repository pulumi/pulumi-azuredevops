// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuredevops.ServiceEndpoint.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class KubernetesAzureSubscriptionArgs extends com.pulumi.resources.ResourceArgs {

    public static final KubernetesAzureSubscriptionArgs Empty = new KubernetesAzureSubscriptionArgs();

    /**
     * Azure environment refers to whether the public cloud offering or domestic (government) clouds are being used. Currently, only the public cloud is supported. The value must be AzureCloud. This is also the default-value.
     * 
     */
    @Import(name="azureEnvironment")
    private @Nullable Output<String> azureEnvironment;

    /**
     * @return Azure environment refers to whether the public cloud offering or domestic (government) clouds are being used. Currently, only the public cloud is supported. The value must be AzureCloud. This is also the default-value.
     * 
     */
    public Optional<Output<String>> azureEnvironment() {
        return Optional.ofNullable(this.azureEnvironment);
    }

    /**
     * Set this option to allow use cluster admin credentials.
     * 
     */
    @Import(name="clusterAdmin")
    private @Nullable Output<Boolean> clusterAdmin;

    /**
     * @return Set this option to allow use cluster admin credentials.
     * 
     */
    public Optional<Output<Boolean>> clusterAdmin() {
        return Optional.ofNullable(this.clusterAdmin);
    }

    /**
     * The name of the Kubernetes cluster.
     * 
     */
    @Import(name="clusterName", required=true)
    private Output<String> clusterName;

    /**
     * @return The name of the Kubernetes cluster.
     * 
     */
    public Output<String> clusterName() {
        return this.clusterName;
    }

    /**
     * The Kubernetes namespace. Default value is &#34;default&#34;.
     * 
     */
    @Import(name="namespace")
    private @Nullable Output<String> namespace;

    /**
     * @return The Kubernetes namespace. Default value is &#34;default&#34;.
     * 
     */
    public Optional<Output<String>> namespace() {
        return Optional.ofNullable(this.namespace);
    }

    /**
     * The resource group name, to which the Kubernetes cluster is deployed.
     * 
     */
    @Import(name="resourcegroupId", required=true)
    private Output<String> resourcegroupId;

    /**
     * @return The resource group name, to which the Kubernetes cluster is deployed.
     * 
     */
    public Output<String> resourcegroupId() {
        return this.resourcegroupId;
    }

    /**
     * The id of the Azure subscription.
     * 
     */
    @Import(name="subscriptionId", required=true)
    private Output<String> subscriptionId;

    /**
     * @return The id of the Azure subscription.
     * 
     */
    public Output<String> subscriptionId() {
        return this.subscriptionId;
    }

    /**
     * The name of the Azure subscription.
     * 
     */
    @Import(name="subscriptionName", required=true)
    private Output<String> subscriptionName;

    /**
     * @return The name of the Azure subscription.
     * 
     */
    public Output<String> subscriptionName() {
        return this.subscriptionName;
    }

    /**
     * The id of the tenant used by the subscription.
     * 
     */
    @Import(name="tenantId", required=true)
    private Output<String> tenantId;

    /**
     * @return The id of the tenant used by the subscription.
     * 
     */
    public Output<String> tenantId() {
        return this.tenantId;
    }

    private KubernetesAzureSubscriptionArgs() {}

    private KubernetesAzureSubscriptionArgs(KubernetesAzureSubscriptionArgs $) {
        this.azureEnvironment = $.azureEnvironment;
        this.clusterAdmin = $.clusterAdmin;
        this.clusterName = $.clusterName;
        this.namespace = $.namespace;
        this.resourcegroupId = $.resourcegroupId;
        this.subscriptionId = $.subscriptionId;
        this.subscriptionName = $.subscriptionName;
        this.tenantId = $.tenantId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(KubernetesAzureSubscriptionArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private KubernetesAzureSubscriptionArgs $;

        public Builder() {
            $ = new KubernetesAzureSubscriptionArgs();
        }

        public Builder(KubernetesAzureSubscriptionArgs defaults) {
            $ = new KubernetesAzureSubscriptionArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param azureEnvironment Azure environment refers to whether the public cloud offering or domestic (government) clouds are being used. Currently, only the public cloud is supported. The value must be AzureCloud. This is also the default-value.
         * 
         * @return builder
         * 
         */
        public Builder azureEnvironment(@Nullable Output<String> azureEnvironment) {
            $.azureEnvironment = azureEnvironment;
            return this;
        }

        /**
         * @param azureEnvironment Azure environment refers to whether the public cloud offering or domestic (government) clouds are being used. Currently, only the public cloud is supported. The value must be AzureCloud. This is also the default-value.
         * 
         * @return builder
         * 
         */
        public Builder azureEnvironment(String azureEnvironment) {
            return azureEnvironment(Output.of(azureEnvironment));
        }

        /**
         * @param clusterAdmin Set this option to allow use cluster admin credentials.
         * 
         * @return builder
         * 
         */
        public Builder clusterAdmin(@Nullable Output<Boolean> clusterAdmin) {
            $.clusterAdmin = clusterAdmin;
            return this;
        }

        /**
         * @param clusterAdmin Set this option to allow use cluster admin credentials.
         * 
         * @return builder
         * 
         */
        public Builder clusterAdmin(Boolean clusterAdmin) {
            return clusterAdmin(Output.of(clusterAdmin));
        }

        /**
         * @param clusterName The name of the Kubernetes cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterName(Output<String> clusterName) {
            $.clusterName = clusterName;
            return this;
        }

        /**
         * @param clusterName The name of the Kubernetes cluster.
         * 
         * @return builder
         * 
         */
        public Builder clusterName(String clusterName) {
            return clusterName(Output.of(clusterName));
        }

        /**
         * @param namespace The Kubernetes namespace. Default value is &#34;default&#34;.
         * 
         * @return builder
         * 
         */
        public Builder namespace(@Nullable Output<String> namespace) {
            $.namespace = namespace;
            return this;
        }

        /**
         * @param namespace The Kubernetes namespace. Default value is &#34;default&#34;.
         * 
         * @return builder
         * 
         */
        public Builder namespace(String namespace) {
            return namespace(Output.of(namespace));
        }

        /**
         * @param resourcegroupId The resource group name, to which the Kubernetes cluster is deployed.
         * 
         * @return builder
         * 
         */
        public Builder resourcegroupId(Output<String> resourcegroupId) {
            $.resourcegroupId = resourcegroupId;
            return this;
        }

        /**
         * @param resourcegroupId The resource group name, to which the Kubernetes cluster is deployed.
         * 
         * @return builder
         * 
         */
        public Builder resourcegroupId(String resourcegroupId) {
            return resourcegroupId(Output.of(resourcegroupId));
        }

        /**
         * @param subscriptionId The id of the Azure subscription.
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(Output<String> subscriptionId) {
            $.subscriptionId = subscriptionId;
            return this;
        }

        /**
         * @param subscriptionId The id of the Azure subscription.
         * 
         * @return builder
         * 
         */
        public Builder subscriptionId(String subscriptionId) {
            return subscriptionId(Output.of(subscriptionId));
        }

        /**
         * @param subscriptionName The name of the Azure subscription.
         * 
         * @return builder
         * 
         */
        public Builder subscriptionName(Output<String> subscriptionName) {
            $.subscriptionName = subscriptionName;
            return this;
        }

        /**
         * @param subscriptionName The name of the Azure subscription.
         * 
         * @return builder
         * 
         */
        public Builder subscriptionName(String subscriptionName) {
            return subscriptionName(Output.of(subscriptionName));
        }

        /**
         * @param tenantId The id of the tenant used by the subscription.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(Output<String> tenantId) {
            $.tenantId = tenantId;
            return this;
        }

        /**
         * @param tenantId The id of the tenant used by the subscription.
         * 
         * @return builder
         * 
         */
        public Builder tenantId(String tenantId) {
            return tenantId(Output.of(tenantId));
        }

        public KubernetesAzureSubscriptionArgs build() {
            if ($.clusterName == null) {
                throw new MissingRequiredPropertyException("KubernetesAzureSubscriptionArgs", "clusterName");
            }
            if ($.resourcegroupId == null) {
                throw new MissingRequiredPropertyException("KubernetesAzureSubscriptionArgs", "resourcegroupId");
            }
            if ($.subscriptionId == null) {
                throw new MissingRequiredPropertyException("KubernetesAzureSubscriptionArgs", "subscriptionId");
            }
            if ($.subscriptionName == null) {
                throw new MissingRequiredPropertyException("KubernetesAzureSubscriptionArgs", "subscriptionName");
            }
            if ($.tenantId == null) {
                throw new MissingRequiredPropertyException("KubernetesAzureSubscriptionArgs", "tenantId");
            }
            return $;
        }
    }

}
