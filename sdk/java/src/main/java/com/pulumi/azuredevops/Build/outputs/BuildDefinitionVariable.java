// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuredevops.Build.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BuildDefinitionVariable {
    /**
     * @return True if the variable can be overridden. Defaults to `true`.
     * 
     */
    private @Nullable Boolean allowOverride;
    /**
     * @return True if the variable is a secret. Defaults to `false`.
     * 
     */
    private @Nullable Boolean isSecret;
    /**
     * @return The name of the variable.
     * 
     */
    private String name;
    /**
     * @return The secret value of the variable. Used when `is_secret` set to `true`.
     * 
     */
    private @Nullable String secretValue;
    /**
     * @return The value of the variable.
     * 
     */
    private @Nullable String value;

    private BuildDefinitionVariable() {}
    /**
     * @return True if the variable can be overridden. Defaults to `true`.
     * 
     */
    public Optional<Boolean> allowOverride() {
        return Optional.ofNullable(this.allowOverride);
    }
    /**
     * @return True if the variable is a secret. Defaults to `false`.
     * 
     */
    public Optional<Boolean> isSecret() {
        return Optional.ofNullable(this.isSecret);
    }
    /**
     * @return The name of the variable.
     * 
     */
    public String name() {
        return this.name;
    }
    /**
     * @return The secret value of the variable. Used when `is_secret` set to `true`.
     * 
     */
    public Optional<String> secretValue() {
        return Optional.ofNullable(this.secretValue);
    }
    /**
     * @return The value of the variable.
     * 
     */
    public Optional<String> value() {
        return Optional.ofNullable(this.value);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BuildDefinitionVariable defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable Boolean allowOverride;
        private @Nullable Boolean isSecret;
        private String name;
        private @Nullable String secretValue;
        private @Nullable String value;
        public Builder() {}
        public Builder(BuildDefinitionVariable defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.allowOverride = defaults.allowOverride;
    	      this.isSecret = defaults.isSecret;
    	      this.name = defaults.name;
    	      this.secretValue = defaults.secretValue;
    	      this.value = defaults.value;
        }

        @CustomType.Setter
        public Builder allowOverride(@Nullable Boolean allowOverride) {

            this.allowOverride = allowOverride;
            return this;
        }
        @CustomType.Setter
        public Builder isSecret(@Nullable Boolean isSecret) {

            this.isSecret = isSecret;
            return this;
        }
        @CustomType.Setter
        public Builder name(String name) {
            if (name == null) {
              throw new MissingRequiredPropertyException("BuildDefinitionVariable", "name");
            }
            this.name = name;
            return this;
        }
        @CustomType.Setter
        public Builder secretValue(@Nullable String secretValue) {

            this.secretValue = secretValue;
            return this;
        }
        @CustomType.Setter
        public Builder value(@Nullable String value) {

            this.value = value;
            return this;
        }
        public BuildDefinitionVariable build() {
            final var _resultValue = new BuildDefinitionVariable();
            _resultValue.allowOverride = allowOverride;
            _resultValue.isSecret = isSecret;
            _resultValue.name = name;
            _resultValue.secretValue = secretValue;
            _resultValue.value = value;
            return _resultValue;
        }
    }
}
