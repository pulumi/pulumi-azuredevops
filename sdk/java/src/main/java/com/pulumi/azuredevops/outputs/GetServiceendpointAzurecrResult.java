// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuredevops.outputs;

import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.Map;
import java.util.Objects;

@CustomType
public final class GetServiceendpointAzurecrResult {
    /**
     * @return The Object ID of the Service Principal.
     * 
     */
    private String appObjectId;
    /**
     * @return The Authorization scheme.
     * 
     */
    private Map<String,String> authorization;
    /**
     * @return The ID of Service Principal Role Assignment.
     * 
     */
    private String azSpnRoleAssignmentId;
    /**
     * @return The Service Principal Role Permissions.
     * 
     */
    private String azSpnRolePermissions;
    /**
     * @return The Azure Container Registry name.
     * 
     */
    private String azurecrName;
    /**
     * @return The Tenant ID of the service principal.
     * 
     */
    private String azurecrSpnTenantid;
    /**
     * @return The Subscription ID of the Azure targets.
     * 
     */
    private String azurecrSubscriptionId;
    /**
     * @return The Subscription Name of the Azure targets.
     * 
     */
    private String azurecrSubscriptionName;
    /**
     * @return The Service Endpoint description.
     * 
     */
    private String description;
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    private String id;
    private String projectId;
    /**
     * @return The Resource Group to which the Container Registry belongs.
     * 
     */
    private String resourceGroup;
    private String serviceEndpointId;
    private String serviceEndpointName;
    /**
     * @return The Application(Client) ID of the Service Principal.
     * 
     */
    private String servicePrincipalId;
    /**
     * @return The ID of the Service Principal.
     * 
     */
    private String spnObjectId;

    private GetServiceendpointAzurecrResult() {}
    /**
     * @return The Object ID of the Service Principal.
     * 
     */
    public String appObjectId() {
        return this.appObjectId;
    }
    /**
     * @return The Authorization scheme.
     * 
     */
    public Map<String,String> authorization() {
        return this.authorization;
    }
    /**
     * @return The ID of Service Principal Role Assignment.
     * 
     */
    public String azSpnRoleAssignmentId() {
        return this.azSpnRoleAssignmentId;
    }
    /**
     * @return The Service Principal Role Permissions.
     * 
     */
    public String azSpnRolePermissions() {
        return this.azSpnRolePermissions;
    }
    /**
     * @return The Azure Container Registry name.
     * 
     */
    public String azurecrName() {
        return this.azurecrName;
    }
    /**
     * @return The Tenant ID of the service principal.
     * 
     */
    public String azurecrSpnTenantid() {
        return this.azurecrSpnTenantid;
    }
    /**
     * @return The Subscription ID of the Azure targets.
     * 
     */
    public String azurecrSubscriptionId() {
        return this.azurecrSubscriptionId;
    }
    /**
     * @return The Subscription Name of the Azure targets.
     * 
     */
    public String azurecrSubscriptionName() {
        return this.azurecrSubscriptionName;
    }
    /**
     * @return The Service Endpoint description.
     * 
     */
    public String description() {
        return this.description;
    }
    /**
     * @return The provider-assigned unique ID for this managed resource.
     * 
     */
    public String id() {
        return this.id;
    }
    public String projectId() {
        return this.projectId;
    }
    /**
     * @return The Resource Group to which the Container Registry belongs.
     * 
     */
    public String resourceGroup() {
        return this.resourceGroup;
    }
    public String serviceEndpointId() {
        return this.serviceEndpointId;
    }
    public String serviceEndpointName() {
        return this.serviceEndpointName;
    }
    /**
     * @return The Application(Client) ID of the Service Principal.
     * 
     */
    public String servicePrincipalId() {
        return this.servicePrincipalId;
    }
    /**
     * @return The ID of the Service Principal.
     * 
     */
    public String spnObjectId() {
        return this.spnObjectId;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetServiceendpointAzurecrResult defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private String appObjectId;
        private Map<String,String> authorization;
        private String azSpnRoleAssignmentId;
        private String azSpnRolePermissions;
        private String azurecrName;
        private String azurecrSpnTenantid;
        private String azurecrSubscriptionId;
        private String azurecrSubscriptionName;
        private String description;
        private String id;
        private String projectId;
        private String resourceGroup;
        private String serviceEndpointId;
        private String serviceEndpointName;
        private String servicePrincipalId;
        private String spnObjectId;
        public Builder() {}
        public Builder(GetServiceendpointAzurecrResult defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.appObjectId = defaults.appObjectId;
    	      this.authorization = defaults.authorization;
    	      this.azSpnRoleAssignmentId = defaults.azSpnRoleAssignmentId;
    	      this.azSpnRolePermissions = defaults.azSpnRolePermissions;
    	      this.azurecrName = defaults.azurecrName;
    	      this.azurecrSpnTenantid = defaults.azurecrSpnTenantid;
    	      this.azurecrSubscriptionId = defaults.azurecrSubscriptionId;
    	      this.azurecrSubscriptionName = defaults.azurecrSubscriptionName;
    	      this.description = defaults.description;
    	      this.id = defaults.id;
    	      this.projectId = defaults.projectId;
    	      this.resourceGroup = defaults.resourceGroup;
    	      this.serviceEndpointId = defaults.serviceEndpointId;
    	      this.serviceEndpointName = defaults.serviceEndpointName;
    	      this.servicePrincipalId = defaults.servicePrincipalId;
    	      this.spnObjectId = defaults.spnObjectId;
        }

        @CustomType.Setter
        public Builder appObjectId(String appObjectId) {
            if (appObjectId == null) {
              throw new MissingRequiredPropertyException("GetServiceendpointAzurecrResult", "appObjectId");
            }
            this.appObjectId = appObjectId;
            return this;
        }
        @CustomType.Setter
        public Builder authorization(Map<String,String> authorization) {
            if (authorization == null) {
              throw new MissingRequiredPropertyException("GetServiceendpointAzurecrResult", "authorization");
            }
            this.authorization = authorization;
            return this;
        }
        @CustomType.Setter
        public Builder azSpnRoleAssignmentId(String azSpnRoleAssignmentId) {
            if (azSpnRoleAssignmentId == null) {
              throw new MissingRequiredPropertyException("GetServiceendpointAzurecrResult", "azSpnRoleAssignmentId");
            }
            this.azSpnRoleAssignmentId = azSpnRoleAssignmentId;
            return this;
        }
        @CustomType.Setter
        public Builder azSpnRolePermissions(String azSpnRolePermissions) {
            if (azSpnRolePermissions == null) {
              throw new MissingRequiredPropertyException("GetServiceendpointAzurecrResult", "azSpnRolePermissions");
            }
            this.azSpnRolePermissions = azSpnRolePermissions;
            return this;
        }
        @CustomType.Setter
        public Builder azurecrName(String azurecrName) {
            if (azurecrName == null) {
              throw new MissingRequiredPropertyException("GetServiceendpointAzurecrResult", "azurecrName");
            }
            this.azurecrName = azurecrName;
            return this;
        }
        @CustomType.Setter
        public Builder azurecrSpnTenantid(String azurecrSpnTenantid) {
            if (azurecrSpnTenantid == null) {
              throw new MissingRequiredPropertyException("GetServiceendpointAzurecrResult", "azurecrSpnTenantid");
            }
            this.azurecrSpnTenantid = azurecrSpnTenantid;
            return this;
        }
        @CustomType.Setter
        public Builder azurecrSubscriptionId(String azurecrSubscriptionId) {
            if (azurecrSubscriptionId == null) {
              throw new MissingRequiredPropertyException("GetServiceendpointAzurecrResult", "azurecrSubscriptionId");
            }
            this.azurecrSubscriptionId = azurecrSubscriptionId;
            return this;
        }
        @CustomType.Setter
        public Builder azurecrSubscriptionName(String azurecrSubscriptionName) {
            if (azurecrSubscriptionName == null) {
              throw new MissingRequiredPropertyException("GetServiceendpointAzurecrResult", "azurecrSubscriptionName");
            }
            this.azurecrSubscriptionName = azurecrSubscriptionName;
            return this;
        }
        @CustomType.Setter
        public Builder description(String description) {
            if (description == null) {
              throw new MissingRequiredPropertyException("GetServiceendpointAzurecrResult", "description");
            }
            this.description = description;
            return this;
        }
        @CustomType.Setter
        public Builder id(String id) {
            if (id == null) {
              throw new MissingRequiredPropertyException("GetServiceendpointAzurecrResult", "id");
            }
            this.id = id;
            return this;
        }
        @CustomType.Setter
        public Builder projectId(String projectId) {
            if (projectId == null) {
              throw new MissingRequiredPropertyException("GetServiceendpointAzurecrResult", "projectId");
            }
            this.projectId = projectId;
            return this;
        }
        @CustomType.Setter
        public Builder resourceGroup(String resourceGroup) {
            if (resourceGroup == null) {
              throw new MissingRequiredPropertyException("GetServiceendpointAzurecrResult", "resourceGroup");
            }
            this.resourceGroup = resourceGroup;
            return this;
        }
        @CustomType.Setter
        public Builder serviceEndpointId(String serviceEndpointId) {
            if (serviceEndpointId == null) {
              throw new MissingRequiredPropertyException("GetServiceendpointAzurecrResult", "serviceEndpointId");
            }
            this.serviceEndpointId = serviceEndpointId;
            return this;
        }
        @CustomType.Setter
        public Builder serviceEndpointName(String serviceEndpointName) {
            if (serviceEndpointName == null) {
              throw new MissingRequiredPropertyException("GetServiceendpointAzurecrResult", "serviceEndpointName");
            }
            this.serviceEndpointName = serviceEndpointName;
            return this;
        }
        @CustomType.Setter
        public Builder servicePrincipalId(String servicePrincipalId) {
            if (servicePrincipalId == null) {
              throw new MissingRequiredPropertyException("GetServiceendpointAzurecrResult", "servicePrincipalId");
            }
            this.servicePrincipalId = servicePrincipalId;
            return this;
        }
        @CustomType.Setter
        public Builder spnObjectId(String spnObjectId) {
            if (spnObjectId == null) {
              throw new MissingRequiredPropertyException("GetServiceendpointAzurecrResult", "spnObjectId");
            }
            this.spnObjectId = spnObjectId;
            return this;
        }
        public GetServiceendpointAzurecrResult build() {
            final var _resultValue = new GetServiceendpointAzurecrResult();
            _resultValue.appObjectId = appObjectId;
            _resultValue.authorization = authorization;
            _resultValue.azSpnRoleAssignmentId = azSpnRoleAssignmentId;
            _resultValue.azSpnRolePermissions = azSpnRolePermissions;
            _resultValue.azurecrName = azurecrName;
            _resultValue.azurecrSpnTenantid = azurecrSpnTenantid;
            _resultValue.azurecrSubscriptionId = azurecrSubscriptionId;
            _resultValue.azurecrSubscriptionName = azurecrSubscriptionName;
            _resultValue.description = description;
            _resultValue.id = id;
            _resultValue.projectId = projectId;
            _resultValue.resourceGroup = resourceGroup;
            _resultValue.serviceEndpointId = serviceEndpointId;
            _resultValue.serviceEndpointName = serviceEndpointName;
            _resultValue.servicePrincipalId = servicePrincipalId;
            _resultValue.spnObjectId = spnObjectId;
            return _resultValue;
        }
    }
}
