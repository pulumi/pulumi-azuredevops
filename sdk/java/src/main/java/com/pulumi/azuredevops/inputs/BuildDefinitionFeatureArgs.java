// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuredevops.inputs;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.Boolean;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class BuildDefinitionFeatureArgs extends com.pulumi.resources.ResourceArgs {

    public static final BuildDefinitionFeatureArgs Empty = new BuildDefinitionFeatureArgs();

    /**
     * Trigger the pipeline to run after the creation. Defaults to `true`.
     * 
     * &gt; **Note** The first run(`skip_first_run = false`) will only be triggered on create. If the first run fails, the build definition will still be marked as successfully created. A warning message indicating the inability to run pipeline will be displayed.
     * 
     */
    @Import(name="skipFirstRun")
    private @Nullable Output<Boolean> skipFirstRun;

    /**
     * @return Trigger the pipeline to run after the creation. Defaults to `true`.
     * 
     * &gt; **Note** The first run(`skip_first_run = false`) will only be triggered on create. If the first run fails, the build definition will still be marked as successfully created. A warning message indicating the inability to run pipeline will be displayed.
     * 
     */
    public Optional<Output<Boolean>> skipFirstRun() {
        return Optional.ofNullable(this.skipFirstRun);
    }

    private BuildDefinitionFeatureArgs() {}

    private BuildDefinitionFeatureArgs(BuildDefinitionFeatureArgs $) {
        this.skipFirstRun = $.skipFirstRun;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(BuildDefinitionFeatureArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private BuildDefinitionFeatureArgs $;

        public Builder() {
            $ = new BuildDefinitionFeatureArgs();
        }

        public Builder(BuildDefinitionFeatureArgs defaults) {
            $ = new BuildDefinitionFeatureArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param skipFirstRun Trigger the pipeline to run after the creation. Defaults to `true`.
         * 
         * &gt; **Note** The first run(`skip_first_run = false`) will only be triggered on create. If the first run fails, the build definition will still be marked as successfully created. A warning message indicating the inability to run pipeline will be displayed.
         * 
         * @return builder
         * 
         */
        public Builder skipFirstRun(@Nullable Output<Boolean> skipFirstRun) {
            $.skipFirstRun = skipFirstRun;
            return this;
        }

        /**
         * @param skipFirstRun Trigger the pipeline to run after the creation. Defaults to `true`.
         * 
         * &gt; **Note** The first run(`skip_first_run = false`) will only be triggered on create. If the first run fails, the build definition will still be marked as successfully created. A warning message indicating the inability to run pipeline will be displayed.
         * 
         * @return builder
         * 
         */
        public Builder skipFirstRun(Boolean skipFirstRun) {
            return skipFirstRun(Output.of(skipFirstRun));
        }

        public BuildDefinitionFeatureArgs build() {
            return $;
        }
    }

}
