// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuredevops.outputs;

import com.pulumi.azuredevops.outputs.BuildDefinitionScheduleBranchFilter;
import com.pulumi.core.annotations.CustomType;
import java.lang.Boolean;
import java.lang.Integer;
import java.lang.String;
import java.util.List;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;

@CustomType
public final class BuildDefinitionSchedule {
    /**
     * @return block supports the following:
     * 
     */
    private @Nullable List<BuildDefinitionScheduleBranchFilter> branchFilters;
    private List<String> daysToBuilds;
    /**
     * @return The ID of the schedule job
     * 
     */
    private @Nullable String scheduleJobId;
    private @Nullable Boolean scheduleOnlyWithChanges;
    private @Nullable Integer startHours;
    private @Nullable Integer startMinutes;
    private @Nullable String timeZone;

    private BuildDefinitionSchedule() {}
    /**
     * @return block supports the following:
     * 
     */
    public List<BuildDefinitionScheduleBranchFilter> branchFilters() {
        return this.branchFilters == null ? List.of() : this.branchFilters;
    }
    public List<String> daysToBuilds() {
        return this.daysToBuilds;
    }
    /**
     * @return The ID of the schedule job
     * 
     */
    public Optional<String> scheduleJobId() {
        return Optional.ofNullable(this.scheduleJobId);
    }
    public Optional<Boolean> scheduleOnlyWithChanges() {
        return Optional.ofNullable(this.scheduleOnlyWithChanges);
    }
    public Optional<Integer> startHours() {
        return Optional.ofNullable(this.startHours);
    }
    public Optional<Integer> startMinutes() {
        return Optional.ofNullable(this.startMinutes);
    }
    public Optional<String> timeZone() {
        return Optional.ofNullable(this.timeZone);
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(BuildDefinitionSchedule defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private @Nullable List<BuildDefinitionScheduleBranchFilter> branchFilters;
        private List<String> daysToBuilds;
        private @Nullable String scheduleJobId;
        private @Nullable Boolean scheduleOnlyWithChanges;
        private @Nullable Integer startHours;
        private @Nullable Integer startMinutes;
        private @Nullable String timeZone;
        public Builder() {}
        public Builder(BuildDefinitionSchedule defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.branchFilters = defaults.branchFilters;
    	      this.daysToBuilds = defaults.daysToBuilds;
    	      this.scheduleJobId = defaults.scheduleJobId;
    	      this.scheduleOnlyWithChanges = defaults.scheduleOnlyWithChanges;
    	      this.startHours = defaults.startHours;
    	      this.startMinutes = defaults.startMinutes;
    	      this.timeZone = defaults.timeZone;
        }

        @CustomType.Setter
        public Builder branchFilters(@Nullable List<BuildDefinitionScheduleBranchFilter> branchFilters) {
            this.branchFilters = branchFilters;
            return this;
        }
        public Builder branchFilters(BuildDefinitionScheduleBranchFilter... branchFilters) {
            return branchFilters(List.of(branchFilters));
        }
        @CustomType.Setter
        public Builder daysToBuilds(List<String> daysToBuilds) {
            this.daysToBuilds = Objects.requireNonNull(daysToBuilds);
            return this;
        }
        public Builder daysToBuilds(String... daysToBuilds) {
            return daysToBuilds(List.of(daysToBuilds));
        }
        @CustomType.Setter
        public Builder scheduleJobId(@Nullable String scheduleJobId) {
            this.scheduleJobId = scheduleJobId;
            return this;
        }
        @CustomType.Setter
        public Builder scheduleOnlyWithChanges(@Nullable Boolean scheduleOnlyWithChanges) {
            this.scheduleOnlyWithChanges = scheduleOnlyWithChanges;
            return this;
        }
        @CustomType.Setter
        public Builder startHours(@Nullable Integer startHours) {
            this.startHours = startHours;
            return this;
        }
        @CustomType.Setter
        public Builder startMinutes(@Nullable Integer startMinutes) {
            this.startMinutes = startMinutes;
            return this;
        }
        @CustomType.Setter
        public Builder timeZone(@Nullable String timeZone) {
            this.timeZone = timeZone;
            return this;
        }
        public BuildDefinitionSchedule build() {
            final var o = new BuildDefinitionSchedule();
            o.branchFilters = branchFilters;
            o.daysToBuilds = daysToBuilds;
            o.scheduleJobId = scheduleJobId;
            o.scheduleOnlyWithChanges = scheduleOnlyWithChanges;
            o.startHours = startHours;
            o.startMinutes = startMinutes;
            o.timeZone = timeZone;
            return o;
        }
    }
}
