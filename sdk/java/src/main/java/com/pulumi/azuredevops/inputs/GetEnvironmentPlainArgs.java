// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuredevops.inputs;

import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Integer;
import java.lang.String;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class GetEnvironmentPlainArgs extends com.pulumi.resources.InvokeArgs {

    public static final GetEnvironmentPlainArgs Empty = new GetEnvironmentPlainArgs();

    /**
     * The ID of the Environment.
     * 
     */
    @Import(name="environmentId")
    private @Nullable Integer environmentId;

    /**
     * @return The ID of the Environment.
     * 
     */
    public Optional<Integer> environmentId() {
        return Optional.ofNullable(this.environmentId);
    }

    /**
     * Name of the Environment.
     * 
     * &gt; **NOTE:** One of either `environment_id` or `name` must be specified.
     * 
     */
    @Import(name="name")
    private @Nullable String name;

    /**
     * @return Name of the Environment.
     * 
     * &gt; **NOTE:** One of either `environment_id` or `name` must be specified.
     * 
     */
    public Optional<String> name() {
        return Optional.ofNullable(this.name);
    }

    /**
     * The ID of the project.
     * 
     */
    @Import(name="projectId", required=true)
    private String projectId;

    /**
     * @return The ID of the project.
     * 
     */
    public String projectId() {
        return this.projectId;
    }

    private GetEnvironmentPlainArgs() {}

    private GetEnvironmentPlainArgs(GetEnvironmentPlainArgs $) {
        this.environmentId = $.environmentId;
        this.name = $.name;
        this.projectId = $.projectId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(GetEnvironmentPlainArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private GetEnvironmentPlainArgs $;

        public Builder() {
            $ = new GetEnvironmentPlainArgs();
        }

        public Builder(GetEnvironmentPlainArgs defaults) {
            $ = new GetEnvironmentPlainArgs(Objects.requireNonNull(defaults));
        }

        /**
         * @param environmentId The ID of the Environment.
         * 
         * @return builder
         * 
         */
        public Builder environmentId(@Nullable Integer environmentId) {
            $.environmentId = environmentId;
            return this;
        }

        /**
         * @param name Name of the Environment.
         * 
         * &gt; **NOTE:** One of either `environment_id` or `name` must be specified.
         * 
         * @return builder
         * 
         */
        public Builder name(@Nullable String name) {
            $.name = name;
            return this;
        }

        /**
         * @param projectId The ID of the project.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            $.projectId = projectId;
            return this;
        }

        public GetEnvironmentPlainArgs build() {
            if ($.projectId == null) {
                throw new MissingRequiredPropertyException("GetEnvironmentPlainArgs", "projectId");
            }
            return $;
        }
    }

}
