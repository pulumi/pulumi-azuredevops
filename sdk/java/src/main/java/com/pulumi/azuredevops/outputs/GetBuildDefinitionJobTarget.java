// *** WARNING: this file was generated by pulumi-language-java. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuredevops.outputs;

import com.pulumi.azuredevops.outputs.GetBuildDefinitionJobTargetExecutionOption;
import com.pulumi.core.annotations.CustomType;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.String;
import java.util.List;
import java.util.Objects;

@CustomType
public final class GetBuildDefinitionJobTarget {
    /**
     * @return A list of demands that represents the agent capabilities required by this build. Example: `git`
     * 
     */
    private List<String> demands;
    /**
     * @return A `execution_options` blocks as documented below.
     * 
     */
    private List<GetBuildDefinitionJobTargetExecutionOption> executionOptions;
    /**
     * @return The execution type of the Job.
     * 
     */
    private String type;

    private GetBuildDefinitionJobTarget() {}
    /**
     * @return A list of demands that represents the agent capabilities required by this build. Example: `git`
     * 
     */
    public List<String> demands() {
        return this.demands;
    }
    /**
     * @return A `execution_options` blocks as documented below.
     * 
     */
    public List<GetBuildDefinitionJobTargetExecutionOption> executionOptions() {
        return this.executionOptions;
    }
    /**
     * @return The execution type of the Job.
     * 
     */
    public String type() {
        return this.type;
    }

    public static Builder builder() {
        return new Builder();
    }

    public static Builder builder(GetBuildDefinitionJobTarget defaults) {
        return new Builder(defaults);
    }
    @CustomType.Builder
    public static final class Builder {
        private List<String> demands;
        private List<GetBuildDefinitionJobTargetExecutionOption> executionOptions;
        private String type;
        public Builder() {}
        public Builder(GetBuildDefinitionJobTarget defaults) {
    	      Objects.requireNonNull(defaults);
    	      this.demands = defaults.demands;
    	      this.executionOptions = defaults.executionOptions;
    	      this.type = defaults.type;
        }

        @CustomType.Setter
        public Builder demands(List<String> demands) {
            if (demands == null) {
              throw new MissingRequiredPropertyException("GetBuildDefinitionJobTarget", "demands");
            }
            this.demands = demands;
            return this;
        }
        public Builder demands(String... demands) {
            return demands(List.of(demands));
        }
        @CustomType.Setter
        public Builder executionOptions(List<GetBuildDefinitionJobTargetExecutionOption> executionOptions) {
            if (executionOptions == null) {
              throw new MissingRequiredPropertyException("GetBuildDefinitionJobTarget", "executionOptions");
            }
            this.executionOptions = executionOptions;
            return this;
        }
        public Builder executionOptions(GetBuildDefinitionJobTargetExecutionOption... executionOptions) {
            return executionOptions(List.of(executionOptions));
        }
        @CustomType.Setter
        public Builder type(String type) {
            if (type == null) {
              throw new MissingRequiredPropertyException("GetBuildDefinitionJobTarget", "type");
            }
            this.type = type;
            return this;
        }
        public GetBuildDefinitionJobTarget build() {
            final var _resultValue = new GetBuildDefinitionJobTarget();
            _resultValue.demands = demands;
            _resultValue.executionOptions = executionOptions;
            _resultValue.type = type;
            return _resultValue;
        }
    }
}
