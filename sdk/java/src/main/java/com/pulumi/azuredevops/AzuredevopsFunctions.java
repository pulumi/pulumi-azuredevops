// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuredevops;

import com.pulumi.azuredevops.Utilities;
import com.pulumi.azuredevops.inputs.GetAgentQueueArgs;
import com.pulumi.azuredevops.inputs.GetAgentQueuePlainArgs;
import com.pulumi.azuredevops.inputs.GetAreaArgs;
import com.pulumi.azuredevops.inputs.GetAreaPlainArgs;
import com.pulumi.azuredevops.inputs.GetBuildDefinitionArgs;
import com.pulumi.azuredevops.inputs.GetBuildDefinitionPlainArgs;
import com.pulumi.azuredevops.inputs.GetEnvironmentArgs;
import com.pulumi.azuredevops.inputs.GetEnvironmentPlainArgs;
import com.pulumi.azuredevops.inputs.GetGitRepositoryArgs;
import com.pulumi.azuredevops.inputs.GetGitRepositoryPlainArgs;
import com.pulumi.azuredevops.inputs.GetGroupArgs;
import com.pulumi.azuredevops.inputs.GetGroupPlainArgs;
import com.pulumi.azuredevops.inputs.GetGroupsArgs;
import com.pulumi.azuredevops.inputs.GetGroupsPlainArgs;
import com.pulumi.azuredevops.inputs.GetIterationArgs;
import com.pulumi.azuredevops.inputs.GetIterationPlainArgs;
import com.pulumi.azuredevops.inputs.GetPoolArgs;
import com.pulumi.azuredevops.inputs.GetPoolPlainArgs;
import com.pulumi.azuredevops.inputs.GetProjectArgs;
import com.pulumi.azuredevops.inputs.GetProjectPlainArgs;
import com.pulumi.azuredevops.inputs.GetProjectsArgs;
import com.pulumi.azuredevops.inputs.GetProjectsPlainArgs;
import com.pulumi.azuredevops.inputs.GetRepositoriesArgs;
import com.pulumi.azuredevops.inputs.GetRepositoriesPlainArgs;
import com.pulumi.azuredevops.inputs.GetServiceEndpointAzureRMArgs;
import com.pulumi.azuredevops.inputs.GetServiceEndpointAzureRMPlainArgs;
import com.pulumi.azuredevops.inputs.GetServiceEndpointGithubArgs;
import com.pulumi.azuredevops.inputs.GetServiceEndpointGithubPlainArgs;
import com.pulumi.azuredevops.inputs.GetServiceendpointAzurecrArgs;
import com.pulumi.azuredevops.inputs.GetServiceendpointAzurecrPlainArgs;
import com.pulumi.azuredevops.inputs.GetServiceendpointNpmArgs;
import com.pulumi.azuredevops.inputs.GetServiceendpointNpmPlainArgs;
import com.pulumi.azuredevops.inputs.GetServiceendpointSonarcloudArgs;
import com.pulumi.azuredevops.inputs.GetServiceendpointSonarcloudPlainArgs;
import com.pulumi.azuredevops.inputs.GetTeamArgs;
import com.pulumi.azuredevops.inputs.GetTeamPlainArgs;
import com.pulumi.azuredevops.inputs.GetTeamsArgs;
import com.pulumi.azuredevops.inputs.GetTeamsPlainArgs;
import com.pulumi.azuredevops.inputs.GetUsersArgs;
import com.pulumi.azuredevops.inputs.GetUsersPlainArgs;
import com.pulumi.azuredevops.inputs.GetVariableGroupArgs;
import com.pulumi.azuredevops.inputs.GetVariableGroupPlainArgs;
import com.pulumi.azuredevops.outputs.GetAgentQueueResult;
import com.pulumi.azuredevops.outputs.GetAreaResult;
import com.pulumi.azuredevops.outputs.GetBuildDefinitionResult;
import com.pulumi.azuredevops.outputs.GetClientConfigResult;
import com.pulumi.azuredevops.outputs.GetEnvironmentResult;
import com.pulumi.azuredevops.outputs.GetGitRepositoryResult;
import com.pulumi.azuredevops.outputs.GetGroupResult;
import com.pulumi.azuredevops.outputs.GetGroupsResult;
import com.pulumi.azuredevops.outputs.GetIterationResult;
import com.pulumi.azuredevops.outputs.GetPoolResult;
import com.pulumi.azuredevops.outputs.GetPoolsResult;
import com.pulumi.azuredevops.outputs.GetProjectResult;
import com.pulumi.azuredevops.outputs.GetProjectsResult;
import com.pulumi.azuredevops.outputs.GetRepositoriesResult;
import com.pulumi.azuredevops.outputs.GetServiceEndpointAzureRMResult;
import com.pulumi.azuredevops.outputs.GetServiceEndpointGithubResult;
import com.pulumi.azuredevops.outputs.GetServiceendpointAzurecrResult;
import com.pulumi.azuredevops.outputs.GetServiceendpointNpmResult;
import com.pulumi.azuredevops.outputs.GetServiceendpointSonarcloudResult;
import com.pulumi.azuredevops.outputs.GetTeamResult;
import com.pulumi.azuredevops.outputs.GetTeamsResult;
import com.pulumi.azuredevops.outputs.GetUsersResult;
import com.pulumi.azuredevops.outputs.GetVariableGroupResult;
import com.pulumi.core.Output;
import com.pulumi.core.TypeShape;
import com.pulumi.deployment.Deployment;
import com.pulumi.deployment.InvokeOptions;
import com.pulumi.resources.InvokeArgs;
import java.util.concurrent.CompletableFuture;

public final class AzuredevopsFunctions {
    /**
     * Use this data source to access information about an existing Agent Queue within Azure DevOps.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.Project;
     * import com.pulumi.azuredevops.ProjectArgs;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetAgentQueueArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var exampleProject = new Project("exampleProject", ProjectArgs.builder()
     *             .name("Example Project")
     *             .workItemTemplate("Agile")
     *             .versionControl("Git")
     *             .visibility("private")
     *             .description("Managed by Terraform")
     *             .build());
     * 
     *         final var example = AzuredevopsFunctions.getAgentQueue(GetAgentQueueArgs.builder()
     *             .projectId(exampleProject.id())
     *             .name("Example Agent Queue")
     *             .build());
     * 
     *         ctx.export("name", example.applyValue(getAgentQueueResult -> getAgentQueueResult).applyValue(example -> example.applyValue(getAgentQueueResult -> getAgentQueueResult.name())));
     *         ctx.export("poolId", example.applyValue(getAgentQueueResult -> getAgentQueueResult).applyValue(example -> example.applyValue(getAgentQueueResult -> getAgentQueueResult.agentPoolId())));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Agent Queues - Get](https://docs.microsoft.com/en-us/rest/api/azure/devops/distributedtask/queues/get?view=azure-devops-rest-7.0)
     * 
     */
    public static Output<GetAgentQueueResult> getAgentQueue(GetAgentQueueArgs args) {
        return getAgentQueue(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Agent Queue within Azure DevOps.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.Project;
     * import com.pulumi.azuredevops.ProjectArgs;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetAgentQueueArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var exampleProject = new Project("exampleProject", ProjectArgs.builder()
     *             .name("Example Project")
     *             .workItemTemplate("Agile")
     *             .versionControl("Git")
     *             .visibility("private")
     *             .description("Managed by Terraform")
     *             .build());
     * 
     *         final var example = AzuredevopsFunctions.getAgentQueue(GetAgentQueueArgs.builder()
     *             .projectId(exampleProject.id())
     *             .name("Example Agent Queue")
     *             .build());
     * 
     *         ctx.export("name", example.applyValue(getAgentQueueResult -> getAgentQueueResult).applyValue(example -> example.applyValue(getAgentQueueResult -> getAgentQueueResult.name())));
     *         ctx.export("poolId", example.applyValue(getAgentQueueResult -> getAgentQueueResult).applyValue(example -> example.applyValue(getAgentQueueResult -> getAgentQueueResult.agentPoolId())));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Agent Queues - Get](https://docs.microsoft.com/en-us/rest/api/azure/devops/distributedtask/queues/get?view=azure-devops-rest-7.0)
     * 
     */
    public static CompletableFuture<GetAgentQueueResult> getAgentQueuePlain(GetAgentQueuePlainArgs args) {
        return getAgentQueuePlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Agent Queue within Azure DevOps.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.Project;
     * import com.pulumi.azuredevops.ProjectArgs;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetAgentQueueArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var exampleProject = new Project("exampleProject", ProjectArgs.builder()
     *             .name("Example Project")
     *             .workItemTemplate("Agile")
     *             .versionControl("Git")
     *             .visibility("private")
     *             .description("Managed by Terraform")
     *             .build());
     * 
     *         final var example = AzuredevopsFunctions.getAgentQueue(GetAgentQueueArgs.builder()
     *             .projectId(exampleProject.id())
     *             .name("Example Agent Queue")
     *             .build());
     * 
     *         ctx.export("name", example.applyValue(getAgentQueueResult -> getAgentQueueResult).applyValue(example -> example.applyValue(getAgentQueueResult -> getAgentQueueResult.name())));
     *         ctx.export("poolId", example.applyValue(getAgentQueueResult -> getAgentQueueResult).applyValue(example -> example.applyValue(getAgentQueueResult -> getAgentQueueResult.agentPoolId())));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Agent Queues - Get](https://docs.microsoft.com/en-us/rest/api/azure/devops/distributedtask/queues/get?view=azure-devops-rest-7.0)
     * 
     */
    public static Output<GetAgentQueueResult> getAgentQueue(GetAgentQueueArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azuredevops:index/getAgentQueue:getAgentQueue", TypeShape.of(GetAgentQueueResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Agent Queue within Azure DevOps.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.Project;
     * import com.pulumi.azuredevops.ProjectArgs;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetAgentQueueArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var exampleProject = new Project("exampleProject", ProjectArgs.builder()
     *             .name("Example Project")
     *             .workItemTemplate("Agile")
     *             .versionControl("Git")
     *             .visibility("private")
     *             .description("Managed by Terraform")
     *             .build());
     * 
     *         final var example = AzuredevopsFunctions.getAgentQueue(GetAgentQueueArgs.builder()
     *             .projectId(exampleProject.id())
     *             .name("Example Agent Queue")
     *             .build());
     * 
     *         ctx.export("name", example.applyValue(getAgentQueueResult -> getAgentQueueResult).applyValue(example -> example.applyValue(getAgentQueueResult -> getAgentQueueResult.name())));
     *         ctx.export("poolId", example.applyValue(getAgentQueueResult -> getAgentQueueResult).applyValue(example -> example.applyValue(getAgentQueueResult -> getAgentQueueResult.agentPoolId())));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Agent Queues - Get](https://docs.microsoft.com/en-us/rest/api/azure/devops/distributedtask/queues/get?view=azure-devops-rest-7.0)
     * 
     */
    public static CompletableFuture<GetAgentQueueResult> getAgentQueuePlain(GetAgentQueuePlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azuredevops:index/getAgentQueue:getAgentQueue", TypeShape.of(GetAgentQueueResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Area (Component) within Azure DevOps.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.Project;
     * import com.pulumi.azuredevops.ProjectArgs;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetAreaArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var exampleProject = new Project("exampleProject", ProjectArgs.builder()
     *             .name("Example Project")
     *             .workItemTemplate("Agile")
     *             .versionControl("Git")
     *             .visibility("private")
     *             .description("Managed by Terraform")
     *             .build());
     * 
     *         final var example = AzuredevopsFunctions.getArea(GetAreaArgs.builder()
     *             .projectId(exampleProject.id())
     *             .path("/")
     *             .fetchChildren("false")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Classification Nodes - Get Classification Nodes](https://docs.microsoft.com/en-us/rest/api/azure/devops/wit/classification-nodes/create-or-update?view=azure-devops-rest-7.0)
     * 
     * ## PAT Permissions Required
     * 
     * - **Project &amp; Team**: vso.work - Grants the ability to read work items, queries, boards, area and iterations paths, and other work item tracking related metadata. Also grants the ability to execute queries, search work items and to receive notifications about work item events via service hooks.
     * 
     */
    public static Output<GetAreaResult> getArea(GetAreaArgs args) {
        return getArea(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Area (Component) within Azure DevOps.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.Project;
     * import com.pulumi.azuredevops.ProjectArgs;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetAreaArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var exampleProject = new Project("exampleProject", ProjectArgs.builder()
     *             .name("Example Project")
     *             .workItemTemplate("Agile")
     *             .versionControl("Git")
     *             .visibility("private")
     *             .description("Managed by Terraform")
     *             .build());
     * 
     *         final var example = AzuredevopsFunctions.getArea(GetAreaArgs.builder()
     *             .projectId(exampleProject.id())
     *             .path("/")
     *             .fetchChildren("false")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Classification Nodes - Get Classification Nodes](https://docs.microsoft.com/en-us/rest/api/azure/devops/wit/classification-nodes/create-or-update?view=azure-devops-rest-7.0)
     * 
     * ## PAT Permissions Required
     * 
     * - **Project &amp; Team**: vso.work - Grants the ability to read work items, queries, boards, area and iterations paths, and other work item tracking related metadata. Also grants the ability to execute queries, search work items and to receive notifications about work item events via service hooks.
     * 
     */
    public static CompletableFuture<GetAreaResult> getAreaPlain(GetAreaPlainArgs args) {
        return getAreaPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Area (Component) within Azure DevOps.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.Project;
     * import com.pulumi.azuredevops.ProjectArgs;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetAreaArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var exampleProject = new Project("exampleProject", ProjectArgs.builder()
     *             .name("Example Project")
     *             .workItemTemplate("Agile")
     *             .versionControl("Git")
     *             .visibility("private")
     *             .description("Managed by Terraform")
     *             .build());
     * 
     *         final var example = AzuredevopsFunctions.getArea(GetAreaArgs.builder()
     *             .projectId(exampleProject.id())
     *             .path("/")
     *             .fetchChildren("false")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Classification Nodes - Get Classification Nodes](https://docs.microsoft.com/en-us/rest/api/azure/devops/wit/classification-nodes/create-or-update?view=azure-devops-rest-7.0)
     * 
     * ## PAT Permissions Required
     * 
     * - **Project &amp; Team**: vso.work - Grants the ability to read work items, queries, boards, area and iterations paths, and other work item tracking related metadata. Also grants the ability to execute queries, search work items and to receive notifications about work item events via service hooks.
     * 
     */
    public static Output<GetAreaResult> getArea(GetAreaArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azuredevops:index/getArea:getArea", TypeShape.of(GetAreaResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Area (Component) within Azure DevOps.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.Project;
     * import com.pulumi.azuredevops.ProjectArgs;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetAreaArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var exampleProject = new Project("exampleProject", ProjectArgs.builder()
     *             .name("Example Project")
     *             .workItemTemplate("Agile")
     *             .versionControl("Git")
     *             .visibility("private")
     *             .description("Managed by Terraform")
     *             .build());
     * 
     *         final var example = AzuredevopsFunctions.getArea(GetAreaArgs.builder()
     *             .projectId(exampleProject.id())
     *             .path("/")
     *             .fetchChildren("false")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Classification Nodes - Get Classification Nodes](https://docs.microsoft.com/en-us/rest/api/azure/devops/wit/classification-nodes/create-or-update?view=azure-devops-rest-7.0)
     * 
     * ## PAT Permissions Required
     * 
     * - **Project &amp; Team**: vso.work - Grants the ability to read work items, queries, boards, area and iterations paths, and other work item tracking related metadata. Also grants the ability to execute queries, search work items and to receive notifications about work item events via service hooks.
     * 
     */
    public static CompletableFuture<GetAreaResult> getAreaPlain(GetAreaPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azuredevops:index/getArea:getArea", TypeShape.of(GetAreaResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Build Definition.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetBuildDefinitionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Example Project")
     *             .build());
     * 
     *         final var exampleGetBuildDefinition = AzuredevopsFunctions.getBuildDefinition(GetBuildDefinitionArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -> getProjectResult.id()))
     *             .name("existing")
     *             .build());
     * 
     *         ctx.export("id", exampleGetBuildDefinition.applyValue(getBuildDefinitionResult -> getBuildDefinitionResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetBuildDefinitionResult> getBuildDefinition(GetBuildDefinitionArgs args) {
        return getBuildDefinition(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Build Definition.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetBuildDefinitionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Example Project")
     *             .build());
     * 
     *         final var exampleGetBuildDefinition = AzuredevopsFunctions.getBuildDefinition(GetBuildDefinitionArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -> getProjectResult.id()))
     *             .name("existing")
     *             .build());
     * 
     *         ctx.export("id", exampleGetBuildDefinition.applyValue(getBuildDefinitionResult -> getBuildDefinitionResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetBuildDefinitionResult> getBuildDefinitionPlain(GetBuildDefinitionPlainArgs args) {
        return getBuildDefinitionPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Build Definition.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetBuildDefinitionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Example Project")
     *             .build());
     * 
     *         final var exampleGetBuildDefinition = AzuredevopsFunctions.getBuildDefinition(GetBuildDefinitionArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -> getProjectResult.id()))
     *             .name("existing")
     *             .build());
     * 
     *         ctx.export("id", exampleGetBuildDefinition.applyValue(getBuildDefinitionResult -> getBuildDefinitionResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetBuildDefinitionResult> getBuildDefinition(GetBuildDefinitionArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azuredevops:index/getBuildDefinition:getBuildDefinition", TypeShape.of(GetBuildDefinitionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Build Definition.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetBuildDefinitionArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Example Project")
     *             .build());
     * 
     *         final var exampleGetBuildDefinition = AzuredevopsFunctions.getBuildDefinition(GetBuildDefinitionArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -> getProjectResult.id()))
     *             .name("existing")
     *             .build());
     * 
     *         ctx.export("id", exampleGetBuildDefinition.applyValue(getBuildDefinitionResult -> getBuildDefinitionResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetBuildDefinitionResult> getBuildDefinitionPlain(GetBuildDefinitionPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azuredevops:index/getBuildDefinition:getBuildDefinition", TypeShape.of(GetBuildDefinitionResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about the Azure DevOps organization configured for the provider.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getClientConfig();
     * 
     *         ctx.export("orgUrl", example.applyValue(getClientConfigResult -> getClientConfigResult.organizationUrl()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetClientConfigResult> getClientConfig() {
        return getClientConfig(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about the Azure DevOps organization configured for the provider.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getClientConfig();
     * 
     *         ctx.export("orgUrl", example.applyValue(getClientConfigResult -> getClientConfigResult.organizationUrl()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetClientConfigResult> getClientConfigPlain() {
        return getClientConfigPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about the Azure DevOps organization configured for the provider.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getClientConfig();
     * 
     *         ctx.export("orgUrl", example.applyValue(getClientConfigResult -> getClientConfigResult.organizationUrl()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetClientConfigResult> getClientConfig(InvokeArgs args) {
        return getClientConfig(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about the Azure DevOps organization configured for the provider.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getClientConfig();
     * 
     *         ctx.export("orgUrl", example.applyValue(getClientConfigResult -> getClientConfigResult.organizationUrl()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetClientConfigResult> getClientConfigPlain(InvokeArgs args) {
        return getClientConfigPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about the Azure DevOps organization configured for the provider.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getClientConfig();
     * 
     *         ctx.export("orgUrl", example.applyValue(getClientConfigResult -> getClientConfigResult.organizationUrl()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetClientConfigResult> getClientConfig(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azuredevops:index/getClientConfig:getClientConfig", TypeShape.of(GetClientConfigResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about the Azure DevOps organization configured for the provider.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getClientConfig();
     * 
     *         ctx.export("orgUrl", example.applyValue(getClientConfigResult -> getClientConfigResult.organizationUrl()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetClientConfigResult> getClientConfigPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azuredevops:index/getClientConfig:getClientConfig", TypeShape.of(GetClientConfigResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an Environment.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.Project;
     * import com.pulumi.azuredevops.ProjectArgs;
     * import com.pulumi.azuredevops.Environment;
     * import com.pulumi.azuredevops.EnvironmentArgs;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetEnvironmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var exampleProject = new Project("exampleProject", ProjectArgs.builder()
     *             .name("Example Project")
     *             .workItemTemplate("Agile")
     *             .versionControl("Git")
     *             .visibility("private")
     *             .description("Managed by Terraform")
     *             .build());
     * 
     *         var exampleEnvironment = new Environment("exampleEnvironment", EnvironmentArgs.builder()
     *             .projectId(exampleProject.id())
     *             .name("Example Environment")
     *             .description("Managed by Terraform")
     *             .build());
     * 
     *         final var example = AzuredevopsFunctions.getEnvironment(GetEnvironmentArgs.builder()
     *             .projectId(exampleProject.id())
     *             .environmentId(exampleEnvironment.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * * [Azure DevOps Service REST API 7.0 - Environments](https://docs.microsoft.com/en-us/rest/api/azure/devops/distributedtask/environments?view=azure-devops-rest-7.0)
     * 
     */
    public static Output<GetEnvironmentResult> getEnvironment(GetEnvironmentArgs args) {
        return getEnvironment(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an Environment.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.Project;
     * import com.pulumi.azuredevops.ProjectArgs;
     * import com.pulumi.azuredevops.Environment;
     * import com.pulumi.azuredevops.EnvironmentArgs;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetEnvironmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var exampleProject = new Project("exampleProject", ProjectArgs.builder()
     *             .name("Example Project")
     *             .workItemTemplate("Agile")
     *             .versionControl("Git")
     *             .visibility("private")
     *             .description("Managed by Terraform")
     *             .build());
     * 
     *         var exampleEnvironment = new Environment("exampleEnvironment", EnvironmentArgs.builder()
     *             .projectId(exampleProject.id())
     *             .name("Example Environment")
     *             .description("Managed by Terraform")
     *             .build());
     * 
     *         final var example = AzuredevopsFunctions.getEnvironment(GetEnvironmentArgs.builder()
     *             .projectId(exampleProject.id())
     *             .environmentId(exampleEnvironment.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * * [Azure DevOps Service REST API 7.0 - Environments](https://docs.microsoft.com/en-us/rest/api/azure/devops/distributedtask/environments?view=azure-devops-rest-7.0)
     * 
     */
    public static CompletableFuture<GetEnvironmentResult> getEnvironmentPlain(GetEnvironmentPlainArgs args) {
        return getEnvironmentPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an Environment.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.Project;
     * import com.pulumi.azuredevops.ProjectArgs;
     * import com.pulumi.azuredevops.Environment;
     * import com.pulumi.azuredevops.EnvironmentArgs;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetEnvironmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var exampleProject = new Project("exampleProject", ProjectArgs.builder()
     *             .name("Example Project")
     *             .workItemTemplate("Agile")
     *             .versionControl("Git")
     *             .visibility("private")
     *             .description("Managed by Terraform")
     *             .build());
     * 
     *         var exampleEnvironment = new Environment("exampleEnvironment", EnvironmentArgs.builder()
     *             .projectId(exampleProject.id())
     *             .name("Example Environment")
     *             .description("Managed by Terraform")
     *             .build());
     * 
     *         final var example = AzuredevopsFunctions.getEnvironment(GetEnvironmentArgs.builder()
     *             .projectId(exampleProject.id())
     *             .environmentId(exampleEnvironment.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * * [Azure DevOps Service REST API 7.0 - Environments](https://docs.microsoft.com/en-us/rest/api/azure/devops/distributedtask/environments?view=azure-devops-rest-7.0)
     * 
     */
    public static Output<GetEnvironmentResult> getEnvironment(GetEnvironmentArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azuredevops:index/getEnvironment:getEnvironment", TypeShape.of(GetEnvironmentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an Environment.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.Project;
     * import com.pulumi.azuredevops.ProjectArgs;
     * import com.pulumi.azuredevops.Environment;
     * import com.pulumi.azuredevops.EnvironmentArgs;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetEnvironmentArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var exampleProject = new Project("exampleProject", ProjectArgs.builder()
     *             .name("Example Project")
     *             .workItemTemplate("Agile")
     *             .versionControl("Git")
     *             .visibility("private")
     *             .description("Managed by Terraform")
     *             .build());
     * 
     *         var exampleEnvironment = new Environment("exampleEnvironment", EnvironmentArgs.builder()
     *             .projectId(exampleProject.id())
     *             .name("Example Environment")
     *             .description("Managed by Terraform")
     *             .build());
     * 
     *         final var example = AzuredevopsFunctions.getEnvironment(GetEnvironmentArgs.builder()
     *             .projectId(exampleProject.id())
     *             .environmentId(exampleEnvironment.id())
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * * [Azure DevOps Service REST API 7.0 - Environments](https://docs.microsoft.com/en-us/rest/api/azure/devops/distributedtask/environments?view=azure-devops-rest-7.0)
     * 
     */
    public static CompletableFuture<GetEnvironmentResult> getEnvironmentPlain(GetEnvironmentPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azuredevops:index/getEnvironment:getEnvironment", TypeShape.of(GetEnvironmentResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about a **single** (existing) Git Repository within Azure DevOps.
     * To read information about **multiple** Git Repositories use the data source `azuredevops.getRepositories`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetGitRepositoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Example Project")
     *             .build());
     * 
     *         // Load a specific Git repository by name
     *         final var example-single-repo = AzuredevopsFunctions.getGitRepository(GetGitRepositoryArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -> getProjectResult.id()))
     *             .name("Example Repository")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Git API](https://docs.microsoft.com/en-us/rest/api/azure/devops/git/?view=azure-devops-rest-7.0)
     * 
     */
    public static Output<GetGitRepositoryResult> getGitRepository(GetGitRepositoryArgs args) {
        return getGitRepository(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about a **single** (existing) Git Repository within Azure DevOps.
     * To read information about **multiple** Git Repositories use the data source `azuredevops.getRepositories`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetGitRepositoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Example Project")
     *             .build());
     * 
     *         // Load a specific Git repository by name
     *         final var example-single-repo = AzuredevopsFunctions.getGitRepository(GetGitRepositoryArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -> getProjectResult.id()))
     *             .name("Example Repository")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Git API](https://docs.microsoft.com/en-us/rest/api/azure/devops/git/?view=azure-devops-rest-7.0)
     * 
     */
    public static CompletableFuture<GetGitRepositoryResult> getGitRepositoryPlain(GetGitRepositoryPlainArgs args) {
        return getGitRepositoryPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about a **single** (existing) Git Repository within Azure DevOps.
     * To read information about **multiple** Git Repositories use the data source `azuredevops.getRepositories`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetGitRepositoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Example Project")
     *             .build());
     * 
     *         // Load a specific Git repository by name
     *         final var example-single-repo = AzuredevopsFunctions.getGitRepository(GetGitRepositoryArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -> getProjectResult.id()))
     *             .name("Example Repository")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Git API](https://docs.microsoft.com/en-us/rest/api/azure/devops/git/?view=azure-devops-rest-7.0)
     * 
     */
    public static Output<GetGitRepositoryResult> getGitRepository(GetGitRepositoryArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azuredevops:index/getGitRepository:getGitRepository", TypeShape.of(GetGitRepositoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about a **single** (existing) Git Repository within Azure DevOps.
     * To read information about **multiple** Git Repositories use the data source `azuredevops.getRepositories`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetGitRepositoryArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Example Project")
     *             .build());
     * 
     *         // Load a specific Git repository by name
     *         final var example-single-repo = AzuredevopsFunctions.getGitRepository(GetGitRepositoryArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -> getProjectResult.id()))
     *             .name("Example Repository")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Git API](https://docs.microsoft.com/en-us/rest/api/azure/devops/git/?view=azure-devops-rest-7.0)
     * 
     */
    public static CompletableFuture<GetGitRepositoryResult> getGitRepositoryPlain(GetGitRepositoryPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azuredevops:index/getGitRepository:getGitRepository", TypeShape.of(GetGitRepositoryResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Group within Azure DevOps
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Example Project")
     *             .build());
     * 
     *         final var exampleGetGroup = AzuredevopsFunctions.getGroup(GetGroupArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -> getProjectResult.id()))
     *             .name("Example Group")
     *             .build());
     * 
     *         ctx.export("groupId", exampleGetGroup.applyValue(getGroupResult -> getGroupResult.id()));
     *         ctx.export("groupDescriptor", exampleGetGroup.applyValue(getGroupResult -> getGroupResult.descriptor()));
     *         final var example-collection-group = AzuredevopsFunctions.getGroup(GetGroupArgs.builder()
     *             .name("Project Collection Administrators")
     *             .build());
     * 
     *         ctx.export("collectionGroupId", exampleGetGroup.applyValue(getGroupResult -> getGroupResult.id()));
     *         ctx.export("collectionGroupDescriptor", exampleGetGroup.applyValue(getGroupResult -> getGroupResult.descriptor()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Groups - Get](https://docs.microsoft.com/en-us/rest/api/azure/devops/graph/groups/get?view=azure-devops-rest-7.0)
     * 
     * ## PAT Permissions Required
     * 
     * - **Graph**: Read
     * - **Work Items**: Read
     * 
     */
    public static Output<GetGroupResult> getGroup(GetGroupArgs args) {
        return getGroup(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Group within Azure DevOps
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Example Project")
     *             .build());
     * 
     *         final var exampleGetGroup = AzuredevopsFunctions.getGroup(GetGroupArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -> getProjectResult.id()))
     *             .name("Example Group")
     *             .build());
     * 
     *         ctx.export("groupId", exampleGetGroup.applyValue(getGroupResult -> getGroupResult.id()));
     *         ctx.export("groupDescriptor", exampleGetGroup.applyValue(getGroupResult -> getGroupResult.descriptor()));
     *         final var example-collection-group = AzuredevopsFunctions.getGroup(GetGroupArgs.builder()
     *             .name("Project Collection Administrators")
     *             .build());
     * 
     *         ctx.export("collectionGroupId", exampleGetGroup.applyValue(getGroupResult -> getGroupResult.id()));
     *         ctx.export("collectionGroupDescriptor", exampleGetGroup.applyValue(getGroupResult -> getGroupResult.descriptor()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Groups - Get](https://docs.microsoft.com/en-us/rest/api/azure/devops/graph/groups/get?view=azure-devops-rest-7.0)
     * 
     * ## PAT Permissions Required
     * 
     * - **Graph**: Read
     * - **Work Items**: Read
     * 
     */
    public static CompletableFuture<GetGroupResult> getGroupPlain(GetGroupPlainArgs args) {
        return getGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Group within Azure DevOps
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Example Project")
     *             .build());
     * 
     *         final var exampleGetGroup = AzuredevopsFunctions.getGroup(GetGroupArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -> getProjectResult.id()))
     *             .name("Example Group")
     *             .build());
     * 
     *         ctx.export("groupId", exampleGetGroup.applyValue(getGroupResult -> getGroupResult.id()));
     *         ctx.export("groupDescriptor", exampleGetGroup.applyValue(getGroupResult -> getGroupResult.descriptor()));
     *         final var example-collection-group = AzuredevopsFunctions.getGroup(GetGroupArgs.builder()
     *             .name("Project Collection Administrators")
     *             .build());
     * 
     *         ctx.export("collectionGroupId", exampleGetGroup.applyValue(getGroupResult -> getGroupResult.id()));
     *         ctx.export("collectionGroupDescriptor", exampleGetGroup.applyValue(getGroupResult -> getGroupResult.descriptor()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Groups - Get](https://docs.microsoft.com/en-us/rest/api/azure/devops/graph/groups/get?view=azure-devops-rest-7.0)
     * 
     * ## PAT Permissions Required
     * 
     * - **Graph**: Read
     * - **Work Items**: Read
     * 
     */
    public static Output<GetGroupResult> getGroup(GetGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azuredevops:index/getGroup:getGroup", TypeShape.of(GetGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Group within Azure DevOps
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Example Project")
     *             .build());
     * 
     *         final var exampleGetGroup = AzuredevopsFunctions.getGroup(GetGroupArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -> getProjectResult.id()))
     *             .name("Example Group")
     *             .build());
     * 
     *         ctx.export("groupId", exampleGetGroup.applyValue(getGroupResult -> getGroupResult.id()));
     *         ctx.export("groupDescriptor", exampleGetGroup.applyValue(getGroupResult -> getGroupResult.descriptor()));
     *         final var example-collection-group = AzuredevopsFunctions.getGroup(GetGroupArgs.builder()
     *             .name("Project Collection Administrators")
     *             .build());
     * 
     *         ctx.export("collectionGroupId", exampleGetGroup.applyValue(getGroupResult -> getGroupResult.id()));
     *         ctx.export("collectionGroupDescriptor", exampleGetGroup.applyValue(getGroupResult -> getGroupResult.descriptor()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Groups - Get](https://docs.microsoft.com/en-us/rest/api/azure/devops/graph/groups/get?view=azure-devops-rest-7.0)
     * 
     * ## PAT Permissions Required
     * 
     * - **Graph**: Read
     * - **Work Items**: Read
     * 
     */
    public static CompletableFuture<GetGroupResult> getGroupPlain(GetGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azuredevops:index/getGroup:getGroup", TypeShape.of(GetGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about existing Groups within Azure DevOps
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Example Project")
     *             .build());
     * 
     *         // load all existing groups inside an organization
     *         final var example-all-groups = AzuredevopsFunctions.getGroups();
     * 
     *         // load all existing groups inside a specific project
     *         final var example-project-groups = AzuredevopsFunctions.getGroups(GetGroupsArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -> getProjectResult.id()))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Groups - List](https://docs.microsoft.com/en-us/rest/api/azure/devops/graph/groups/list?view=azure-devops-rest-7.0)
     * 
     */
    public static Output<GetGroupsResult> getGroups() {
        return getGroups(GetGroupsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about existing Groups within Azure DevOps
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Example Project")
     *             .build());
     * 
     *         // load all existing groups inside an organization
     *         final var example-all-groups = AzuredevopsFunctions.getGroups();
     * 
     *         // load all existing groups inside a specific project
     *         final var example-project-groups = AzuredevopsFunctions.getGroups(GetGroupsArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -> getProjectResult.id()))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Groups - List](https://docs.microsoft.com/en-us/rest/api/azure/devops/graph/groups/list?view=azure-devops-rest-7.0)
     * 
     */
    public static CompletableFuture<GetGroupsResult> getGroupsPlain() {
        return getGroupsPlain(GetGroupsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about existing Groups within Azure DevOps
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Example Project")
     *             .build());
     * 
     *         // load all existing groups inside an organization
     *         final var example-all-groups = AzuredevopsFunctions.getGroups();
     * 
     *         // load all existing groups inside a specific project
     *         final var example-project-groups = AzuredevopsFunctions.getGroups(GetGroupsArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -> getProjectResult.id()))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Groups - List](https://docs.microsoft.com/en-us/rest/api/azure/devops/graph/groups/list?view=azure-devops-rest-7.0)
     * 
     */
    public static Output<GetGroupsResult> getGroups(GetGroupsArgs args) {
        return getGroups(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about existing Groups within Azure DevOps
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Example Project")
     *             .build());
     * 
     *         // load all existing groups inside an organization
     *         final var example-all-groups = AzuredevopsFunctions.getGroups();
     * 
     *         // load all existing groups inside a specific project
     *         final var example-project-groups = AzuredevopsFunctions.getGroups(GetGroupsArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -> getProjectResult.id()))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Groups - List](https://docs.microsoft.com/en-us/rest/api/azure/devops/graph/groups/list?view=azure-devops-rest-7.0)
     * 
     */
    public static CompletableFuture<GetGroupsResult> getGroupsPlain(GetGroupsPlainArgs args) {
        return getGroupsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about existing Groups within Azure DevOps
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Example Project")
     *             .build());
     * 
     *         // load all existing groups inside an organization
     *         final var example-all-groups = AzuredevopsFunctions.getGroups();
     * 
     *         // load all existing groups inside a specific project
     *         final var example-project-groups = AzuredevopsFunctions.getGroups(GetGroupsArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -> getProjectResult.id()))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Groups - List](https://docs.microsoft.com/en-us/rest/api/azure/devops/graph/groups/list?view=azure-devops-rest-7.0)
     * 
     */
    public static Output<GetGroupsResult> getGroups(GetGroupsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azuredevops:index/getGroups:getGroups", TypeShape.of(GetGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about existing Groups within Azure DevOps
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetGroupsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Example Project")
     *             .build());
     * 
     *         // load all existing groups inside an organization
     *         final var example-all-groups = AzuredevopsFunctions.getGroups();
     * 
     *         // load all existing groups inside a specific project
     *         final var example-project-groups = AzuredevopsFunctions.getGroups(GetGroupsArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -> getProjectResult.id()))
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Groups - List](https://docs.microsoft.com/en-us/rest/api/azure/devops/graph/groups/list?view=azure-devops-rest-7.0)
     * 
     */
    public static CompletableFuture<GetGroupsResult> getGroupsPlain(GetGroupsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azuredevops:index/getGroups:getGroups", TypeShape.of(GetGroupsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Iteration (Sprint) within Azure DevOps.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.Project;
     * import com.pulumi.azuredevops.ProjectArgs;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetIterationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var example = new Project("example", ProjectArgs.builder()
     *             .name("Example Project")
     *             .workItemTemplate("Agile")
     *             .versionControl("Git")
     *             .visibility("private")
     *             .description("Managed by Terraform")
     *             .build());
     * 
     *         final var example-root-iteration = AzuredevopsFunctions.getIteration(GetIterationArgs.builder()
     *             .projectId(example.id())
     *             .path("/")
     *             .fetchChildren(true)
     *             .build());
     * 
     *         final var example-child-iteration = AzuredevopsFunctions.getIteration(GetIterationArgs.builder()
     *             .projectId(example.id())
     *             .path("/Iteration 1")
     *             .fetchChildren(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Classification Nodes - Get Classification Nodes](https://docs.microsoft.com/en-us/rest/api/azure/devops/wit/classification-nodes/get-classification-nodes?view=azure-devops-rest-7.0)
     * 
     * ## PAT Permissions Required
     * 
     * - **Project &amp; Team**: vso.work - Grants the ability to read work items, queries, boards, area and iterations paths, and other work item tracking related metadata. Also grants the ability to execute queries, search work items and to receive notifications about work item events via service hooks.
     * 
     */
    public static Output<GetIterationResult> getIteration(GetIterationArgs args) {
        return getIteration(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Iteration (Sprint) within Azure DevOps.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.Project;
     * import com.pulumi.azuredevops.ProjectArgs;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetIterationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var example = new Project("example", ProjectArgs.builder()
     *             .name("Example Project")
     *             .workItemTemplate("Agile")
     *             .versionControl("Git")
     *             .visibility("private")
     *             .description("Managed by Terraform")
     *             .build());
     * 
     *         final var example-root-iteration = AzuredevopsFunctions.getIteration(GetIterationArgs.builder()
     *             .projectId(example.id())
     *             .path("/")
     *             .fetchChildren(true)
     *             .build());
     * 
     *         final var example-child-iteration = AzuredevopsFunctions.getIteration(GetIterationArgs.builder()
     *             .projectId(example.id())
     *             .path("/Iteration 1")
     *             .fetchChildren(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Classification Nodes - Get Classification Nodes](https://docs.microsoft.com/en-us/rest/api/azure/devops/wit/classification-nodes/get-classification-nodes?view=azure-devops-rest-7.0)
     * 
     * ## PAT Permissions Required
     * 
     * - **Project &amp; Team**: vso.work - Grants the ability to read work items, queries, boards, area and iterations paths, and other work item tracking related metadata. Also grants the ability to execute queries, search work items and to receive notifications about work item events via service hooks.
     * 
     */
    public static CompletableFuture<GetIterationResult> getIterationPlain(GetIterationPlainArgs args) {
        return getIterationPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Iteration (Sprint) within Azure DevOps.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.Project;
     * import com.pulumi.azuredevops.ProjectArgs;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetIterationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var example = new Project("example", ProjectArgs.builder()
     *             .name("Example Project")
     *             .workItemTemplate("Agile")
     *             .versionControl("Git")
     *             .visibility("private")
     *             .description("Managed by Terraform")
     *             .build());
     * 
     *         final var example-root-iteration = AzuredevopsFunctions.getIteration(GetIterationArgs.builder()
     *             .projectId(example.id())
     *             .path("/")
     *             .fetchChildren(true)
     *             .build());
     * 
     *         final var example-child-iteration = AzuredevopsFunctions.getIteration(GetIterationArgs.builder()
     *             .projectId(example.id())
     *             .path("/Iteration 1")
     *             .fetchChildren(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Classification Nodes - Get Classification Nodes](https://docs.microsoft.com/en-us/rest/api/azure/devops/wit/classification-nodes/get-classification-nodes?view=azure-devops-rest-7.0)
     * 
     * ## PAT Permissions Required
     * 
     * - **Project &amp; Team**: vso.work - Grants the ability to read work items, queries, boards, area and iterations paths, and other work item tracking related metadata. Also grants the ability to execute queries, search work items and to receive notifications about work item events via service hooks.
     * 
     */
    public static Output<GetIterationResult> getIteration(GetIterationArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azuredevops:index/getIteration:getIteration", TypeShape.of(GetIterationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Iteration (Sprint) within Azure DevOps.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.Project;
     * import com.pulumi.azuredevops.ProjectArgs;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetIterationArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var example = new Project("example", ProjectArgs.builder()
     *             .name("Example Project")
     *             .workItemTemplate("Agile")
     *             .versionControl("Git")
     *             .visibility("private")
     *             .description("Managed by Terraform")
     *             .build());
     * 
     *         final var example-root-iteration = AzuredevopsFunctions.getIteration(GetIterationArgs.builder()
     *             .projectId(example.id())
     *             .path("/")
     *             .fetchChildren(true)
     *             .build());
     * 
     *         final var example-child-iteration = AzuredevopsFunctions.getIteration(GetIterationArgs.builder()
     *             .projectId(example.id())
     *             .path("/Iteration 1")
     *             .fetchChildren(true)
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Classification Nodes - Get Classification Nodes](https://docs.microsoft.com/en-us/rest/api/azure/devops/wit/classification-nodes/get-classification-nodes?view=azure-devops-rest-7.0)
     * 
     * ## PAT Permissions Required
     * 
     * - **Project &amp; Team**: vso.work - Grants the ability to read work items, queries, boards, area and iterations paths, and other work item tracking related metadata. Also grants the ability to execute queries, search work items and to receive notifications about work item events via service hooks.
     * 
     */
    public static CompletableFuture<GetIterationResult> getIterationPlain(GetIterationPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azuredevops:index/getIteration:getIteration", TypeShape.of(GetIterationResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Agent Pool within Azure DevOps.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetPoolArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getPool(GetPoolArgs.builder()
     *             .name("Example Agent Pool")
     *             .build());
     * 
     *         ctx.export("name", example.applyValue(getPoolResult -> getPoolResult.name()));
     *         ctx.export("poolType", example.applyValue(getPoolResult -> getPoolResult.poolType()));
     *         ctx.export("autoProvision", example.applyValue(getPoolResult -> getPoolResult.autoProvision()));
     *         ctx.export("autoUpdate", example.applyValue(getPoolResult -> getPoolResult.autoUpdate()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Agent Pools - Get](https://docs.microsoft.com/en-us/rest/api/azure/devops/distributedtask/pools/get?view=azure-devops-rest-7.0)
     * 
     */
    public static Output<GetPoolResult> getPool(GetPoolArgs args) {
        return getPool(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Agent Pool within Azure DevOps.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetPoolArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getPool(GetPoolArgs.builder()
     *             .name("Example Agent Pool")
     *             .build());
     * 
     *         ctx.export("name", example.applyValue(getPoolResult -> getPoolResult.name()));
     *         ctx.export("poolType", example.applyValue(getPoolResult -> getPoolResult.poolType()));
     *         ctx.export("autoProvision", example.applyValue(getPoolResult -> getPoolResult.autoProvision()));
     *         ctx.export("autoUpdate", example.applyValue(getPoolResult -> getPoolResult.autoUpdate()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Agent Pools - Get](https://docs.microsoft.com/en-us/rest/api/azure/devops/distributedtask/pools/get?view=azure-devops-rest-7.0)
     * 
     */
    public static CompletableFuture<GetPoolResult> getPoolPlain(GetPoolPlainArgs args) {
        return getPoolPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Agent Pool within Azure DevOps.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetPoolArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getPool(GetPoolArgs.builder()
     *             .name("Example Agent Pool")
     *             .build());
     * 
     *         ctx.export("name", example.applyValue(getPoolResult -> getPoolResult.name()));
     *         ctx.export("poolType", example.applyValue(getPoolResult -> getPoolResult.poolType()));
     *         ctx.export("autoProvision", example.applyValue(getPoolResult -> getPoolResult.autoProvision()));
     *         ctx.export("autoUpdate", example.applyValue(getPoolResult -> getPoolResult.autoUpdate()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Agent Pools - Get](https://docs.microsoft.com/en-us/rest/api/azure/devops/distributedtask/pools/get?view=azure-devops-rest-7.0)
     * 
     */
    public static Output<GetPoolResult> getPool(GetPoolArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azuredevops:index/getPool:getPool", TypeShape.of(GetPoolResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Agent Pool within Azure DevOps.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetPoolArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getPool(GetPoolArgs.builder()
     *             .name("Example Agent Pool")
     *             .build());
     * 
     *         ctx.export("name", example.applyValue(getPoolResult -> getPoolResult.name()));
     *         ctx.export("poolType", example.applyValue(getPoolResult -> getPoolResult.poolType()));
     *         ctx.export("autoProvision", example.applyValue(getPoolResult -> getPoolResult.autoProvision()));
     *         ctx.export("autoUpdate", example.applyValue(getPoolResult -> getPoolResult.autoUpdate()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Agent Pools - Get](https://docs.microsoft.com/en-us/rest/api/azure/devops/distributedtask/pools/get?view=azure-devops-rest-7.0)
     * 
     */
    public static CompletableFuture<GetPoolResult> getPoolPlain(GetPoolPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azuredevops:index/getPool:getPool", TypeShape.of(GetPoolResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about existing Agent Pools within Azure DevOps.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getPools();
     * 
     *         ctx.export("agentPoolName", example.applyValue(getPoolsResult -> getPoolsResult.agentPools()).stream().map(element -> element.name()).collect(toList()));
     *         ctx.export("autoProvision", example.applyValue(getPoolsResult -> getPoolsResult.agentPools()).stream().map(element -> element.autoProvision()).collect(toList()));
     *         ctx.export("autoUpdate", example.applyValue(getPoolsResult -> getPoolsResult.agentPools()).stream().map(element -> element.autoUpdate()).collect(toList()));
     *         ctx.export("poolType", example.applyValue(getPoolsResult -> getPoolsResult.agentPools()).stream().map(element -> element.poolType()).collect(toList()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Agent Pools - Get](https://docs.microsoft.com/en-us/rest/api/azure/devops/distributedtask/pools/get?view=azure-devops-rest-7.0)
     * 
     */
    public static Output<GetPoolsResult> getPools() {
        return getPools(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about existing Agent Pools within Azure DevOps.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getPools();
     * 
     *         ctx.export("agentPoolName", example.applyValue(getPoolsResult -> getPoolsResult.agentPools()).stream().map(element -> element.name()).collect(toList()));
     *         ctx.export("autoProvision", example.applyValue(getPoolsResult -> getPoolsResult.agentPools()).stream().map(element -> element.autoProvision()).collect(toList()));
     *         ctx.export("autoUpdate", example.applyValue(getPoolsResult -> getPoolsResult.agentPools()).stream().map(element -> element.autoUpdate()).collect(toList()));
     *         ctx.export("poolType", example.applyValue(getPoolsResult -> getPoolsResult.agentPools()).stream().map(element -> element.poolType()).collect(toList()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Agent Pools - Get](https://docs.microsoft.com/en-us/rest/api/azure/devops/distributedtask/pools/get?view=azure-devops-rest-7.0)
     * 
     */
    public static CompletableFuture<GetPoolsResult> getPoolsPlain() {
        return getPoolsPlain(InvokeArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about existing Agent Pools within Azure DevOps.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getPools();
     * 
     *         ctx.export("agentPoolName", example.applyValue(getPoolsResult -> getPoolsResult.agentPools()).stream().map(element -> element.name()).collect(toList()));
     *         ctx.export("autoProvision", example.applyValue(getPoolsResult -> getPoolsResult.agentPools()).stream().map(element -> element.autoProvision()).collect(toList()));
     *         ctx.export("autoUpdate", example.applyValue(getPoolsResult -> getPoolsResult.agentPools()).stream().map(element -> element.autoUpdate()).collect(toList()));
     *         ctx.export("poolType", example.applyValue(getPoolsResult -> getPoolsResult.agentPools()).stream().map(element -> element.poolType()).collect(toList()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Agent Pools - Get](https://docs.microsoft.com/en-us/rest/api/azure/devops/distributedtask/pools/get?view=azure-devops-rest-7.0)
     * 
     */
    public static Output<GetPoolsResult> getPools(InvokeArgs args) {
        return getPools(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about existing Agent Pools within Azure DevOps.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getPools();
     * 
     *         ctx.export("agentPoolName", example.applyValue(getPoolsResult -> getPoolsResult.agentPools()).stream().map(element -> element.name()).collect(toList()));
     *         ctx.export("autoProvision", example.applyValue(getPoolsResult -> getPoolsResult.agentPools()).stream().map(element -> element.autoProvision()).collect(toList()));
     *         ctx.export("autoUpdate", example.applyValue(getPoolsResult -> getPoolsResult.agentPools()).stream().map(element -> element.autoUpdate()).collect(toList()));
     *         ctx.export("poolType", example.applyValue(getPoolsResult -> getPoolsResult.agentPools()).stream().map(element -> element.poolType()).collect(toList()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Agent Pools - Get](https://docs.microsoft.com/en-us/rest/api/azure/devops/distributedtask/pools/get?view=azure-devops-rest-7.0)
     * 
     */
    public static CompletableFuture<GetPoolsResult> getPoolsPlain(InvokeArgs args) {
        return getPoolsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about existing Agent Pools within Azure DevOps.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getPools();
     * 
     *         ctx.export("agentPoolName", example.applyValue(getPoolsResult -> getPoolsResult.agentPools()).stream().map(element -> element.name()).collect(toList()));
     *         ctx.export("autoProvision", example.applyValue(getPoolsResult -> getPoolsResult.agentPools()).stream().map(element -> element.autoProvision()).collect(toList()));
     *         ctx.export("autoUpdate", example.applyValue(getPoolsResult -> getPoolsResult.agentPools()).stream().map(element -> element.autoUpdate()).collect(toList()));
     *         ctx.export("poolType", example.applyValue(getPoolsResult -> getPoolsResult.agentPools()).stream().map(element -> element.poolType()).collect(toList()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Agent Pools - Get](https://docs.microsoft.com/en-us/rest/api/azure/devops/distributedtask/pools/get?view=azure-devops-rest-7.0)
     * 
     */
    public static Output<GetPoolsResult> getPools(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azuredevops:index/getPools:getPools", TypeShape.of(GetPoolsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about existing Agent Pools within Azure DevOps.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getPools();
     * 
     *         ctx.export("agentPoolName", example.applyValue(getPoolsResult -> getPoolsResult.agentPools()).stream().map(element -> element.name()).collect(toList()));
     *         ctx.export("autoProvision", example.applyValue(getPoolsResult -> getPoolsResult.agentPools()).stream().map(element -> element.autoProvision()).collect(toList()));
     *         ctx.export("autoUpdate", example.applyValue(getPoolsResult -> getPoolsResult.agentPools()).stream().map(element -> element.autoUpdate()).collect(toList()));
     *         ctx.export("poolType", example.applyValue(getPoolsResult -> getPoolsResult.agentPools()).stream().map(element -> element.poolType()).collect(toList()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Agent Pools - Get](https://docs.microsoft.com/en-us/rest/api/azure/devops/distributedtask/pools/get?view=azure-devops-rest-7.0)
     * 
     */
    public static CompletableFuture<GetPoolsResult> getPoolsPlain(InvokeArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azuredevops:index/getPools:getPools", TypeShape.of(GetPoolsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Project within Azure DevOps.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Example Project")
     *             .build());
     * 
     *         ctx.export("project", example.applyValue(getProjectResult -> getProjectResult));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Projects - Get](https://docs.microsoft.com/en-us/rest/api/azure/devops/core/projects/get?view=azure-devops-rest-7.0)
     * 
     */
    public static Output<GetProjectResult> getProject() {
        return getProject(GetProjectArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Project within Azure DevOps.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Example Project")
     *             .build());
     * 
     *         ctx.export("project", example.applyValue(getProjectResult -> getProjectResult));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Projects - Get](https://docs.microsoft.com/en-us/rest/api/azure/devops/core/projects/get?view=azure-devops-rest-7.0)
     * 
     */
    public static CompletableFuture<GetProjectResult> getProjectPlain() {
        return getProjectPlain(GetProjectPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Project within Azure DevOps.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Example Project")
     *             .build());
     * 
     *         ctx.export("project", example.applyValue(getProjectResult -> getProjectResult));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Projects - Get](https://docs.microsoft.com/en-us/rest/api/azure/devops/core/projects/get?view=azure-devops-rest-7.0)
     * 
     */
    public static Output<GetProjectResult> getProject(GetProjectArgs args) {
        return getProject(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Project within Azure DevOps.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Example Project")
     *             .build());
     * 
     *         ctx.export("project", example.applyValue(getProjectResult -> getProjectResult));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Projects - Get](https://docs.microsoft.com/en-us/rest/api/azure/devops/core/projects/get?view=azure-devops-rest-7.0)
     * 
     */
    public static CompletableFuture<GetProjectResult> getProjectPlain(GetProjectPlainArgs args) {
        return getProjectPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Project within Azure DevOps.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Example Project")
     *             .build());
     * 
     *         ctx.export("project", example.applyValue(getProjectResult -> getProjectResult));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Projects - Get](https://docs.microsoft.com/en-us/rest/api/azure/devops/core/projects/get?view=azure-devops-rest-7.0)
     * 
     */
    public static Output<GetProjectResult> getProject(GetProjectArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azuredevops:index/getProject:getProject", TypeShape.of(GetProjectResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Project within Azure DevOps.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Example Project")
     *             .build());
     * 
     *         ctx.export("project", example.applyValue(getProjectResult -> getProjectResult));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Projects - Get](https://docs.microsoft.com/en-us/rest/api/azure/devops/core/projects/get?view=azure-devops-rest-7.0)
     * 
     */
    public static CompletableFuture<GetProjectResult> getProjectPlain(GetProjectPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azuredevops:index/getProject:getProject", TypeShape.of(GetProjectResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about existing Projects within Azure DevOps.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProjects(GetProjectsArgs.builder()
     *             .name("Example Project")
     *             .state("wellFormed")
     *             .build());
     * 
     *         ctx.export("projectId", example.applyValue(getProjectsResult -> getProjectsResult.projects()).stream().map(element -> element.projectId()).collect(toList()));
     *         ctx.export("name", example.applyValue(getProjectsResult -> getProjectsResult.projects()).stream().map(element -> element.name()).collect(toList()));
     *         ctx.export("projectUrl", example.applyValue(getProjectsResult -> getProjectsResult.projects()).stream().map(element -> element.projectUrl()).collect(toList()));
     *         ctx.export("state", example.applyValue(getProjectsResult -> getProjectsResult.projects()).stream().map(element -> element.state()).collect(toList()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Projects - Get](https://docs.microsoft.com/en-us/rest/api/azure/devops/core/projects/get?view=azure-devops-rest-7.0)
     * 
     */
    public static Output<GetProjectsResult> getProjects() {
        return getProjects(GetProjectsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about existing Projects within Azure DevOps.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProjects(GetProjectsArgs.builder()
     *             .name("Example Project")
     *             .state("wellFormed")
     *             .build());
     * 
     *         ctx.export("projectId", example.applyValue(getProjectsResult -> getProjectsResult.projects()).stream().map(element -> element.projectId()).collect(toList()));
     *         ctx.export("name", example.applyValue(getProjectsResult -> getProjectsResult.projects()).stream().map(element -> element.name()).collect(toList()));
     *         ctx.export("projectUrl", example.applyValue(getProjectsResult -> getProjectsResult.projects()).stream().map(element -> element.projectUrl()).collect(toList()));
     *         ctx.export("state", example.applyValue(getProjectsResult -> getProjectsResult.projects()).stream().map(element -> element.state()).collect(toList()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Projects - Get](https://docs.microsoft.com/en-us/rest/api/azure/devops/core/projects/get?view=azure-devops-rest-7.0)
     * 
     */
    public static CompletableFuture<GetProjectsResult> getProjectsPlain() {
        return getProjectsPlain(GetProjectsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about existing Projects within Azure DevOps.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProjects(GetProjectsArgs.builder()
     *             .name("Example Project")
     *             .state("wellFormed")
     *             .build());
     * 
     *         ctx.export("projectId", example.applyValue(getProjectsResult -> getProjectsResult.projects()).stream().map(element -> element.projectId()).collect(toList()));
     *         ctx.export("name", example.applyValue(getProjectsResult -> getProjectsResult.projects()).stream().map(element -> element.name()).collect(toList()));
     *         ctx.export("projectUrl", example.applyValue(getProjectsResult -> getProjectsResult.projects()).stream().map(element -> element.projectUrl()).collect(toList()));
     *         ctx.export("state", example.applyValue(getProjectsResult -> getProjectsResult.projects()).stream().map(element -> element.state()).collect(toList()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Projects - Get](https://docs.microsoft.com/en-us/rest/api/azure/devops/core/projects/get?view=azure-devops-rest-7.0)
     * 
     */
    public static Output<GetProjectsResult> getProjects(GetProjectsArgs args) {
        return getProjects(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about existing Projects within Azure DevOps.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProjects(GetProjectsArgs.builder()
     *             .name("Example Project")
     *             .state("wellFormed")
     *             .build());
     * 
     *         ctx.export("projectId", example.applyValue(getProjectsResult -> getProjectsResult.projects()).stream().map(element -> element.projectId()).collect(toList()));
     *         ctx.export("name", example.applyValue(getProjectsResult -> getProjectsResult.projects()).stream().map(element -> element.name()).collect(toList()));
     *         ctx.export("projectUrl", example.applyValue(getProjectsResult -> getProjectsResult.projects()).stream().map(element -> element.projectUrl()).collect(toList()));
     *         ctx.export("state", example.applyValue(getProjectsResult -> getProjectsResult.projects()).stream().map(element -> element.state()).collect(toList()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Projects - Get](https://docs.microsoft.com/en-us/rest/api/azure/devops/core/projects/get?view=azure-devops-rest-7.0)
     * 
     */
    public static CompletableFuture<GetProjectsResult> getProjectsPlain(GetProjectsPlainArgs args) {
        return getProjectsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about existing Projects within Azure DevOps.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProjects(GetProjectsArgs.builder()
     *             .name("Example Project")
     *             .state("wellFormed")
     *             .build());
     * 
     *         ctx.export("projectId", example.applyValue(getProjectsResult -> getProjectsResult.projects()).stream().map(element -> element.projectId()).collect(toList()));
     *         ctx.export("name", example.applyValue(getProjectsResult -> getProjectsResult.projects()).stream().map(element -> element.name()).collect(toList()));
     *         ctx.export("projectUrl", example.applyValue(getProjectsResult -> getProjectsResult.projects()).stream().map(element -> element.projectUrl()).collect(toList()));
     *         ctx.export("state", example.applyValue(getProjectsResult -> getProjectsResult.projects()).stream().map(element -> element.state()).collect(toList()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Projects - Get](https://docs.microsoft.com/en-us/rest/api/azure/devops/core/projects/get?view=azure-devops-rest-7.0)
     * 
     */
    public static Output<GetProjectsResult> getProjects(GetProjectsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azuredevops:index/getProjects:getProjects", TypeShape.of(GetProjectsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about existing Projects within Azure DevOps.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProjects(GetProjectsArgs.builder()
     *             .name("Example Project")
     *             .state("wellFormed")
     *             .build());
     * 
     *         ctx.export("projectId", example.applyValue(getProjectsResult -> getProjectsResult.projects()).stream().map(element -> element.projectId()).collect(toList()));
     *         ctx.export("name", example.applyValue(getProjectsResult -> getProjectsResult.projects()).stream().map(element -> element.name()).collect(toList()));
     *         ctx.export("projectUrl", example.applyValue(getProjectsResult -> getProjectsResult.projects()).stream().map(element -> element.projectUrl()).collect(toList()));
     *         ctx.export("state", example.applyValue(getProjectsResult -> getProjectsResult.projects()).stream().map(element -> element.state()).collect(toList()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Projects - Get](https://docs.microsoft.com/en-us/rest/api/azure/devops/core/projects/get?view=azure-devops-rest-7.0)
     * 
     */
    public static CompletableFuture<GetProjectsResult> getProjectsPlain(GetProjectsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azuredevops:index/getProjects:getProjects", TypeShape.of(GetProjectsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about **multiple** existing Git Repositories within Azure DevOps.
     * To read informations about a **single** Git Repository use the data source `azuredevops.Git`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetRepositoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Example Project")
     *             .build());
     * 
     *         // Load all Git repositories of a project, which are accessible for the current user
     *         final var example-all-repos = AzuredevopsFunctions.getRepositories(GetRepositoriesArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -> getProjectResult.id()))
     *             .includeHidden(true)
     *             .build());
     * 
     *         // Load a specific Git repository by name
     *         final var example-single-repo = AzuredevopsFunctions.getRepositories(GetRepositoriesArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -> getProjectResult.id()))
     *             .name("Example Repository")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Git API](https://docs.microsoft.com/en-us/rest/api/azure/devops/git/?view=azure-devops-rest-7.0)
     * 
     */
    public static Output<GetRepositoriesResult> getRepositories() {
        return getRepositories(GetRepositoriesArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about **multiple** existing Git Repositories within Azure DevOps.
     * To read informations about a **single** Git Repository use the data source `azuredevops.Git`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetRepositoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Example Project")
     *             .build());
     * 
     *         // Load all Git repositories of a project, which are accessible for the current user
     *         final var example-all-repos = AzuredevopsFunctions.getRepositories(GetRepositoriesArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -> getProjectResult.id()))
     *             .includeHidden(true)
     *             .build());
     * 
     *         // Load a specific Git repository by name
     *         final var example-single-repo = AzuredevopsFunctions.getRepositories(GetRepositoriesArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -> getProjectResult.id()))
     *             .name("Example Repository")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Git API](https://docs.microsoft.com/en-us/rest/api/azure/devops/git/?view=azure-devops-rest-7.0)
     * 
     */
    public static CompletableFuture<GetRepositoriesResult> getRepositoriesPlain() {
        return getRepositoriesPlain(GetRepositoriesPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about **multiple** existing Git Repositories within Azure DevOps.
     * To read informations about a **single** Git Repository use the data source `azuredevops.Git`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetRepositoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Example Project")
     *             .build());
     * 
     *         // Load all Git repositories of a project, which are accessible for the current user
     *         final var example-all-repos = AzuredevopsFunctions.getRepositories(GetRepositoriesArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -> getProjectResult.id()))
     *             .includeHidden(true)
     *             .build());
     * 
     *         // Load a specific Git repository by name
     *         final var example-single-repo = AzuredevopsFunctions.getRepositories(GetRepositoriesArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -> getProjectResult.id()))
     *             .name("Example Repository")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Git API](https://docs.microsoft.com/en-us/rest/api/azure/devops/git/?view=azure-devops-rest-7.0)
     * 
     */
    public static Output<GetRepositoriesResult> getRepositories(GetRepositoriesArgs args) {
        return getRepositories(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about **multiple** existing Git Repositories within Azure DevOps.
     * To read informations about a **single** Git Repository use the data source `azuredevops.Git`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetRepositoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Example Project")
     *             .build());
     * 
     *         // Load all Git repositories of a project, which are accessible for the current user
     *         final var example-all-repos = AzuredevopsFunctions.getRepositories(GetRepositoriesArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -> getProjectResult.id()))
     *             .includeHidden(true)
     *             .build());
     * 
     *         // Load a specific Git repository by name
     *         final var example-single-repo = AzuredevopsFunctions.getRepositories(GetRepositoriesArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -> getProjectResult.id()))
     *             .name("Example Repository")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Git API](https://docs.microsoft.com/en-us/rest/api/azure/devops/git/?view=azure-devops-rest-7.0)
     * 
     */
    public static CompletableFuture<GetRepositoriesResult> getRepositoriesPlain(GetRepositoriesPlainArgs args) {
        return getRepositoriesPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about **multiple** existing Git Repositories within Azure DevOps.
     * To read informations about a **single** Git Repository use the data source `azuredevops.Git`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetRepositoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Example Project")
     *             .build());
     * 
     *         // Load all Git repositories of a project, which are accessible for the current user
     *         final var example-all-repos = AzuredevopsFunctions.getRepositories(GetRepositoriesArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -> getProjectResult.id()))
     *             .includeHidden(true)
     *             .build());
     * 
     *         // Load a specific Git repository by name
     *         final var example-single-repo = AzuredevopsFunctions.getRepositories(GetRepositoriesArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -> getProjectResult.id()))
     *             .name("Example Repository")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Git API](https://docs.microsoft.com/en-us/rest/api/azure/devops/git/?view=azure-devops-rest-7.0)
     * 
     */
    public static Output<GetRepositoriesResult> getRepositories(GetRepositoriesArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azuredevops:index/getRepositories:getRepositories", TypeShape.of(GetRepositoriesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about **multiple** existing Git Repositories within Azure DevOps.
     * To read informations about a **single** Git Repository use the data source `azuredevops.Git`
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetRepositoriesArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Example Project")
     *             .build());
     * 
     *         // Load all Git repositories of a project, which are accessible for the current user
     *         final var example-all-repos = AzuredevopsFunctions.getRepositories(GetRepositoriesArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -> getProjectResult.id()))
     *             .includeHidden(true)
     *             .build());
     * 
     *         // Load a specific Git repository by name
     *         final var example-single-repo = AzuredevopsFunctions.getRepositories(GetRepositoriesArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -> getProjectResult.id()))
     *             .name("Example Repository")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Git API](https://docs.microsoft.com/en-us/rest/api/azure/devops/git/?view=azure-devops-rest-7.0)
     * 
     */
    public static CompletableFuture<GetRepositoriesResult> getRepositoriesPlain(GetRepositoriesPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azuredevops:index/getRepositories:getRepositories", TypeShape.of(GetRepositoriesResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing AzureRM service Endpoint.
     * 
     * ## Example Usage
     * 
     * ### By Service Endpoint ID
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetServiceEndpointAzureRMArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var sample = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Sample Project")
     *             .build());
     * 
     *         final var serviceendpoint = AzuredevopsFunctions.getServiceEndpointAzureRM(GetServiceEndpointAzureRMArgs.builder()
     *             .projectId(sample.applyValue(getProjectResult -> getProjectResult.id()))
     *             .serviceEndpointId("00000000-0000-0000-0000-000000000000")
     *             .build());
     * 
     *         ctx.export("serviceEndpointName", serviceendpoint.applyValue(getServiceEndpointAzureRMResult -> getServiceEndpointAzureRMResult.serviceEndpointName()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Service Endpoint Name
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetServiceEndpointAzureRMArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var sample = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Sample Project")
     *             .build());
     * 
     *         final var serviceendpoint = AzuredevopsFunctions.getServiceEndpointAzureRM(GetServiceEndpointAzureRMArgs.builder()
     *             .projectId(sample.applyValue(getProjectResult -> getProjectResult.id()))
     *             .serviceEndpointName("Example-Service-Endpoint")
     *             .build());
     * 
     *         ctx.export("serviceEndpointId", serviceendpoint.applyValue(getServiceEndpointAzureRMResult -> getServiceEndpointAzureRMResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceEndpointAzureRMResult> getServiceEndpointAzureRM(GetServiceEndpointAzureRMArgs args) {
        return getServiceEndpointAzureRM(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing AzureRM service Endpoint.
     * 
     * ## Example Usage
     * 
     * ### By Service Endpoint ID
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetServiceEndpointAzureRMArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var sample = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Sample Project")
     *             .build());
     * 
     *         final var serviceendpoint = AzuredevopsFunctions.getServiceEndpointAzureRM(GetServiceEndpointAzureRMArgs.builder()
     *             .projectId(sample.applyValue(getProjectResult -> getProjectResult.id()))
     *             .serviceEndpointId("00000000-0000-0000-0000-000000000000")
     *             .build());
     * 
     *         ctx.export("serviceEndpointName", serviceendpoint.applyValue(getServiceEndpointAzureRMResult -> getServiceEndpointAzureRMResult.serviceEndpointName()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Service Endpoint Name
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetServiceEndpointAzureRMArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var sample = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Sample Project")
     *             .build());
     * 
     *         final var serviceendpoint = AzuredevopsFunctions.getServiceEndpointAzureRM(GetServiceEndpointAzureRMArgs.builder()
     *             .projectId(sample.applyValue(getProjectResult -> getProjectResult.id()))
     *             .serviceEndpointName("Example-Service-Endpoint")
     *             .build());
     * 
     *         ctx.export("serviceEndpointId", serviceendpoint.applyValue(getServiceEndpointAzureRMResult -> getServiceEndpointAzureRMResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceEndpointAzureRMResult> getServiceEndpointAzureRMPlain(GetServiceEndpointAzureRMPlainArgs args) {
        return getServiceEndpointAzureRMPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing AzureRM service Endpoint.
     * 
     * ## Example Usage
     * 
     * ### By Service Endpoint ID
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetServiceEndpointAzureRMArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var sample = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Sample Project")
     *             .build());
     * 
     *         final var serviceendpoint = AzuredevopsFunctions.getServiceEndpointAzureRM(GetServiceEndpointAzureRMArgs.builder()
     *             .projectId(sample.applyValue(getProjectResult -> getProjectResult.id()))
     *             .serviceEndpointId("00000000-0000-0000-0000-000000000000")
     *             .build());
     * 
     *         ctx.export("serviceEndpointName", serviceendpoint.applyValue(getServiceEndpointAzureRMResult -> getServiceEndpointAzureRMResult.serviceEndpointName()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Service Endpoint Name
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetServiceEndpointAzureRMArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var sample = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Sample Project")
     *             .build());
     * 
     *         final var serviceendpoint = AzuredevopsFunctions.getServiceEndpointAzureRM(GetServiceEndpointAzureRMArgs.builder()
     *             .projectId(sample.applyValue(getProjectResult -> getProjectResult.id()))
     *             .serviceEndpointName("Example-Service-Endpoint")
     *             .build());
     * 
     *         ctx.export("serviceEndpointId", serviceendpoint.applyValue(getServiceEndpointAzureRMResult -> getServiceEndpointAzureRMResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceEndpointAzureRMResult> getServiceEndpointAzureRM(GetServiceEndpointAzureRMArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azuredevops:index/getServiceEndpointAzureRM:getServiceEndpointAzureRM", TypeShape.of(GetServiceEndpointAzureRMResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing AzureRM service Endpoint.
     * 
     * ## Example Usage
     * 
     * ### By Service Endpoint ID
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetServiceEndpointAzureRMArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var sample = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Sample Project")
     *             .build());
     * 
     *         final var serviceendpoint = AzuredevopsFunctions.getServiceEndpointAzureRM(GetServiceEndpointAzureRMArgs.builder()
     *             .projectId(sample.applyValue(getProjectResult -> getProjectResult.id()))
     *             .serviceEndpointId("00000000-0000-0000-0000-000000000000")
     *             .build());
     * 
     *         ctx.export("serviceEndpointName", serviceendpoint.applyValue(getServiceEndpointAzureRMResult -> getServiceEndpointAzureRMResult.serviceEndpointName()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Service Endpoint Name
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetServiceEndpointAzureRMArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var sample = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Sample Project")
     *             .build());
     * 
     *         final var serviceendpoint = AzuredevopsFunctions.getServiceEndpointAzureRM(GetServiceEndpointAzureRMArgs.builder()
     *             .projectId(sample.applyValue(getProjectResult -> getProjectResult.id()))
     *             .serviceEndpointName("Example-Service-Endpoint")
     *             .build());
     * 
     *         ctx.export("serviceEndpointId", serviceendpoint.applyValue(getServiceEndpointAzureRMResult -> getServiceEndpointAzureRMResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceEndpointAzureRMResult> getServiceEndpointAzureRMPlain(GetServiceEndpointAzureRMPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azuredevops:index/getServiceEndpointAzureRM:getServiceEndpointAzureRM", TypeShape.of(GetServiceEndpointAzureRMResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing GitHub service Endpoint.
     * 
     * ## Example Usage
     * 
     * ### By Service Endpoint ID
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetServiceEndpointGithubArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var sample = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Sample Project")
     *             .build());
     * 
     *         final var serviceendpoint = AzuredevopsFunctions.getServiceEndpointGithub(GetServiceEndpointGithubArgs.builder()
     *             .projectId(sample.applyValue(getProjectResult -> getProjectResult.id()))
     *             .serviceEndpointId("00000000-0000-0000-0000-000000000000")
     *             .build());
     * 
     *         ctx.export("serviceEndpointName", serviceendpoint.applyValue(getServiceEndpointGithubResult -> getServiceEndpointGithubResult.serviceEndpointName()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Service Endpoint Name
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetServiceEndpointGithubArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var sample = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Sample Project")
     *             .build());
     * 
     *         final var serviceendpoint = AzuredevopsFunctions.getServiceEndpointGithub(GetServiceEndpointGithubArgs.builder()
     *             .projectId(sample.applyValue(getProjectResult -> getProjectResult.id()))
     *             .serviceEndpointName("Example-Service-Endpoint")
     *             .build());
     * 
     *         ctx.export("serviceEndpointId", serviceendpoint.applyValue(getServiceEndpointGithubResult -> getServiceEndpointGithubResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceEndpointGithubResult> getServiceEndpointGithub(GetServiceEndpointGithubArgs args) {
        return getServiceEndpointGithub(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing GitHub service Endpoint.
     * 
     * ## Example Usage
     * 
     * ### By Service Endpoint ID
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetServiceEndpointGithubArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var sample = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Sample Project")
     *             .build());
     * 
     *         final var serviceendpoint = AzuredevopsFunctions.getServiceEndpointGithub(GetServiceEndpointGithubArgs.builder()
     *             .projectId(sample.applyValue(getProjectResult -> getProjectResult.id()))
     *             .serviceEndpointId("00000000-0000-0000-0000-000000000000")
     *             .build());
     * 
     *         ctx.export("serviceEndpointName", serviceendpoint.applyValue(getServiceEndpointGithubResult -> getServiceEndpointGithubResult.serviceEndpointName()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Service Endpoint Name
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetServiceEndpointGithubArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var sample = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Sample Project")
     *             .build());
     * 
     *         final var serviceendpoint = AzuredevopsFunctions.getServiceEndpointGithub(GetServiceEndpointGithubArgs.builder()
     *             .projectId(sample.applyValue(getProjectResult -> getProjectResult.id()))
     *             .serviceEndpointName("Example-Service-Endpoint")
     *             .build());
     * 
     *         ctx.export("serviceEndpointId", serviceendpoint.applyValue(getServiceEndpointGithubResult -> getServiceEndpointGithubResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceEndpointGithubResult> getServiceEndpointGithubPlain(GetServiceEndpointGithubPlainArgs args) {
        return getServiceEndpointGithubPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing GitHub service Endpoint.
     * 
     * ## Example Usage
     * 
     * ### By Service Endpoint ID
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetServiceEndpointGithubArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var sample = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Sample Project")
     *             .build());
     * 
     *         final var serviceendpoint = AzuredevopsFunctions.getServiceEndpointGithub(GetServiceEndpointGithubArgs.builder()
     *             .projectId(sample.applyValue(getProjectResult -> getProjectResult.id()))
     *             .serviceEndpointId("00000000-0000-0000-0000-000000000000")
     *             .build());
     * 
     *         ctx.export("serviceEndpointName", serviceendpoint.applyValue(getServiceEndpointGithubResult -> getServiceEndpointGithubResult.serviceEndpointName()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Service Endpoint Name
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetServiceEndpointGithubArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var sample = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Sample Project")
     *             .build());
     * 
     *         final var serviceendpoint = AzuredevopsFunctions.getServiceEndpointGithub(GetServiceEndpointGithubArgs.builder()
     *             .projectId(sample.applyValue(getProjectResult -> getProjectResult.id()))
     *             .serviceEndpointName("Example-Service-Endpoint")
     *             .build());
     * 
     *         ctx.export("serviceEndpointId", serviceendpoint.applyValue(getServiceEndpointGithubResult -> getServiceEndpointGithubResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceEndpointGithubResult> getServiceEndpointGithub(GetServiceEndpointGithubArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azuredevops:index/getServiceEndpointGithub:getServiceEndpointGithub", TypeShape.of(GetServiceEndpointGithubResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing GitHub service Endpoint.
     * 
     * ## Example Usage
     * 
     * ### By Service Endpoint ID
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetServiceEndpointGithubArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var sample = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Sample Project")
     *             .build());
     * 
     *         final var serviceendpoint = AzuredevopsFunctions.getServiceEndpointGithub(GetServiceEndpointGithubArgs.builder()
     *             .projectId(sample.applyValue(getProjectResult -> getProjectResult.id()))
     *             .serviceEndpointId("00000000-0000-0000-0000-000000000000")
     *             .build());
     * 
     *         ctx.export("serviceEndpointName", serviceendpoint.applyValue(getServiceEndpointGithubResult -> getServiceEndpointGithubResult.serviceEndpointName()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ### By Service Endpoint Name
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetServiceEndpointGithubArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var sample = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Sample Project")
     *             .build());
     * 
     *         final var serviceendpoint = AzuredevopsFunctions.getServiceEndpointGithub(GetServiceEndpointGithubArgs.builder()
     *             .projectId(sample.applyValue(getProjectResult -> getProjectResult.id()))
     *             .serviceEndpointName("Example-Service-Endpoint")
     *             .build());
     * 
     *         ctx.export("serviceEndpointId", serviceendpoint.applyValue(getServiceEndpointGithubResult -> getServiceEndpointGithubResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceEndpointGithubResult> getServiceEndpointGithubPlain(GetServiceEndpointGithubPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azuredevops:index/getServiceEndpointGithub:getServiceEndpointGithub", TypeShape.of(GetServiceEndpointGithubResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Azure Container Registry Service Endpoint.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetServiceendpointAzurecrArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getServiceendpointAzurecr(GetServiceendpointAzurecrArgs.builder()
     *             .projectId(exampleAzuredevopsProject.id())
     *             .serviceEndpointName("Example Azure Container Registry")
     *             .build());
     * 
     *         ctx.export("serviceEndpointId", example.applyValue(getServiceendpointAzurecrResult -> getServiceendpointAzurecrResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceendpointAzurecrResult> getServiceendpointAzurecr(GetServiceendpointAzurecrArgs args) {
        return getServiceendpointAzurecr(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Azure Container Registry Service Endpoint.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetServiceendpointAzurecrArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getServiceendpointAzurecr(GetServiceendpointAzurecrArgs.builder()
     *             .projectId(exampleAzuredevopsProject.id())
     *             .serviceEndpointName("Example Azure Container Registry")
     *             .build());
     * 
     *         ctx.export("serviceEndpointId", example.applyValue(getServiceendpointAzurecrResult -> getServiceendpointAzurecrResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceendpointAzurecrResult> getServiceendpointAzurecrPlain(GetServiceendpointAzurecrPlainArgs args) {
        return getServiceendpointAzurecrPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Azure Container Registry Service Endpoint.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetServiceendpointAzurecrArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getServiceendpointAzurecr(GetServiceendpointAzurecrArgs.builder()
     *             .projectId(exampleAzuredevopsProject.id())
     *             .serviceEndpointName("Example Azure Container Registry")
     *             .build());
     * 
     *         ctx.export("serviceEndpointId", example.applyValue(getServiceendpointAzurecrResult -> getServiceendpointAzurecrResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceendpointAzurecrResult> getServiceendpointAzurecr(GetServiceendpointAzurecrArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azuredevops:index/getServiceendpointAzurecr:getServiceendpointAzurecr", TypeShape.of(GetServiceendpointAzurecrResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Azure Container Registry Service Endpoint.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetServiceendpointAzurecrArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getServiceendpointAzurecr(GetServiceendpointAzurecrArgs.builder()
     *             .projectId(exampleAzuredevopsProject.id())
     *             .serviceEndpointName("Example Azure Container Registry")
     *             .build());
     * 
     *         ctx.export("serviceEndpointId", example.applyValue(getServiceendpointAzurecrResult -> getServiceendpointAzurecrResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceendpointAzurecrResult> getServiceendpointAzurecrPlain(GetServiceendpointAzurecrPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azuredevops:index/getServiceendpointAzurecr:getServiceendpointAzurecr", TypeShape.of(GetServiceendpointAzurecrResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing NPM Service Endpoint.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetServiceendpointNpmArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getServiceendpointNpm(GetServiceendpointNpmArgs.builder()
     *             .projectId(exampleAzuredevopsProject.id())
     *             .serviceEndpointName("Example npm")
     *             .build());
     * 
     *         ctx.export("serviceEndpointId", example.applyValue(getServiceendpointNpmResult -> getServiceendpointNpmResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceendpointNpmResult> getServiceendpointNpm(GetServiceendpointNpmArgs args) {
        return getServiceendpointNpm(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing NPM Service Endpoint.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetServiceendpointNpmArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getServiceendpointNpm(GetServiceendpointNpmArgs.builder()
     *             .projectId(exampleAzuredevopsProject.id())
     *             .serviceEndpointName("Example npm")
     *             .build());
     * 
     *         ctx.export("serviceEndpointId", example.applyValue(getServiceendpointNpmResult -> getServiceendpointNpmResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceendpointNpmResult> getServiceendpointNpmPlain(GetServiceendpointNpmPlainArgs args) {
        return getServiceendpointNpmPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing NPM Service Endpoint.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetServiceendpointNpmArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getServiceendpointNpm(GetServiceendpointNpmArgs.builder()
     *             .projectId(exampleAzuredevopsProject.id())
     *             .serviceEndpointName("Example npm")
     *             .build());
     * 
     *         ctx.export("serviceEndpointId", example.applyValue(getServiceendpointNpmResult -> getServiceendpointNpmResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceendpointNpmResult> getServiceendpointNpm(GetServiceendpointNpmArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azuredevops:index/getServiceendpointNpm:getServiceendpointNpm", TypeShape.of(GetServiceendpointNpmResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing NPM Service Endpoint.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetServiceendpointNpmArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getServiceendpointNpm(GetServiceendpointNpmArgs.builder()
     *             .projectId(exampleAzuredevopsProject.id())
     *             .serviceEndpointName("Example npm")
     *             .build());
     * 
     *         ctx.export("serviceEndpointId", example.applyValue(getServiceendpointNpmResult -> getServiceendpointNpmResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceendpointNpmResult> getServiceendpointNpmPlain(GetServiceendpointNpmPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azuredevops:index/getServiceendpointNpm:getServiceendpointNpm", TypeShape.of(GetServiceendpointNpmResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Sonar Cloud Service Endpoint.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetServiceendpointSonarcloudArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getServiceendpointSonarcloud(GetServiceendpointSonarcloudArgs.builder()
     *             .projectId(exampleAzuredevopsProject.id())
     *             .serviceEndpointName("Example Sonar Cloud")
     *             .build());
     * 
     *         ctx.export("serviceEndpointId", example.applyValue(getServiceendpointSonarcloudResult -> getServiceendpointSonarcloudResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceendpointSonarcloudResult> getServiceendpointSonarcloud(GetServiceendpointSonarcloudArgs args) {
        return getServiceendpointSonarcloud(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Sonar Cloud Service Endpoint.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetServiceendpointSonarcloudArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getServiceendpointSonarcloud(GetServiceendpointSonarcloudArgs.builder()
     *             .projectId(exampleAzuredevopsProject.id())
     *             .serviceEndpointName("Example Sonar Cloud")
     *             .build());
     * 
     *         ctx.export("serviceEndpointId", example.applyValue(getServiceendpointSonarcloudResult -> getServiceendpointSonarcloudResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceendpointSonarcloudResult> getServiceendpointSonarcloudPlain(GetServiceendpointSonarcloudPlainArgs args) {
        return getServiceendpointSonarcloudPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Sonar Cloud Service Endpoint.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetServiceendpointSonarcloudArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getServiceendpointSonarcloud(GetServiceendpointSonarcloudArgs.builder()
     *             .projectId(exampleAzuredevopsProject.id())
     *             .serviceEndpointName("Example Sonar Cloud")
     *             .build());
     * 
     *         ctx.export("serviceEndpointId", example.applyValue(getServiceendpointSonarcloudResult -> getServiceendpointSonarcloudResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static Output<GetServiceendpointSonarcloudResult> getServiceendpointSonarcloud(GetServiceendpointSonarcloudArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azuredevops:index/getServiceendpointSonarcloud:getServiceendpointSonarcloud", TypeShape.of(GetServiceendpointSonarcloudResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Sonar Cloud Service Endpoint.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetServiceendpointSonarcloudArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getServiceendpointSonarcloud(GetServiceendpointSonarcloudArgs.builder()
     *             .projectId(exampleAzuredevopsProject.id())
     *             .serviceEndpointName("Example Sonar Cloud")
     *             .build());
     * 
     *         ctx.export("serviceEndpointId", example.applyValue(getServiceendpointSonarcloudResult -> getServiceendpointSonarcloudResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     */
    public static CompletableFuture<GetServiceendpointSonarcloudResult> getServiceendpointSonarcloudPlain(GetServiceendpointSonarcloudPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azuredevops:index/getServiceendpointSonarcloud:getServiceendpointSonarcloud", TypeShape.of(GetServiceendpointSonarcloudResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Team in a Project within Azure DevOps.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.Project;
     * import com.pulumi.azuredevops.ProjectArgs;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetTeamArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var exampleProject = new Project("exampleProject", ProjectArgs.builder()
     *             .name("Example Project")
     *             .workItemTemplate("Agile")
     *             .versionControl("Git")
     *             .visibility("private")
     *             .description("Managed by Terraform")
     *             .build());
     * 
     *         final var example = AzuredevopsFunctions.getTeam(GetTeamArgs.builder()
     *             .projectId(exampleProject.id())
     *             .name("Example Project Team")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Teams - Get](https://docs.microsoft.com/en-us/rest/api/azure/devops/core/teams/get?view=azure-devops-rest-7.0)
     * 
     * ## PAT Permissions Required
     * 
     * - **vso.project**:	Grants the ability to read projects and teams.
     * 
     */
    public static Output<GetTeamResult> getTeam(GetTeamArgs args) {
        return getTeam(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Team in a Project within Azure DevOps.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.Project;
     * import com.pulumi.azuredevops.ProjectArgs;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetTeamArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var exampleProject = new Project("exampleProject", ProjectArgs.builder()
     *             .name("Example Project")
     *             .workItemTemplate("Agile")
     *             .versionControl("Git")
     *             .visibility("private")
     *             .description("Managed by Terraform")
     *             .build());
     * 
     *         final var example = AzuredevopsFunctions.getTeam(GetTeamArgs.builder()
     *             .projectId(exampleProject.id())
     *             .name("Example Project Team")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Teams - Get](https://docs.microsoft.com/en-us/rest/api/azure/devops/core/teams/get?view=azure-devops-rest-7.0)
     * 
     * ## PAT Permissions Required
     * 
     * - **vso.project**:	Grants the ability to read projects and teams.
     * 
     */
    public static CompletableFuture<GetTeamResult> getTeamPlain(GetTeamPlainArgs args) {
        return getTeamPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing Team in a Project within Azure DevOps.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.Project;
     * import com.pulumi.azuredevops.ProjectArgs;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetTeamArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var exampleProject = new Project("exampleProject", ProjectArgs.builder()
     *             .name("Example Project")
     *             .workItemTemplate("Agile")
     *             .versionControl("Git")
     *             .visibility("private")
     *             .description("Managed by Terraform")
     *             .build());
     * 
     *         final var example = AzuredevopsFunctions.getTeam(GetTeamArgs.builder()
     *             .projectId(exampleProject.id())
     *             .name("Example Project Team")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Teams - Get](https://docs.microsoft.com/en-us/rest/api/azure/devops/core/teams/get?view=azure-devops-rest-7.0)
     * 
     * ## PAT Permissions Required
     * 
     * - **vso.project**:	Grants the ability to read projects and teams.
     * 
     */
    public static Output<GetTeamResult> getTeam(GetTeamArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azuredevops:index/getTeam:getTeam", TypeShape.of(GetTeamResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing Team in a Project within Azure DevOps.
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.Project;
     * import com.pulumi.azuredevops.ProjectArgs;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetTeamArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         var exampleProject = new Project("exampleProject", ProjectArgs.builder()
     *             .name("Example Project")
     *             .workItemTemplate("Agile")
     *             .versionControl("Git")
     *             .visibility("private")
     *             .description("Managed by Terraform")
     *             .build());
     * 
     *         final var example = AzuredevopsFunctions.getTeam(GetTeamArgs.builder()
     *             .projectId(exampleProject.id())
     *             .name("Example Project Team")
     *             .build());
     * 
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Teams - Get](https://docs.microsoft.com/en-us/rest/api/azure/devops/core/teams/get?view=azure-devops-rest-7.0)
     * 
     * ## PAT Permissions Required
     * 
     * - **vso.project**:	Grants the ability to read projects and teams.
     * 
     */
    public static CompletableFuture<GetTeamResult> getTeamPlain(GetTeamPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azuredevops:index/getTeam:getTeam", TypeShape.of(GetTeamResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about existing Teams in a Project or globally within an Azure DevOps organization
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetTeamsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getTeams();
     * 
     *         ctx.export("projectId", example.applyValue(getTeamsResult -> getTeamsResult.teams()).stream().map(element -> element.projectId()).collect(toList()));
     *         ctx.export("name", example.applyValue(getTeamsResult -> getTeamsResult.teams()).stream().map(element -> element.name()).collect(toList()));
     *         ctx.export("alladministrators", example.applyValue(getTeamsResult -> getTeamsResult.teams()).stream().map(element -> element.administrators()).collect(toList()));
     *         ctx.export("administrators", example.applyValue(getTeamsResult -> getTeamsResult.teams()).stream().map(element -> element.members()).collect(toList()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Teams - Get](https://docs.microsoft.com/en-us/rest/api/azure/devops/core/teams/get?view=azure-devops-rest-7.0)
     * 
     * ## PAT Permissions Required
     * 
     * - **vso.project**:	Grants the ability to read projects and teams.
     * 
     */
    public static Output<GetTeamsResult> getTeams() {
        return getTeams(GetTeamsArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about existing Teams in a Project or globally within an Azure DevOps organization
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetTeamsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getTeams();
     * 
     *         ctx.export("projectId", example.applyValue(getTeamsResult -> getTeamsResult.teams()).stream().map(element -> element.projectId()).collect(toList()));
     *         ctx.export("name", example.applyValue(getTeamsResult -> getTeamsResult.teams()).stream().map(element -> element.name()).collect(toList()));
     *         ctx.export("alladministrators", example.applyValue(getTeamsResult -> getTeamsResult.teams()).stream().map(element -> element.administrators()).collect(toList()));
     *         ctx.export("administrators", example.applyValue(getTeamsResult -> getTeamsResult.teams()).stream().map(element -> element.members()).collect(toList()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Teams - Get](https://docs.microsoft.com/en-us/rest/api/azure/devops/core/teams/get?view=azure-devops-rest-7.0)
     * 
     * ## PAT Permissions Required
     * 
     * - **vso.project**:	Grants the ability to read projects and teams.
     * 
     */
    public static CompletableFuture<GetTeamsResult> getTeamsPlain() {
        return getTeamsPlain(GetTeamsPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about existing Teams in a Project or globally within an Azure DevOps organization
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetTeamsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getTeams();
     * 
     *         ctx.export("projectId", example.applyValue(getTeamsResult -> getTeamsResult.teams()).stream().map(element -> element.projectId()).collect(toList()));
     *         ctx.export("name", example.applyValue(getTeamsResult -> getTeamsResult.teams()).stream().map(element -> element.name()).collect(toList()));
     *         ctx.export("alladministrators", example.applyValue(getTeamsResult -> getTeamsResult.teams()).stream().map(element -> element.administrators()).collect(toList()));
     *         ctx.export("administrators", example.applyValue(getTeamsResult -> getTeamsResult.teams()).stream().map(element -> element.members()).collect(toList()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Teams - Get](https://docs.microsoft.com/en-us/rest/api/azure/devops/core/teams/get?view=azure-devops-rest-7.0)
     * 
     * ## PAT Permissions Required
     * 
     * - **vso.project**:	Grants the ability to read projects and teams.
     * 
     */
    public static Output<GetTeamsResult> getTeams(GetTeamsArgs args) {
        return getTeams(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about existing Teams in a Project or globally within an Azure DevOps organization
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetTeamsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getTeams();
     * 
     *         ctx.export("projectId", example.applyValue(getTeamsResult -> getTeamsResult.teams()).stream().map(element -> element.projectId()).collect(toList()));
     *         ctx.export("name", example.applyValue(getTeamsResult -> getTeamsResult.teams()).stream().map(element -> element.name()).collect(toList()));
     *         ctx.export("alladministrators", example.applyValue(getTeamsResult -> getTeamsResult.teams()).stream().map(element -> element.administrators()).collect(toList()));
     *         ctx.export("administrators", example.applyValue(getTeamsResult -> getTeamsResult.teams()).stream().map(element -> element.members()).collect(toList()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Teams - Get](https://docs.microsoft.com/en-us/rest/api/azure/devops/core/teams/get?view=azure-devops-rest-7.0)
     * 
     * ## PAT Permissions Required
     * 
     * - **vso.project**:	Grants the ability to read projects and teams.
     * 
     */
    public static CompletableFuture<GetTeamsResult> getTeamsPlain(GetTeamsPlainArgs args) {
        return getTeamsPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about existing Teams in a Project or globally within an Azure DevOps organization
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetTeamsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getTeams();
     * 
     *         ctx.export("projectId", example.applyValue(getTeamsResult -> getTeamsResult.teams()).stream().map(element -> element.projectId()).collect(toList()));
     *         ctx.export("name", example.applyValue(getTeamsResult -> getTeamsResult.teams()).stream().map(element -> element.name()).collect(toList()));
     *         ctx.export("alladministrators", example.applyValue(getTeamsResult -> getTeamsResult.teams()).stream().map(element -> element.administrators()).collect(toList()));
     *         ctx.export("administrators", example.applyValue(getTeamsResult -> getTeamsResult.teams()).stream().map(element -> element.members()).collect(toList()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Teams - Get](https://docs.microsoft.com/en-us/rest/api/azure/devops/core/teams/get?view=azure-devops-rest-7.0)
     * 
     * ## PAT Permissions Required
     * 
     * - **vso.project**:	Grants the ability to read projects and teams.
     * 
     */
    public static Output<GetTeamsResult> getTeams(GetTeamsArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azuredevops:index/getTeams:getTeams", TypeShape.of(GetTeamsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about existing Teams in a Project or globally within an Azure DevOps organization
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetTeamsArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getTeams();
     * 
     *         ctx.export("projectId", example.applyValue(getTeamsResult -> getTeamsResult.teams()).stream().map(element -> element.projectId()).collect(toList()));
     *         ctx.export("name", example.applyValue(getTeamsResult -> getTeamsResult.teams()).stream().map(element -> element.name()).collect(toList()));
     *         ctx.export("alladministrators", example.applyValue(getTeamsResult -> getTeamsResult.teams()).stream().map(element -> element.administrators()).collect(toList()));
     *         ctx.export("administrators", example.applyValue(getTeamsResult -> getTeamsResult.teams()).stream().map(element -> element.members()).collect(toList()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Teams - Get](https://docs.microsoft.com/en-us/rest/api/azure/devops/core/teams/get?view=azure-devops-rest-7.0)
     * 
     * ## PAT Permissions Required
     * 
     * - **vso.project**:	Grants the ability to read projects and teams.
     * 
     */
    public static CompletableFuture<GetTeamsResult> getTeamsPlain(GetTeamsPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azuredevops:index/getTeams:getTeams", TypeShape.of(GetTeamsResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing users within Azure DevOps.
     * 
     */
    public static Output<GetUsersResult> getUsers() {
        return getUsers(GetUsersArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing users within Azure DevOps.
     * 
     */
    public static CompletableFuture<GetUsersResult> getUsersPlain() {
        return getUsersPlain(GetUsersPlainArgs.Empty, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing users within Azure DevOps.
     * 
     */
    public static Output<GetUsersResult> getUsers(GetUsersArgs args) {
        return getUsers(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing users within Azure DevOps.
     * 
     */
    public static CompletableFuture<GetUsersResult> getUsersPlain(GetUsersPlainArgs args) {
        return getUsersPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about an existing users within Azure DevOps.
     * 
     */
    public static Output<GetUsersResult> getUsers(GetUsersArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azuredevops:index/getUsers:getUsers", TypeShape.of(GetUsersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about an existing users within Azure DevOps.
     * 
     */
    public static CompletableFuture<GetUsersResult> getUsersPlain(GetUsersPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azuredevops:index/getUsers:getUsers", TypeShape.of(GetUsersResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about existing Variable Groups within Azure DevOps.
     * 
     * &gt; **Note:** Secret values are masked by service and cannot be obtained through API. [Set secret variables](https://docs.microsoft.com/en-us/azure/devops/pipelines/process/variables?view=azure-devops&amp;tabs=yaml%2Cbatch#secret-variables)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetVariableGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Example Project")
     *             .build());
     * 
     *         final var exampleGetVariableGroup = AzuredevopsFunctions.getVariableGroup(GetVariableGroupArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -> getProjectResult.id()))
     *             .name("Example Variable Group")
     *             .build());
     * 
     *         ctx.export("id", exampleGetVariableGroup.applyValue(getVariableGroupResult -> getVariableGroupResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Variable Groups](https://docs.microsoft.com/en-us/rest/api/azure/devops/distributedtask/variablegroups?view=azure-devops-rest-7.0)
     * 
     */
    public static Output<GetVariableGroupResult> getVariableGroup(GetVariableGroupArgs args) {
        return getVariableGroup(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about existing Variable Groups within Azure DevOps.
     * 
     * &gt; **Note:** Secret values are masked by service and cannot be obtained through API. [Set secret variables](https://docs.microsoft.com/en-us/azure/devops/pipelines/process/variables?view=azure-devops&amp;tabs=yaml%2Cbatch#secret-variables)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetVariableGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Example Project")
     *             .build());
     * 
     *         final var exampleGetVariableGroup = AzuredevopsFunctions.getVariableGroup(GetVariableGroupArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -> getProjectResult.id()))
     *             .name("Example Variable Group")
     *             .build());
     * 
     *         ctx.export("id", exampleGetVariableGroup.applyValue(getVariableGroupResult -> getVariableGroupResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Variable Groups](https://docs.microsoft.com/en-us/rest/api/azure/devops/distributedtask/variablegroups?view=azure-devops-rest-7.0)
     * 
     */
    public static CompletableFuture<GetVariableGroupResult> getVariableGroupPlain(GetVariableGroupPlainArgs args) {
        return getVariableGroupPlain(args, InvokeOptions.Empty);
    }
    /**
     * Use this data source to access information about existing Variable Groups within Azure DevOps.
     * 
     * &gt; **Note:** Secret values are masked by service and cannot be obtained through API. [Set secret variables](https://docs.microsoft.com/en-us/azure/devops/pipelines/process/variables?view=azure-devops&amp;tabs=yaml%2Cbatch#secret-variables)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetVariableGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Example Project")
     *             .build());
     * 
     *         final var exampleGetVariableGroup = AzuredevopsFunctions.getVariableGroup(GetVariableGroupArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -> getProjectResult.id()))
     *             .name("Example Variable Group")
     *             .build());
     * 
     *         ctx.export("id", exampleGetVariableGroup.applyValue(getVariableGroupResult -> getVariableGroupResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Variable Groups](https://docs.microsoft.com/en-us/rest/api/azure/devops/distributedtask/variablegroups?view=azure-devops-rest-7.0)
     * 
     */
    public static Output<GetVariableGroupResult> getVariableGroup(GetVariableGroupArgs args, InvokeOptions options) {
        return Deployment.getInstance().invoke("azuredevops:index/getVariableGroup:getVariableGroup", TypeShape.of(GetVariableGroupResult.class), args, Utilities.withVersion(options));
    }
    /**
     * Use this data source to access information about existing Variable Groups within Azure DevOps.
     * 
     * &gt; **Note:** Secret values are masked by service and cannot be obtained through API. [Set secret variables](https://docs.microsoft.com/en-us/azure/devops/pipelines/process/variables?view=azure-devops&amp;tabs=yaml%2Cbatch#secret-variables)
     * 
     * ## Example Usage
     * 
     * &lt;!--Start PulumiCodeChooser --&gt;
     * <pre>
     * {@code
     * package generated_program;
     * 
     * import com.pulumi.Context;
     * import com.pulumi.Pulumi;
     * import com.pulumi.core.Output;
     * import com.pulumi.azuredevops.AzuredevopsFunctions;
     * import com.pulumi.azuredevops.inputs.GetProjectArgs;
     * import com.pulumi.azuredevops.inputs.GetVariableGroupArgs;
     * import java.util.List;
     * import java.util.ArrayList;
     * import java.util.Map;
     * import java.io.File;
     * import java.nio.file.Files;
     * import java.nio.file.Paths;
     * 
     * public class App {
     *     public static void main(String[] args) {
     *         Pulumi.run(App::stack);
     *     }
     * 
     *     public static void stack(Context ctx) {
     *         final var example = AzuredevopsFunctions.getProject(GetProjectArgs.builder()
     *             .name("Example Project")
     *             .build());
     * 
     *         final var exampleGetVariableGroup = AzuredevopsFunctions.getVariableGroup(GetVariableGroupArgs.builder()
     *             .projectId(example.applyValue(getProjectResult -> getProjectResult.id()))
     *             .name("Example Variable Group")
     *             .build());
     * 
     *         ctx.export("id", exampleGetVariableGroup.applyValue(getVariableGroupResult -> getVariableGroupResult.id()));
     *     }
     * }
     * }
     * </pre>
     * &lt;!--End PulumiCodeChooser --&gt;
     * 
     * ## Relevant Links
     * 
     * - [Azure DevOps Service REST API 7.0 - Variable Groups](https://docs.microsoft.com/en-us/rest/api/azure/devops/distributedtask/variablegroups?view=azure-devops-rest-7.0)
     * 
     */
    public static CompletableFuture<GetVariableGroupResult> getVariableGroupPlain(GetVariableGroupPlainArgs args, InvokeOptions options) {
        return Deployment.getInstance().invokeAsync("azuredevops:index/getVariableGroup:getVariableGroup", TypeShape.of(GetVariableGroupResult.class), args, Utilities.withVersion(options));
    }
}
