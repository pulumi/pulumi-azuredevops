// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuredevops;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import com.pulumi.exceptions.MissingRequiredPropertyException;
import java.lang.Boolean;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class VariableGroupPermissionsArgs extends com.pulumi.resources.ResourceArgs {

    public static final VariableGroupPermissionsArgs Empty = new VariableGroupPermissionsArgs();

    @Import(name="permissions", required=true)
    private Output<Map<String,String>> permissions;

    public Output<Map<String,String>> permissions() {
        return this.permissions;
    }

    @Import(name="principal", required=true)
    private Output<String> principal;

    public Output<String> principal() {
        return this.principal;
    }

    @Import(name="projectId", required=true)
    private Output<String> projectId;

    public Output<String> projectId() {
        return this.projectId;
    }

    @Import(name="replace")
    private @Nullable Output<Boolean> replace;

    public Optional<Output<Boolean>> replace() {
        return Optional.ofNullable(this.replace);
    }

    @Import(name="variableGroupId", required=true)
    private Output<String> variableGroupId;

    public Output<String> variableGroupId() {
        return this.variableGroupId;
    }

    private VariableGroupPermissionsArgs() {}

    private VariableGroupPermissionsArgs(VariableGroupPermissionsArgs $) {
        this.permissions = $.permissions;
        this.principal = $.principal;
        this.projectId = $.projectId;
        this.replace = $.replace;
        this.variableGroupId = $.variableGroupId;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(VariableGroupPermissionsArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private VariableGroupPermissionsArgs $;

        public Builder() {
            $ = new VariableGroupPermissionsArgs();
        }

        public Builder(VariableGroupPermissionsArgs defaults) {
            $ = new VariableGroupPermissionsArgs(Objects.requireNonNull(defaults));
        }

        public Builder permissions(Output<Map<String,String>> permissions) {
            $.permissions = permissions;
            return this;
        }

        public Builder permissions(Map<String,String> permissions) {
            return permissions(Output.of(permissions));
        }

        public Builder principal(Output<String> principal) {
            $.principal = principal;
            return this;
        }

        public Builder principal(String principal) {
            return principal(Output.of(principal));
        }

        public Builder projectId(Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        public Builder replace(@Nullable Output<Boolean> replace) {
            $.replace = replace;
            return this;
        }

        public Builder replace(Boolean replace) {
            return replace(Output.of(replace));
        }

        public Builder variableGroupId(Output<String> variableGroupId) {
            $.variableGroupId = variableGroupId;
            return this;
        }

        public Builder variableGroupId(String variableGroupId) {
            return variableGroupId(Output.of(variableGroupId));
        }

        public VariableGroupPermissionsArgs build() {
            if ($.permissions == null) {
                throw new MissingRequiredPropertyException("VariableGroupPermissionsArgs", "permissions");
            }
            if ($.principal == null) {
                throw new MissingRequiredPropertyException("VariableGroupPermissionsArgs", "principal");
            }
            if ($.projectId == null) {
                throw new MissingRequiredPropertyException("VariableGroupPermissionsArgs", "projectId");
            }
            if ($.variableGroupId == null) {
                throw new MissingRequiredPropertyException("VariableGroupPermissionsArgs", "variableGroupId");
            }
            return $;
        }
    }

}
