// *** WARNING: this file was generated by pulumi-java-gen. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

package com.pulumi.azuredevops;

import com.pulumi.core.Output;
import com.pulumi.core.annotations.Import;
import java.lang.String;
import java.util.Map;
import java.util.Objects;
import java.util.Optional;
import javax.annotation.Nullable;


public final class ServiceendpointGcpTerraformArgs extends com.pulumi.resources.ResourceArgs {

    public static final ServiceendpointGcpTerraformArgs Empty = new ServiceendpointGcpTerraformArgs();

    @Import(name="authorization")
    private @Nullable Output<Map<String,String>> authorization;

    public Optional<Output<Map<String,String>>> authorization() {
        return Optional.ofNullable(this.authorization);
    }

    /**
     * The client email field in the JSON key file for creating the JSON Web Token.
     * 
     */
    @Import(name="clientEmail")
    private @Nullable Output<String> clientEmail;

    /**
     * @return The client email field in the JSON key file for creating the JSON Web Token.
     * 
     */
    public Optional<Output<String>> clientEmail() {
        return Optional.ofNullable(this.clientEmail);
    }

    @Import(name="description")
    private @Nullable Output<String> description;

    public Optional<Output<String>> description() {
        return Optional.ofNullable(this.description);
    }

    /**
     * GCP project associated with the Service Connection.
     * 
     */
    @Import(name="gcpProjectId", required=true)
    private Output<String> gcpProjectId;

    /**
     * @return GCP project associated with the Service Connection.
     * 
     */
    public Output<String> gcpProjectId() {
        return this.gcpProjectId;
    }

    /**
     * The client email field in the JSON key file for creating the JSON Web Token.
     * 
     */
    @Import(name="privateKey", required=true)
    private Output<String> privateKey;

    /**
     * @return The client email field in the JSON key file for creating the JSON Web Token.
     * 
     */
    public Output<String> privateKey() {
        return this.privateKey;
    }

    /**
     * The ID of the project.
     * 
     */
    @Import(name="projectId", required=true)
    private Output<String> projectId;

    /**
     * @return The ID of the project.
     * 
     */
    public Output<String> projectId() {
        return this.projectId;
    }

    /**
     * Scope to be provided.
     * 
     */
    @Import(name="scope")
    private @Nullable Output<String> scope;

    /**
     * @return Scope to be provided.
     * 
     */
    public Optional<Output<String>> scope() {
        return Optional.ofNullable(this.scope);
    }

    /**
     * The Service Endpoint name.
     * 
     */
    @Import(name="serviceEndpointName", required=true)
    private Output<String> serviceEndpointName;

    /**
     * @return The Service Endpoint name.
     * 
     */
    public Output<String> serviceEndpointName() {
        return this.serviceEndpointName;
    }

    /**
     * The token uri field in the JSON key file for creating the JSON Web Token.
     * 
     */
    @Import(name="tokenUri", required=true)
    private Output<String> tokenUri;

    /**
     * @return The token uri field in the JSON key file for creating the JSON Web Token.
     * 
     */
    public Output<String> tokenUri() {
        return this.tokenUri;
    }

    private ServiceendpointGcpTerraformArgs() {}

    private ServiceendpointGcpTerraformArgs(ServiceendpointGcpTerraformArgs $) {
        this.authorization = $.authorization;
        this.clientEmail = $.clientEmail;
        this.description = $.description;
        this.gcpProjectId = $.gcpProjectId;
        this.privateKey = $.privateKey;
        this.projectId = $.projectId;
        this.scope = $.scope;
        this.serviceEndpointName = $.serviceEndpointName;
        this.tokenUri = $.tokenUri;
    }

    public static Builder builder() {
        return new Builder();
    }
    public static Builder builder(ServiceendpointGcpTerraformArgs defaults) {
        return new Builder(defaults);
    }

    public static final class Builder {
        private ServiceendpointGcpTerraformArgs $;

        public Builder() {
            $ = new ServiceendpointGcpTerraformArgs();
        }

        public Builder(ServiceendpointGcpTerraformArgs defaults) {
            $ = new ServiceendpointGcpTerraformArgs(Objects.requireNonNull(defaults));
        }

        public Builder authorization(@Nullable Output<Map<String,String>> authorization) {
            $.authorization = authorization;
            return this;
        }

        public Builder authorization(Map<String,String> authorization) {
            return authorization(Output.of(authorization));
        }

        /**
         * @param clientEmail The client email field in the JSON key file for creating the JSON Web Token.
         * 
         * @return builder
         * 
         */
        public Builder clientEmail(@Nullable Output<String> clientEmail) {
            $.clientEmail = clientEmail;
            return this;
        }

        /**
         * @param clientEmail The client email field in the JSON key file for creating the JSON Web Token.
         * 
         * @return builder
         * 
         */
        public Builder clientEmail(String clientEmail) {
            return clientEmail(Output.of(clientEmail));
        }

        public Builder description(@Nullable Output<String> description) {
            $.description = description;
            return this;
        }

        public Builder description(String description) {
            return description(Output.of(description));
        }

        /**
         * @param gcpProjectId GCP project associated with the Service Connection.
         * 
         * @return builder
         * 
         */
        public Builder gcpProjectId(Output<String> gcpProjectId) {
            $.gcpProjectId = gcpProjectId;
            return this;
        }

        /**
         * @param gcpProjectId GCP project associated with the Service Connection.
         * 
         * @return builder
         * 
         */
        public Builder gcpProjectId(String gcpProjectId) {
            return gcpProjectId(Output.of(gcpProjectId));
        }

        /**
         * @param privateKey The client email field in the JSON key file for creating the JSON Web Token.
         * 
         * @return builder
         * 
         */
        public Builder privateKey(Output<String> privateKey) {
            $.privateKey = privateKey;
            return this;
        }

        /**
         * @param privateKey The client email field in the JSON key file for creating the JSON Web Token.
         * 
         * @return builder
         * 
         */
        public Builder privateKey(String privateKey) {
            return privateKey(Output.of(privateKey));
        }

        /**
         * @param projectId The ID of the project.
         * 
         * @return builder
         * 
         */
        public Builder projectId(Output<String> projectId) {
            $.projectId = projectId;
            return this;
        }

        /**
         * @param projectId The ID of the project.
         * 
         * @return builder
         * 
         */
        public Builder projectId(String projectId) {
            return projectId(Output.of(projectId));
        }

        /**
         * @param scope Scope to be provided.
         * 
         * @return builder
         * 
         */
        public Builder scope(@Nullable Output<String> scope) {
            $.scope = scope;
            return this;
        }

        /**
         * @param scope Scope to be provided.
         * 
         * @return builder
         * 
         */
        public Builder scope(String scope) {
            return scope(Output.of(scope));
        }

        /**
         * @param serviceEndpointName The Service Endpoint name.
         * 
         * @return builder
         * 
         */
        public Builder serviceEndpointName(Output<String> serviceEndpointName) {
            $.serviceEndpointName = serviceEndpointName;
            return this;
        }

        /**
         * @param serviceEndpointName The Service Endpoint name.
         * 
         * @return builder
         * 
         */
        public Builder serviceEndpointName(String serviceEndpointName) {
            return serviceEndpointName(Output.of(serviceEndpointName));
        }

        /**
         * @param tokenUri The token uri field in the JSON key file for creating the JSON Web Token.
         * 
         * @return builder
         * 
         */
        public Builder tokenUri(Output<String> tokenUri) {
            $.tokenUri = tokenUri;
            return this;
        }

        /**
         * @param tokenUri The token uri field in the JSON key file for creating the JSON Web Token.
         * 
         * @return builder
         * 
         */
        public Builder tokenUri(String tokenUri) {
            return tokenUri(Output.of(tokenUri));
        }

        public ServiceendpointGcpTerraformArgs build() {
            $.gcpProjectId = Objects.requireNonNull($.gcpProjectId, "expected parameter 'gcpProjectId' to be non-null");
            $.privateKey = Objects.requireNonNull($.privateKey, "expected parameter 'privateKey' to be non-null");
            $.projectId = Objects.requireNonNull($.projectId, "expected parameter 'projectId' to be non-null");
            $.serviceEndpointName = Objects.requireNonNull($.serviceEndpointName, "expected parameter 'serviceEndpointName' to be non-null");
            $.tokenUri = Objects.requireNonNull($.tokenUri, "expected parameter 'tokenUri' to be non-null");
            return $;
        }
    }

}
