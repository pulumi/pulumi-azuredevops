// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Manages a Rest API check on a resource within Azure DevOps.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azuredevops from "@pulumi/azuredevops";
 *
 * const example = new azuredevops.Project("example", {name: "Example Project"});
 * const exampleServiceEndpointGeneric = new azuredevops.ServiceEndpointGeneric("example", {
 *     projectId: example.id,
 *     serverUrl: "https://some-server.example.com",
 *     serviceEndpointName: "Example Generic",
 *     username: "username",
 *     password: "password",
 *     description: "Managed by Pulumi",
 * });
 * const exampleAzure = new azuredevops.ServiceEndpointGeneric("example_azure", {
 *     projectId: example.id,
 *     serverUrl: "https://dev.azure.com/",
 *     serviceEndpointName: "Example Generic Azure",
 *     username: "username",
 *     password: "dummy",
 * });
 * const exampleVariableGroup = new azuredevops.VariableGroup("example", {
 *     projectId: example.id,
 *     name: "Example Variable Group",
 *     allowAccess: true,
 *     variables: [{
 *         name: "FOO",
 *         value: "BAR",
 *     }],
 * });
 * const exampleCheckRestApi = new azuredevops.CheckRestApi("example", {
 *     projectId: example.id,
 *     targetResourceId: exampleServiceEndpointGeneric.id,
 *     targetResourceType: "endpoint",
 *     displayName: "Example REST API Check",
 *     connectedServiceNameSelector: "connectedServiceName",
 *     connectedServiceName: exampleAzure.serviceEndpointName,
 *     method: "POST",
 *     headers: "{\"contentType\":\"application/json\"}",
 *     body: "{\"params\":\"value\"}",
 *     completionEvent: "ApiResponse",
 *     successCriteria: "eq(root['status'], '200')",
 *     urlSuffix: "user/1",
 *     retryInterval: 4000,
 *     variableGroupName: exampleVariableGroup.name,
 *     timeout: 40000,
 * });
 * ```
 *
 * ## Relevant Links
 *
 * - [Define approvals and checks](https://learn.microsoft.com/en-us/azure/devops/pipelines/process/approvals?view=azure-devops&tabs=check-pass)
 *
 * ## Import
 *
 * Importing this resource is not supported.
 */
export class CheckRestApi extends pulumi.CustomResource {
    /**
     * Get an existing CheckRestApi resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: CheckRestApiState, opts?: pulumi.CustomResourceOptions): CheckRestApi {
        return new CheckRestApi(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azuredevops:index/checkRestApi:CheckRestApi';

    /**
     * Returns true if the given object is an instance of CheckRestApi.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is CheckRestApi {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === CheckRestApi.__pulumiType;
    }

    /**
     * The Rest API request body.
     */
    public readonly body!: pulumi.Output<string | undefined>;
    /**
     * The completion event of the Rest API call. Possible values: `Callback`, `ApiResponse`. Defaults to `Callback`.
     */
    public readonly completionEvent!: pulumi.Output<string | undefined>;
    /**
     * The name of the Service Connection.
     */
    public readonly connectedServiceName!: pulumi.Output<string>;
    /**
     * The type of the Service Connection used to invoke the REST API. Possible values: `connectedServiceName`(**Generic** type service connection) and `connectedServiceNameARM`(**Azure Resource Manager** type service connection).
     */
    public readonly connectedServiceNameSelector!: pulumi.Output<string>;
    /**
     * The Name of the Rest API check.
     */
    public readonly displayName!: pulumi.Output<string>;
    /**
     * The headers of the request in JSON format.
     */
    public readonly headers!: pulumi.Output<string | undefined>;
    /**
     * The HTTP method of the request. Possible values: `OPTIONS`, `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `TRACE`, `PATCH`
     */
    public readonly method!: pulumi.Output<string>;
    /**
     * The ID of the project. Changing this forces a new resource to be created.
     */
    public readonly projectId!: pulumi.Output<string>;
    /**
     * The time between evaluations (minutes). 
     *
     * ~>**NOTE** 1. The retry times should less them 10 based on the timeout. For example: `timeout` is `4000` then `retryInterval` should be `0` or no less then `400`.
     * <br>2. `retryInterval` is not required when `completion_event=Callback`.
     */
    public readonly retryInterval!: pulumi.Output<number | undefined>;
    /**
     * The Criteria which defines when to pass the task. No criteria means response content does not influence the result.
     *
     * ~>**NOTE** `successCriteria` is used when `completion_event=ApiResponse`
     */
    public readonly successCriteria!: pulumi.Output<string | undefined>;
    /**
     * The ID of the resource being protected by the check. Changing this forces a new resource to be created
     */
    public readonly targetResourceId!: pulumi.Output<string>;
    /**
     * The type of resource being protected by the check. Possible values: `endpoint`, `environment`, `queue`, `repository`, `securefile`, `variablegroup`. Changing this forces a new resource to be created.
     */
    public readonly targetResourceType!: pulumi.Output<string>;
    /**
     * The timeout in minutes for the Rest API check. Defaults to `1440`.
     */
    public readonly timeout!: pulumi.Output<number | undefined>;
    /**
     * The URL suffix and parameters.
     */
    public readonly urlSuffix!: pulumi.Output<string | undefined>;
    /**
     * The name of the Variable Group.
     */
    public readonly variableGroupName!: pulumi.Output<string | undefined>;
    /**
     * The version of the Rest API check.
     */
    public /*out*/ readonly version!: pulumi.Output<number>;

    /**
     * Create a CheckRestApi resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: CheckRestApiArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: CheckRestApiArgs | CheckRestApiState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as CheckRestApiState | undefined;
            resourceInputs["body"] = state ? state.body : undefined;
            resourceInputs["completionEvent"] = state ? state.completionEvent : undefined;
            resourceInputs["connectedServiceName"] = state ? state.connectedServiceName : undefined;
            resourceInputs["connectedServiceNameSelector"] = state ? state.connectedServiceNameSelector : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["headers"] = state ? state.headers : undefined;
            resourceInputs["method"] = state ? state.method : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["retryInterval"] = state ? state.retryInterval : undefined;
            resourceInputs["successCriteria"] = state ? state.successCriteria : undefined;
            resourceInputs["targetResourceId"] = state ? state.targetResourceId : undefined;
            resourceInputs["targetResourceType"] = state ? state.targetResourceType : undefined;
            resourceInputs["timeout"] = state ? state.timeout : undefined;
            resourceInputs["urlSuffix"] = state ? state.urlSuffix : undefined;
            resourceInputs["variableGroupName"] = state ? state.variableGroupName : undefined;
            resourceInputs["version"] = state ? state.version : undefined;
        } else {
            const args = argsOrState as CheckRestApiArgs | undefined;
            if ((!args || args.connectedServiceName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectedServiceName'");
            }
            if ((!args || args.connectedServiceNameSelector === undefined) && !opts.urn) {
                throw new Error("Missing required property 'connectedServiceNameSelector'");
            }
            if ((!args || args.displayName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'displayName'");
            }
            if ((!args || args.method === undefined) && !opts.urn) {
                throw new Error("Missing required property 'method'");
            }
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            if ((!args || args.targetResourceId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetResourceId'");
            }
            if ((!args || args.targetResourceType === undefined) && !opts.urn) {
                throw new Error("Missing required property 'targetResourceType'");
            }
            resourceInputs["body"] = args ? args.body : undefined;
            resourceInputs["completionEvent"] = args ? args.completionEvent : undefined;
            resourceInputs["connectedServiceName"] = args ? args.connectedServiceName : undefined;
            resourceInputs["connectedServiceNameSelector"] = args ? args.connectedServiceNameSelector : undefined;
            resourceInputs["displayName"] = args ? args.displayName : undefined;
            resourceInputs["headers"] = args ? args.headers : undefined;
            resourceInputs["method"] = args ? args.method : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["retryInterval"] = args ? args.retryInterval : undefined;
            resourceInputs["successCriteria"] = args ? args.successCriteria : undefined;
            resourceInputs["targetResourceId"] = args ? args.targetResourceId : undefined;
            resourceInputs["targetResourceType"] = args ? args.targetResourceType : undefined;
            resourceInputs["timeout"] = args ? args.timeout : undefined;
            resourceInputs["urlSuffix"] = args ? args.urlSuffix : undefined;
            resourceInputs["variableGroupName"] = args ? args.variableGroupName : undefined;
            resourceInputs["version"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(CheckRestApi.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering CheckRestApi resources.
 */
export interface CheckRestApiState {
    /**
     * The Rest API request body.
     */
    body?: pulumi.Input<string>;
    /**
     * The completion event of the Rest API call. Possible values: `Callback`, `ApiResponse`. Defaults to `Callback`.
     */
    completionEvent?: pulumi.Input<string>;
    /**
     * The name of the Service Connection.
     */
    connectedServiceName?: pulumi.Input<string>;
    /**
     * The type of the Service Connection used to invoke the REST API. Possible values: `connectedServiceName`(**Generic** type service connection) and `connectedServiceNameARM`(**Azure Resource Manager** type service connection).
     */
    connectedServiceNameSelector?: pulumi.Input<string>;
    /**
     * The Name of the Rest API check.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The headers of the request in JSON format.
     */
    headers?: pulumi.Input<string>;
    /**
     * The HTTP method of the request. Possible values: `OPTIONS`, `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `TRACE`, `PATCH`
     */
    method?: pulumi.Input<string>;
    /**
     * The ID of the project. Changing this forces a new resource to be created.
     */
    projectId?: pulumi.Input<string>;
    /**
     * The time between evaluations (minutes). 
     *
     * ~>**NOTE** 1. The retry times should less them 10 based on the timeout. For example: `timeout` is `4000` then `retryInterval` should be `0` or no less then `400`.
     * <br>2. `retryInterval` is not required when `completion_event=Callback`.
     */
    retryInterval?: pulumi.Input<number>;
    /**
     * The Criteria which defines when to pass the task. No criteria means response content does not influence the result.
     *
     * ~>**NOTE** `successCriteria` is used when `completion_event=ApiResponse`
     */
    successCriteria?: pulumi.Input<string>;
    /**
     * The ID of the resource being protected by the check. Changing this forces a new resource to be created
     */
    targetResourceId?: pulumi.Input<string>;
    /**
     * The type of resource being protected by the check. Possible values: `endpoint`, `environment`, `queue`, `repository`, `securefile`, `variablegroup`. Changing this forces a new resource to be created.
     */
    targetResourceType?: pulumi.Input<string>;
    /**
     * The timeout in minutes for the Rest API check. Defaults to `1440`.
     */
    timeout?: pulumi.Input<number>;
    /**
     * The URL suffix and parameters.
     */
    urlSuffix?: pulumi.Input<string>;
    /**
     * The name of the Variable Group.
     */
    variableGroupName?: pulumi.Input<string>;
    /**
     * The version of the Rest API check.
     */
    version?: pulumi.Input<number>;
}

/**
 * The set of arguments for constructing a CheckRestApi resource.
 */
export interface CheckRestApiArgs {
    /**
     * The Rest API request body.
     */
    body?: pulumi.Input<string>;
    /**
     * The completion event of the Rest API call. Possible values: `Callback`, `ApiResponse`. Defaults to `Callback`.
     */
    completionEvent?: pulumi.Input<string>;
    /**
     * The name of the Service Connection.
     */
    connectedServiceName: pulumi.Input<string>;
    /**
     * The type of the Service Connection used to invoke the REST API. Possible values: `connectedServiceName`(**Generic** type service connection) and `connectedServiceNameARM`(**Azure Resource Manager** type service connection).
     */
    connectedServiceNameSelector: pulumi.Input<string>;
    /**
     * The Name of the Rest API check.
     */
    displayName: pulumi.Input<string>;
    /**
     * The headers of the request in JSON format.
     */
    headers?: pulumi.Input<string>;
    /**
     * The HTTP method of the request. Possible values: `OPTIONS`, `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `TRACE`, `PATCH`
     */
    method: pulumi.Input<string>;
    /**
     * The ID of the project. Changing this forces a new resource to be created.
     */
    projectId: pulumi.Input<string>;
    /**
     * The time between evaluations (minutes). 
     *
     * ~>**NOTE** 1. The retry times should less them 10 based on the timeout. For example: `timeout` is `4000` then `retryInterval` should be `0` or no less then `400`.
     * <br>2. `retryInterval` is not required when `completion_event=Callback`.
     */
    retryInterval?: pulumi.Input<number>;
    /**
     * The Criteria which defines when to pass the task. No criteria means response content does not influence the result.
     *
     * ~>**NOTE** `successCriteria` is used when `completion_event=ApiResponse`
     */
    successCriteria?: pulumi.Input<string>;
    /**
     * The ID of the resource being protected by the check. Changing this forces a new resource to be created
     */
    targetResourceId: pulumi.Input<string>;
    /**
     * The type of resource being protected by the check. Possible values: `endpoint`, `environment`, `queue`, `repository`, `securefile`, `variablegroup`. Changing this forces a new resource to be created.
     */
    targetResourceType: pulumi.Input<string>;
    /**
     * The timeout in minutes for the Rest API check. Defaults to `1440`.
     */
    timeout?: pulumi.Input<number>;
    /**
     * The URL suffix and parameters.
     */
    urlSuffix?: pulumi.Input<string>;
    /**
     * The name of the Variable Group.
     */
    variableGroupName?: pulumi.Input<string>;
}
