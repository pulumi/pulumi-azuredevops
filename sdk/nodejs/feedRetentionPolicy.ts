// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## layout: "azuredevops"
 *
 * ***
 * ## page_title: "AzureDevops: azuredevops.FeedRetentionPolicy"
 *
 * description: |-
 *   Manages the Feed Retention Policy within Azure DevOps organization.
 * ---
 *
 * # azuredevops.FeedRetentionPolicy
 *
 * Manages the Feed Retention Policy within Azure DevOps.
 *
 * ## Example Usage
 *
 * ### Project Feed
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azuredevops from "@pulumi/azuredevops";
 *
 * const example = new azuredevops.Project("example", {
 *     name: "Example Project",
 *     visibility: "private",
 *     versionControl: "Git",
 *     workItemTemplate: "Agile",
 *     description: "Managed by Pulumi",
 * });
 * const exampleFeed = new azuredevops.Feed("example", {
 *     name: "ExampleFeed",
 *     projectId: example.id,
 * });
 * const exampleFeedRetentionPolicy = new azuredevops.FeedRetentionPolicy("example", {
 *     projectId: example.id,
 *     feedId: exampleFeed.id,
 *     countLimit: 20,
 *     daysToKeepRecentlyDownloadedPackages: 30,
 * });
 * ```
 *
 * ### Organization Feed
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azuredevops from "@pulumi/azuredevops";
 *
 * const example = new azuredevops.Feed("example", {name: "examplefeed"});
 * const exampleFeedRetentionPolicy = new azuredevops.FeedRetentionPolicy("example", {
 *     feedId: example.id,
 *     countLimit: 20,
 *     daysToKeepRecentlyDownloadedPackages: 30,
 * });
 * ```
 *
 * ## Relevant Links
 *
 * - [Azure DevOps Service REST API 7.0 - Feed Management](https://learn.microsoft.com/en-us/rest/api/azure/devops/artifacts/feed-management?view=azure-devops-rest-7.0)
 *
 * ## Import
 *
 * Azure DevOps Feed Retention Policy can be imported using the Project ID and Feed ID or Feed ID e.g.:
 *
 * ```sh
 * $ pulumi import azuredevops:index/feedRetentionPolicy:FeedRetentionPolicy example 00000000-0000-0000-0000-000000000000/00000000-0000-0000-0000-000000000000
 * ```
 *
 * or
 *
 * ```sh
 * $ pulumi import azuredevops:index/feedRetentionPolicy:FeedRetentionPolicy example 00000000-0000-0000-0000-000000000000
 * ```
 */
export class FeedRetentionPolicy extends pulumi.CustomResource {
    /**
     * Get an existing FeedRetentionPolicy resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FeedRetentionPolicyState, opts?: pulumi.CustomResourceOptions): FeedRetentionPolicy {
        return new FeedRetentionPolicy(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azuredevops:index/feedRetentionPolicy:FeedRetentionPolicy';

    /**
     * Returns true if the given object is an instance of FeedRetentionPolicy.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is FeedRetentionPolicy {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === FeedRetentionPolicy.__pulumiType;
    }

    /**
     * The maximum number of versions per package.
     */
    public readonly countLimit!: pulumi.Output<number>;
    /**
     * The days to keep recently downloaded packages.
     */
    public readonly daysToKeepRecentlyDownloadedPackages!: pulumi.Output<number>;
    /**
     * The ID of the Feed. Changing this forces a new resource to be created.
     */
    public readonly feedId!: pulumi.Output<string>;
    /**
     * The ID of the Project. If not specified, Feed will be created at the organization level. Changing this forces a new resource to be created.
     */
    public readonly projectId!: pulumi.Output<string | undefined>;

    /**
     * Create a FeedRetentionPolicy resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: FeedRetentionPolicyArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FeedRetentionPolicyArgs | FeedRetentionPolicyState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FeedRetentionPolicyState | undefined;
            resourceInputs["countLimit"] = state ? state.countLimit : undefined;
            resourceInputs["daysToKeepRecentlyDownloadedPackages"] = state ? state.daysToKeepRecentlyDownloadedPackages : undefined;
            resourceInputs["feedId"] = state ? state.feedId : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
        } else {
            const args = argsOrState as FeedRetentionPolicyArgs | undefined;
            if ((!args || args.countLimit === undefined) && !opts.urn) {
                throw new Error("Missing required property 'countLimit'");
            }
            if ((!args || args.daysToKeepRecentlyDownloadedPackages === undefined) && !opts.urn) {
                throw new Error("Missing required property 'daysToKeepRecentlyDownloadedPackages'");
            }
            if ((!args || args.feedId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'feedId'");
            }
            resourceInputs["countLimit"] = args ? args.countLimit : undefined;
            resourceInputs["daysToKeepRecentlyDownloadedPackages"] = args ? args.daysToKeepRecentlyDownloadedPackages : undefined;
            resourceInputs["feedId"] = args ? args.feedId : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(FeedRetentionPolicy.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering FeedRetentionPolicy resources.
 */
export interface FeedRetentionPolicyState {
    /**
     * The maximum number of versions per package.
     */
    countLimit?: pulumi.Input<number>;
    /**
     * The days to keep recently downloaded packages.
     */
    daysToKeepRecentlyDownloadedPackages?: pulumi.Input<number>;
    /**
     * The ID of the Feed. Changing this forces a new resource to be created.
     */
    feedId?: pulumi.Input<string>;
    /**
     * The ID of the Project. If not specified, Feed will be created at the organization level. Changing this forces a new resource to be created.
     */
    projectId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a FeedRetentionPolicy resource.
 */
export interface FeedRetentionPolicyArgs {
    /**
     * The maximum number of versions per package.
     */
    countLimit: pulumi.Input<number>;
    /**
     * The days to keep recently downloaded packages.
     */
    daysToKeepRecentlyDownloadedPackages: pulumi.Input<number>;
    /**
     * The ID of the Feed. Changing this forces a new resource to be created.
     */
    feedId: pulumi.Input<string>;
    /**
     * The ID of the Project. If not specified, Feed will be created at the organization level. Changing this forces a new resource to be created.
     */
    projectId?: pulumi.Input<string>;
}
