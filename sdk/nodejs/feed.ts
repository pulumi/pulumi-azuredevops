// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "./types/input";
import * as outputs from "./types/output";
import * as utilities from "./utilities";

/**
 * Manages Feed within Azure DevOps organization.
 *
 * ## Example Usage
 *
 * ### Create Feed in the scope of whole Organization
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azuredevops from "@pulumi/azuredevops";
 *
 * const example = new azuredevops.Feed("example", {name: "examplefeed"});
 * ```
 *
 * ### Create Feed in the scope of a Project
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azuredevops from "@pulumi/azuredevops";
 *
 * const example = new azuredevops.Project("example", {
 *     name: "Example Project",
 *     visibility: "private",
 *     versionControl: "Git",
 *     workItemTemplate: "Agile",
 *     description: "Managed by Pulumi",
 * });
 * const exampleFeed = new azuredevops.Feed("example", {
 *     name: "examplefeed",
 *     projectId: example.id,
 * });
 * ```
 *
 * ### Create Feed with Soft Delete
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azuredevops from "@pulumi/azuredevops";
 *
 * const example = new azuredevops.Feed("example", {
 *     name: "examplefeed",
 *     features: [{
 *         permanentDelete: false,
 *     }],
 * });
 * ```
 *
 * ## Relevant Links
 *
 * - [Azure DevOps Service REST API 7.0 - Feed Management](https://learn.microsoft.com/en-us/rest/api/azure/devops/artifacts/feed-management?view=azure-devops-rest-7.0)
 *
 * ## Import
 *
 * Azure DevOps Feed can be imported using the Project ID and Feed ID or Feed ID e.g.:
 *
 * ```sh
 * $ pulumi import azuredevops:index/feed:Feed example 00000000-0000-0000-0000-000000000000/00000000-0000-0000-0000-000000000000
 * ```
 *
 * or
 *
 * ```sh
 * $ pulumi import azuredevops:index/feed:Feed example 00000000-0000-0000-0000-000000000000
 * ```
 */
export class Feed extends pulumi.CustomResource {
    /**
     * Get an existing Feed resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: FeedState, opts?: pulumi.CustomResourceOptions): Feed {
        return new Feed(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azuredevops:index/feed:Feed';

    /**
     * Returns true if the given object is an instance of Feed.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Feed {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Feed.__pulumiType;
    }

    /**
     * A `features` blocks as documented below.
     *
     * > **Note** *Because of ADO limitations feed name can be **reserved** for up to 15 minutes after permanent delete of the feed*
     */
    declare public readonly features: pulumi.Output<outputs.FeedFeature[] | undefined>;
    /**
     * The name of the Feed.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The ID of the Project Feed is created in. If not specified, feed will be created at the organization level.
     */
    declare public readonly projectId: pulumi.Output<string | undefined>;

    /**
     * Create a Feed resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args?: FeedArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: FeedArgs | FeedState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as FeedState | undefined;
            resourceInputs["features"] = state?.features;
            resourceInputs["name"] = state?.name;
            resourceInputs["projectId"] = state?.projectId;
        } else {
            const args = argsOrState as FeedArgs | undefined;
            resourceInputs["features"] = args?.features;
            resourceInputs["name"] = args?.name;
            resourceInputs["projectId"] = args?.projectId;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Feed.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Feed resources.
 */
export interface FeedState {
    /**
     * A `features` blocks as documented below.
     *
     * > **Note** *Because of ADO limitations feed name can be **reserved** for up to 15 minutes after permanent delete of the feed*
     */
    features?: pulumi.Input<pulumi.Input<inputs.FeedFeature>[]>;
    /**
     * The name of the Feed.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the Project Feed is created in. If not specified, feed will be created at the organization level.
     */
    projectId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Feed resource.
 */
export interface FeedArgs {
    /**
     * A `features` blocks as documented below.
     *
     * > **Note** *Because of ADO limitations feed name can be **reserved** for up to 15 minutes after permanent delete of the feed*
     */
    features?: pulumi.Input<pulumi.Input<inputs.FeedFeature>[]>;
    /**
     * The name of the Feed.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the Project Feed is created in. If not specified, feed will be created at the organization level.
     */
    projectId?: pulumi.Input<string>;
}
