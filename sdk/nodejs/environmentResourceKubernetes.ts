// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Manages a Kubernetes Resource for an Environment.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azuredevops from "@pulumi/azuredevops";
 *
 * const example = new azuredevops.Project("example", {
 *     name: "Example Project",
 *     workItemTemplate: "Agile",
 *     versionControl: "Git",
 *     visibility: "private",
 *     description: "Managed by Pulumi",
 * });
 * const exampleEnvironment = new azuredevops.Environment("example", {
 *     projectId: example.id,
 *     name: "Example Environment",
 * });
 * const exampleServiceEndpointKubernetes = new azuredevops.ServiceEndpointKubernetes("example", {
 *     projectId: example.id,
 *     serviceEndpointName: "Example Kubernetes",
 *     apiserverUrl: "https://sample-kubernetes-cluster.hcp.westeurope.azmk8s.io",
 *     authorizationType: "AzureSubscription",
 *     azureSubscriptions: [{
 *         subscriptionId: "00000000-0000-0000-0000-000000000000",
 *         subscriptionName: "Example",
 *         tenantId: "00000000-0000-0000-0000-000000000000",
 *         resourcegroupId: "example-rg",
 *         namespace: "default",
 *         clusterName: "example-aks",
 *     }],
 * });
 * const exampleEnvironmentResourceKubernetes = new azuredevops.EnvironmentResourceKubernetes("example", {
 *     projectId: example.id,
 *     environmentId: exampleEnvironment.id,
 *     serviceEndpointId: exampleServiceEndpointKubernetes.id,
 *     name: "Example",
 *     namespace: "default",
 *     clusterName: "example-aks",
 *     tags: [
 *         "tag1",
 *         "tag2",
 *     ],
 * });
 * ```
 *
 * ## Relevant Links
 *
 * * [Azure DevOps Service REST API 6.0 - Kubernetes](https://docs.microsoft.com/en-us/rest/api/azure/devops/distributedtask/kubernetes?view=azure-devops-rest-6.0)
 *
 * ## Import
 *
 * The resource does not support import.
 */
export class EnvironmentResourceKubernetes extends pulumi.CustomResource {
    /**
     * Get an existing EnvironmentResourceKubernetes resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: EnvironmentResourceKubernetesState, opts?: pulumi.CustomResourceOptions): EnvironmentResourceKubernetes {
        return new EnvironmentResourceKubernetes(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azuredevops:index/environmentResourceKubernetes:EnvironmentResourceKubernetes';

    /**
     * Returns true if the given object is an instance of EnvironmentResourceKubernetes.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is EnvironmentResourceKubernetes {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === EnvironmentResourceKubernetes.__pulumiType;
    }

    /**
     * A cluster name for the Kubernetes Resource.
     */
    declare public readonly clusterName: pulumi.Output<string | undefined>;
    /**
     * The ID of the environment under which to create the Kubernetes Resource.
     */
    declare public readonly environmentId: pulumi.Output<number>;
    /**
     * The name for the Kubernetes Resource.
     */
    declare public readonly name: pulumi.Output<string>;
    /**
     * The namespace for the Kubernetes Resource.
     */
    declare public readonly namespace: pulumi.Output<string>;
    /**
     * The ID of the project.
     */
    declare public readonly projectId: pulumi.Output<string>;
    /**
     * The ID of the service endpoint to associate with the Kubernetes Resource.
     */
    declare public readonly serviceEndpointId: pulumi.Output<string>;
    /**
     * A set of tags for the Kubernetes Resource.
     */
    declare public readonly tags: pulumi.Output<string[] | undefined>;

    /**
     * Create a EnvironmentResourceKubernetes resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: EnvironmentResourceKubernetesArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: EnvironmentResourceKubernetesArgs | EnvironmentResourceKubernetesState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as EnvironmentResourceKubernetesState | undefined;
            resourceInputs["clusterName"] = state?.clusterName;
            resourceInputs["environmentId"] = state?.environmentId;
            resourceInputs["name"] = state?.name;
            resourceInputs["namespace"] = state?.namespace;
            resourceInputs["projectId"] = state?.projectId;
            resourceInputs["serviceEndpointId"] = state?.serviceEndpointId;
            resourceInputs["tags"] = state?.tags;
        } else {
            const args = argsOrState as EnvironmentResourceKubernetesArgs | undefined;
            if (args?.environmentId === undefined && !opts.urn) {
                throw new Error("Missing required property 'environmentId'");
            }
            if (args?.namespace === undefined && !opts.urn) {
                throw new Error("Missing required property 'namespace'");
            }
            if (args?.projectId === undefined && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            if (args?.serviceEndpointId === undefined && !opts.urn) {
                throw new Error("Missing required property 'serviceEndpointId'");
            }
            resourceInputs["clusterName"] = args?.clusterName;
            resourceInputs["environmentId"] = args?.environmentId;
            resourceInputs["name"] = args?.name;
            resourceInputs["namespace"] = args?.namespace;
            resourceInputs["projectId"] = args?.projectId;
            resourceInputs["serviceEndpointId"] = args?.serviceEndpointId;
            resourceInputs["tags"] = args?.tags;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(EnvironmentResourceKubernetes.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering EnvironmentResourceKubernetes resources.
 */
export interface EnvironmentResourceKubernetesState {
    /**
     * A cluster name for the Kubernetes Resource.
     */
    clusterName?: pulumi.Input<string>;
    /**
     * The ID of the environment under which to create the Kubernetes Resource.
     */
    environmentId?: pulumi.Input<number>;
    /**
     * The name for the Kubernetes Resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The namespace for the Kubernetes Resource.
     */
    namespace?: pulumi.Input<string>;
    /**
     * The ID of the project.
     */
    projectId?: pulumi.Input<string>;
    /**
     * The ID of the service endpoint to associate with the Kubernetes Resource.
     */
    serviceEndpointId?: pulumi.Input<string>;
    /**
     * A set of tags for the Kubernetes Resource.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
}

/**
 * The set of arguments for constructing a EnvironmentResourceKubernetes resource.
 */
export interface EnvironmentResourceKubernetesArgs {
    /**
     * A cluster name for the Kubernetes Resource.
     */
    clusterName?: pulumi.Input<string>;
    /**
     * The ID of the environment under which to create the Kubernetes Resource.
     */
    environmentId: pulumi.Input<number>;
    /**
     * The name for the Kubernetes Resource.
     */
    name?: pulumi.Input<string>;
    /**
     * The namespace for the Kubernetes Resource.
     */
    namespace: pulumi.Input<string>;
    /**
     * The ID of the project.
     */
    projectId: pulumi.Input<string>;
    /**
     * The ID of the service endpoint to associate with the Kubernetes Resource.
     */
    serviceEndpointId: pulumi.Input<string>;
    /**
     * A set of tags for the Kubernetes Resource.
     */
    tags?: pulumi.Input<pulumi.Input<string>[]>;
}
