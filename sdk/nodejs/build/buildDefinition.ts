// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import { input as inputs, output as outputs } from "../types";
import * as utilities from "../utilities";

/**
 * @deprecated azuredevops.build.BuildDefinition has been deprecated in favor of azuredevops.BuildDefinition
 */
export class BuildDefinition extends pulumi.CustomResource {
    /**
     * Get an existing BuildDefinition resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: BuildDefinitionState, opts?: pulumi.CustomResourceOptions): BuildDefinition {
        pulumi.log.warn("BuildDefinition is deprecated: azuredevops.build.BuildDefinition has been deprecated in favor of azuredevops.BuildDefinition")
        return new BuildDefinition(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azuredevops:Build/buildDefinition:BuildDefinition';

    /**
     * Returns true if the given object is an instance of BuildDefinition.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is BuildDefinition {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === BuildDefinition.__pulumiType;
    }

    public readonly agentPoolName!: pulumi.Output<string | undefined>;
    public readonly ciTrigger!: pulumi.Output<outputs.Build.BuildDefinitionCiTrigger | undefined>;
    public readonly name!: pulumi.Output<string>;
    public readonly path!: pulumi.Output<string | undefined>;
    public readonly projectId!: pulumi.Output<string>;
    public readonly pullRequestTrigger!: pulumi.Output<outputs.Build.BuildDefinitionPullRequestTrigger | undefined>;
    public readonly repository!: pulumi.Output<outputs.Build.BuildDefinitionRepository>;
    public /*out*/ readonly revision!: pulumi.Output<number>;
    public readonly schedules!: pulumi.Output<outputs.Build.BuildDefinitionSchedule[] | undefined>;
    public readonly variableGroups!: pulumi.Output<number[] | undefined>;
    public readonly variables!: pulumi.Output<outputs.Build.BuildDefinitionVariable[] | undefined>;

    /**
     * Create a BuildDefinition resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated azuredevops.build.BuildDefinition has been deprecated in favor of azuredevops.BuildDefinition */
    constructor(name: string, args: BuildDefinitionArgs, opts?: pulumi.CustomResourceOptions)
    /** @deprecated azuredevops.build.BuildDefinition has been deprecated in favor of azuredevops.BuildDefinition */
    constructor(name: string, argsOrState?: BuildDefinitionArgs | BuildDefinitionState, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("BuildDefinition is deprecated: azuredevops.build.BuildDefinition has been deprecated in favor of azuredevops.BuildDefinition")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as BuildDefinitionState | undefined;
            resourceInputs["agentPoolName"] = state ? state.agentPoolName : undefined;
            resourceInputs["ciTrigger"] = state ? state.ciTrigger : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["path"] = state ? state.path : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["pullRequestTrigger"] = state ? state.pullRequestTrigger : undefined;
            resourceInputs["repository"] = state ? state.repository : undefined;
            resourceInputs["revision"] = state ? state.revision : undefined;
            resourceInputs["schedules"] = state ? state.schedules : undefined;
            resourceInputs["variableGroups"] = state ? state.variableGroups : undefined;
            resourceInputs["variables"] = state ? state.variables : undefined;
        } else {
            const args = argsOrState as BuildDefinitionArgs | undefined;
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            if ((!args || args.repository === undefined) && !opts.urn) {
                throw new Error("Missing required property 'repository'");
            }
            resourceInputs["agentPoolName"] = args ? args.agentPoolName : undefined;
            resourceInputs["ciTrigger"] = args ? args.ciTrigger : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["path"] = args ? args.path : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["pullRequestTrigger"] = args ? args.pullRequestTrigger : undefined;
            resourceInputs["repository"] = args ? args.repository : undefined;
            resourceInputs["schedules"] = args ? args.schedules : undefined;
            resourceInputs["variableGroups"] = args ? args.variableGroups : undefined;
            resourceInputs["variables"] = args ? args.variables : undefined;
            resourceInputs["revision"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(BuildDefinition.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering BuildDefinition resources.
 */
export interface BuildDefinitionState {
    agentPoolName?: pulumi.Input<string>;
    ciTrigger?: pulumi.Input<inputs.Build.BuildDefinitionCiTrigger>;
    name?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    projectId?: pulumi.Input<string>;
    pullRequestTrigger?: pulumi.Input<inputs.Build.BuildDefinitionPullRequestTrigger>;
    repository?: pulumi.Input<inputs.Build.BuildDefinitionRepository>;
    revision?: pulumi.Input<number>;
    schedules?: pulumi.Input<pulumi.Input<inputs.Build.BuildDefinitionSchedule>[]>;
    variableGroups?: pulumi.Input<pulumi.Input<number>[]>;
    variables?: pulumi.Input<pulumi.Input<inputs.Build.BuildDefinitionVariable>[]>;
}

/**
 * The set of arguments for constructing a BuildDefinition resource.
 */
export interface BuildDefinitionArgs {
    agentPoolName?: pulumi.Input<string>;
    ciTrigger?: pulumi.Input<inputs.Build.BuildDefinitionCiTrigger>;
    name?: pulumi.Input<string>;
    path?: pulumi.Input<string>;
    projectId: pulumi.Input<string>;
    pullRequestTrigger?: pulumi.Input<inputs.Build.BuildDefinitionPullRequestTrigger>;
    repository: pulumi.Input<inputs.Build.BuildDefinitionRepository>;
    schedules?: pulumi.Input<pulumi.Input<inputs.Build.BuildDefinitionSchedule>[]>;
    variableGroups?: pulumi.Input<pulumi.Input<number>[]>;
    variables?: pulumi.Input<pulumi.Input<inputs.Build.BuildDefinitionVariable>[]>;
}
