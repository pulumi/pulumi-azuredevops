// *** WARNING: this file was generated by pulumi-language-nodejs. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

declare var exports: any;
const __config = new pulumi.Config("azuredevops");

/**
 * List of auxiliary Tenant IDs required for multi-tenancy and cross-tenant scenarios.
 */
export declare const auxiliaryTenantIds: string[] | undefined;
Object.defineProperty(exports, "auxiliaryTenantIds", {
    get() {
        return __config.getObject<string[]>("auxiliaryTenantIds");
    },
    enumerable: true,
});

/**
 * Base64 encoded certificate to use to authenticate to the service principal.
 */
export declare const clientCertificate: string | undefined;
Object.defineProperty(exports, "clientCertificate", {
    get() {
        return __config.get("clientCertificate");
    },
    enumerable: true,
});

/**
 * Password for a client certificate password.
 */
export declare const clientCertificatePassword: string | undefined;
Object.defineProperty(exports, "clientCertificatePassword", {
    get() {
        return __config.get("clientCertificatePassword");
    },
    enumerable: true,
});

/**
 * Path to a certificate to use to authenticate to the service principal.
 */
export declare const clientCertificatePath: string | undefined;
Object.defineProperty(exports, "clientCertificatePath", {
    get() {
        return __config.get("clientCertificatePath");
    },
    enumerable: true,
});

/**
 * The service principal client id which should be used for AAD auth.
 */
export declare const clientId: string | undefined;
Object.defineProperty(exports, "clientId", {
    get() {
        return __config.get("clientId");
    },
    enumerable: true,
});

/**
 * The path to a file containing the Client ID which should be used.
 */
export declare const clientIdFilePath: string | undefined;
Object.defineProperty(exports, "clientIdFilePath", {
    get() {
        return __config.get("clientIdFilePath");
    },
    enumerable: true,
});

/**
 * Client secret for authenticating to  a service principal.
 */
export declare const clientSecret: string | undefined;
Object.defineProperty(exports, "clientSecret", {
    get() {
        return __config.get("clientSecret");
    },
    enumerable: true,
});

/**
 * Path to a file containing a client secret for authenticating to  a service principal.
 */
export declare const clientSecretPath: string | undefined;
Object.defineProperty(exports, "clientSecretPath", {
    get() {
        return __config.get("clientSecretPath");
    },
    enumerable: true,
});

/**
 * The Azure Pipelines Service Connection ID to use for authentication.
 */
export declare const oidcAzureServiceConnectionId: string | undefined;
Object.defineProperty(exports, "oidcAzureServiceConnectionId", {
    get() {
        return __config.get("oidcAzureServiceConnectionId");
    },
    enumerable: true,
});

/**
 * The bearer token for the request to the OIDC provider. For use when authenticating as a Service Principal using OpenID Connect.
 */
export declare const oidcRequestToken: string | undefined;
Object.defineProperty(exports, "oidcRequestToken", {
    get() {
        return __config.get("oidcRequestToken");
    },
    enumerable: true,
});

/**
 * The URL for the OIDC provider from which to request an ID token. For use when authenticating as a Service Principal using OpenID Connect.
 */
export declare const oidcRequestUrl: string | undefined;
Object.defineProperty(exports, "oidcRequestUrl", {
    get() {
        return __config.get("oidcRequestUrl");
    },
    enumerable: true,
});

/**
 * OIDC token to authenticate as a service principal.
 */
export declare const oidcToken: string | undefined;
Object.defineProperty(exports, "oidcToken", {
    get() {
        return __config.get("oidcToken");
    },
    enumerable: true,
});

/**
 * OIDC token from file to authenticate as a service principal.
 */
export declare const oidcTokenFilePath: string | undefined;
Object.defineProperty(exports, "oidcTokenFilePath", {
    get() {
        return __config.get("oidcTokenFilePath");
    },
    enumerable: true,
});

/**
 * The url of the Azure DevOps instance which should be used.
 */
export declare const orgServiceUrl: string | undefined;
Object.defineProperty(exports, "orgServiceUrl", {
    get() {
        return __config.get("orgServiceUrl") ?? utilities.getEnv("AZDO_ORG_SERVICE_URL");
    },
    enumerable: true,
});

/**
 * The personal access token which should be used.
 */
export declare const personalAccessToken: string | undefined;
Object.defineProperty(exports, "personalAccessToken", {
    get() {
        return __config.get("personalAccessToken");
    },
    enumerable: true,
});

/**
 * The service principal tenant id which should be used for AAD auth.
 */
export declare const tenantId: string | undefined;
Object.defineProperty(exports, "tenantId", {
    get() {
        return __config.get("tenantId");
    },
    enumerable: true,
});

/**
 * Use Azure CLI to authenticate. Defaults to `true`.
 */
export declare const useCli: boolean | undefined;
Object.defineProperty(exports, "useCli", {
    get() {
        return __config.getObject<boolean>("useCli");
    },
    enumerable: true,
});

/**
 * Use an Azure Managed Service Identity. Defaults to `false`.
 */
export declare const useMsi: boolean | undefined;
Object.defineProperty(exports, "useMsi", {
    get() {
        return __config.getObject<boolean>("useMsi");
    },
    enumerable: true,
});

/**
 * Use an OIDC token to authenticate to a service principal. Defaults to `false`.
 */
export declare const useOidc: boolean | undefined;
Object.defineProperty(exports, "useOidc", {
    get() {
        return __config.getObject<boolean>("useOidc");
    },
    enumerable: true,
});

