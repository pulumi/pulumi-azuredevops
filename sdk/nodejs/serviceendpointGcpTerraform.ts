// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azuredevops from "@pulumi/azuredevops";
 *
 * const example = new azuredevops.Project("example", {
 *     name: "Example Project",
 *     visibility: "private",
 *     versionControl: "Git",
 *     workItemTemplate: "Agile",
 *     description: "Managed by Terraform",
 * });
 * const exampleServiceendpointGcpTerraform = new azuredevops.ServiceendpointGcpTerraform("example", {
 *     projectId: example.id,
 *     tokenUri: "https://oauth2.example.com/token",
 *     clientEmail: "gcp-sa-example@example.iam.gserviceaccount.com",
 *     privateKey: "0000000000000000000000000000000000000",
 *     serviceEndpointName: "Example GCP Terraform extension",
 *     gcpProjectId: "Example GCP Project",
 *     description: "Managed by Terraform",
 * });
 * ```
 *
 * ## Relevant Links
 *
 * - [Azure DevOps Service REST API 7.1 - Service Endpoints](https://docs.microsoft.com/en-us/rest/api/azure/devops/serviceendpoint/endpoints?view=azure-devops-rest-7.1)
 *
 * ## Import
 *
 * Azure DevOps Service Endpoint GCP can be imported using **projectID/serviceEndpointID** or **projectName/serviceEndpointID**
 *
 * ```sh
 * $ pulumi import azuredevops:index/serviceendpointGcpTerraform:ServiceendpointGcpTerraform azuredevops_serviceendpoint_gcp_terraform.example 00000000-0000-0000-0000-000000000000/00000000-0000-0000-0000-000000000000
 * ```
 */
export class ServiceendpointGcpTerraform extends pulumi.CustomResource {
    /**
     * Get an existing ServiceendpointGcpTerraform resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServiceendpointGcpTerraformState, opts?: pulumi.CustomResourceOptions): ServiceendpointGcpTerraform {
        return new ServiceendpointGcpTerraform(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azuredevops:index/serviceendpointGcpTerraform:ServiceendpointGcpTerraform';

    /**
     * Returns true if the given object is an instance of ServiceendpointGcpTerraform.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServiceendpointGcpTerraform {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServiceendpointGcpTerraform.__pulumiType;
    }

    public readonly authorization!: pulumi.Output<{[key: string]: string}>;
    /**
     * The client email field in the JSON key file for creating the JSON Web Token.
     */
    public readonly clientEmail!: pulumi.Output<string | undefined>;
    public readonly description!: pulumi.Output<string | undefined>;
    /**
     * GCP project associated with the Service Connection.
     */
    public readonly gcpProjectId!: pulumi.Output<string>;
    /**
     * The client email field in the JSON key file for creating the JSON Web Token.
     */
    public readonly privateKey!: pulumi.Output<string>;
    /**
     * The ID of the project.
     */
    public readonly projectId!: pulumi.Output<string>;
    /**
     * Scope to be provided.
     */
    public readonly scope!: pulumi.Output<string | undefined>;
    /**
     * The Service Endpoint name.
     */
    public readonly serviceEndpointName!: pulumi.Output<string>;
    /**
     * The token uri field in the JSON key file for creating the JSON Web Token.
     */
    public readonly tokenUri!: pulumi.Output<string>;

    /**
     * Create a ServiceendpointGcpTerraform resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServiceendpointGcpTerraformArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServiceendpointGcpTerraformArgs | ServiceendpointGcpTerraformState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServiceendpointGcpTerraformState | undefined;
            resourceInputs["authorization"] = state ? state.authorization : undefined;
            resourceInputs["clientEmail"] = state ? state.clientEmail : undefined;
            resourceInputs["description"] = state ? state.description : undefined;
            resourceInputs["gcpProjectId"] = state ? state.gcpProjectId : undefined;
            resourceInputs["privateKey"] = state ? state.privateKey : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
            resourceInputs["scope"] = state ? state.scope : undefined;
            resourceInputs["serviceEndpointName"] = state ? state.serviceEndpointName : undefined;
            resourceInputs["tokenUri"] = state ? state.tokenUri : undefined;
        } else {
            const args = argsOrState as ServiceendpointGcpTerraformArgs | undefined;
            if ((!args || args.gcpProjectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'gcpProjectId'");
            }
            if ((!args || args.privateKey === undefined) && !opts.urn) {
                throw new Error("Missing required property 'privateKey'");
            }
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            if ((!args || args.serviceEndpointName === undefined) && !opts.urn) {
                throw new Error("Missing required property 'serviceEndpointName'");
            }
            if ((!args || args.tokenUri === undefined) && !opts.urn) {
                throw new Error("Missing required property 'tokenUri'");
            }
            resourceInputs["authorization"] = args ? args.authorization : undefined;
            resourceInputs["clientEmail"] = args ? args.clientEmail : undefined;
            resourceInputs["description"] = args ? args.description : undefined;
            resourceInputs["gcpProjectId"] = args ? args.gcpProjectId : undefined;
            resourceInputs["privateKey"] = args?.privateKey ? pulumi.secret(args.privateKey) : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
            resourceInputs["scope"] = args ? args.scope : undefined;
            resourceInputs["serviceEndpointName"] = args ? args.serviceEndpointName : undefined;
            resourceInputs["tokenUri"] = args ? args.tokenUri : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        const secretOpts = { additionalSecretOutputs: ["privateKey"] };
        opts = pulumi.mergeOptions(opts, secretOpts);
        super(ServiceendpointGcpTerraform.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServiceendpointGcpTerraform resources.
 */
export interface ServiceendpointGcpTerraformState {
    authorization?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The client email field in the JSON key file for creating the JSON Web Token.
     */
    clientEmail?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    /**
     * GCP project associated with the Service Connection.
     */
    gcpProjectId?: pulumi.Input<string>;
    /**
     * The client email field in the JSON key file for creating the JSON Web Token.
     */
    privateKey?: pulumi.Input<string>;
    /**
     * The ID of the project.
     */
    projectId?: pulumi.Input<string>;
    /**
     * Scope to be provided.
     */
    scope?: pulumi.Input<string>;
    /**
     * The Service Endpoint name.
     */
    serviceEndpointName?: pulumi.Input<string>;
    /**
     * The token uri field in the JSON key file for creating the JSON Web Token.
     */
    tokenUri?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ServiceendpointGcpTerraform resource.
 */
export interface ServiceendpointGcpTerraformArgs {
    authorization?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    /**
     * The client email field in the JSON key file for creating the JSON Web Token.
     */
    clientEmail?: pulumi.Input<string>;
    description?: pulumi.Input<string>;
    /**
     * GCP project associated with the Service Connection.
     */
    gcpProjectId: pulumi.Input<string>;
    /**
     * The client email field in the JSON key file for creating the JSON Web Token.
     */
    privateKey: pulumi.Input<string>;
    /**
     * The ID of the project.
     */
    projectId: pulumi.Input<string>;
    /**
     * Scope to be provided.
     */
    scope?: pulumi.Input<string>;
    /**
     * The Service Endpoint name.
     */
    serviceEndpointName: pulumi.Input<string>;
    /**
     * The token uri field in the JSON key file for creating the JSON Web Token.
     */
    tokenUri: pulumi.Input<string>;
}
