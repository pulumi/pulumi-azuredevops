// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use this data source to access information about an existing user within Azure DevOps.
 *
 * ~>**NOTE:** If you only have the Storage Key(UUID) of the user, you can use `azuredevops.getDescriptor` to resolve the Storage Key(UUID) to a `descriptor`.
 */
export function getUser(args: GetUserArgs, opts?: pulumi.InvokeOptions): Promise<GetUserResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azuredevops:index/getUser:getUser", {
        "descriptor": args.descriptor,
    }, opts);
}

/**
 * A collection of arguments for invoking getUser.
 */
export interface GetUserArgs {
    /**
     * The descriptor of the user.
     */
    descriptor: string;
}

/**
 * A collection of values returned by getUser.
 */
export interface GetUserResult {
    readonly descriptor: string;
    /**
     * The display name of the User.
     */
    readonly displayName: string;
    /**
     * The domain of the user.
     */
    readonly domain: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The email address of the user.
     */
    readonly mailAddress: string;
    /**
     * The type of source provider for the origin identifier (ex:`AD`, `AAD`, `MSA`).
     */
    readonly origin: string;
    /**
     * The origin ID of the user.
     */
    readonly originId: string;
    /**
     * The principal name of the user.
     */
    readonly principalName: string;
    /**
     * The subject kind of the user (ex: `Group`, `Scope`, `User`).
     */
    readonly subjectKind: string;
}
/**
 * Use this data source to access information about an existing user within Azure DevOps.
 *
 * ~>**NOTE:** If you only have the Storage Key(UUID) of the user, you can use `azuredevops.getDescriptor` to resolve the Storage Key(UUID) to a `descriptor`.
 */
export function getUserOutput(args: GetUserOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetUserResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azuredevops:index/getUser:getUser", {
        "descriptor": args.descriptor,
    }, opts);
}

/**
 * A collection of arguments for invoking getUser.
 */
export interface GetUserOutputArgs {
    /**
     * The descriptor of the user.
     */
    descriptor: pulumi.Input<string>;
}
