// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

/**
 * Manages an agent queue within Azure DevOps. In the UI, this is equivalent to adding an
 * Organization defined pool to a project.
 *
 * The created queue is not authorized for use by all pipelines in the project. However,
 * the `azuredevops.ResourceAuthorization` resource can be used to grant authorization.
 *
 * ## Example Usage
 * ### Creating a Queue from an organization-level pool
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azuredevops from "@pulumi/azuredevops";
 *
 * const exampleProject = new azuredevops.Project("exampleProject", {});
 * const examplePool = azuredevops.getPool({
 *     name: "example-pool",
 * });
 * const exampleQueue = new azuredevops.Queue("exampleQueue", {
 *     projectId: exampleProject.id,
 *     agentPoolId: examplePool.then(examplePool => examplePool.id),
 * });
 * // Grant access to queue to all pipelines in the project
 * const exampleResourceAuthorization = new azuredevops.ResourceAuthorization("exampleResourceAuthorization", {
 *     projectId: exampleProject.id,
 *     resourceId: exampleQueue.id,
 *     type: "queue",
 *     authorized: true,
 * });
 * ```
 * ### Creating a Queue at the project level (Organization-level permissions not required)
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azuredevops from "@pulumi/azuredevops";
 *
 * const exampleProject = azuredevops.getProject({
 *     name: "Example Project",
 * });
 * const exampleQueue = new azuredevops.Queue("exampleQueue", {projectId: exampleProject.then(exampleProject => exampleProject.id)});
 * ```
 * ## Relevant Links
 *
 * - [Azure DevOps Service REST API 7.0 - Agent Queues](https://docs.microsoft.com/en-us/rest/api/azure/devops/distributedtask/queues?view=azure-devops-rest-7.0)
 *
 * ## Import
 *
 * Azure DevOps Agent Pools can be imported using the project ID and agent queue ID, e.g.
 *
 * ```sh
 *  $ pulumi import azuredevops:Agent/queue:Queue example 00000000-0000-0000-0000-000000000000/0
 * ```
 *
 * @deprecated azuredevops.agent.Queue has been deprecated in favor of azuredevops.Queue
 */
export class Queue extends pulumi.CustomResource {
    /**
     * Get an existing Queue resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: QueueState, opts?: pulumi.CustomResourceOptions): Queue {
        pulumi.log.warn("Queue is deprecated: azuredevops.agent.Queue has been deprecated in favor of azuredevops.Queue")
        return new Queue(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azuredevops:Agent/queue:Queue';

    /**
     * Returns true if the given object is an instance of Queue.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is Queue {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === Queue.__pulumiType;
    }

    /**
     * The ID of the organization agent pool. Conflicts with `name`.
     *
     * > **NOTE:**
     * One of `name` or `agentPoolId` must be specified, but not both.
     * When `agentPoolId` is specified, the agent queue name will be derived from the agent pool name.
     */
    public readonly agentPoolId!: pulumi.Output<number>;
    /**
     * The name of the agent queue. Defaults to the ID of the agent pool. Conflicts with `agentPoolId`.
     */
    public readonly name!: pulumi.Output<string>;
    /**
     * The ID of the project in which to create the resource.
     */
    public readonly projectId!: pulumi.Output<string>;

    /**
     * Create a Queue resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    /** @deprecated azuredevops.agent.Queue has been deprecated in favor of azuredevops.Queue */
    constructor(name: string, args: QueueArgs, opts?: pulumi.CustomResourceOptions)
    /** @deprecated azuredevops.agent.Queue has been deprecated in favor of azuredevops.Queue */
    constructor(name: string, argsOrState?: QueueArgs | QueueState, opts?: pulumi.CustomResourceOptions) {
        pulumi.log.warn("Queue is deprecated: azuredevops.agent.Queue has been deprecated in favor of azuredevops.Queue")
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as QueueState | undefined;
            resourceInputs["agentPoolId"] = state ? state.agentPoolId : undefined;
            resourceInputs["name"] = state ? state.name : undefined;
            resourceInputs["projectId"] = state ? state.projectId : undefined;
        } else {
            const args = argsOrState as QueueArgs | undefined;
            if ((!args || args.projectId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'projectId'");
            }
            resourceInputs["agentPoolId"] = args ? args.agentPoolId : undefined;
            resourceInputs["name"] = args ? args.name : undefined;
            resourceInputs["projectId"] = args ? args.projectId : undefined;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(Queue.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering Queue resources.
 */
export interface QueueState {
    /**
     * The ID of the organization agent pool. Conflicts with `name`.
     *
     * > **NOTE:**
     * One of `name` or `agentPoolId` must be specified, but not both.
     * When `agentPoolId` is specified, the agent queue name will be derived from the agent pool name.
     */
    agentPoolId?: pulumi.Input<number>;
    /**
     * The name of the agent queue. Defaults to the ID of the agent pool. Conflicts with `agentPoolId`.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which to create the resource.
     */
    projectId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a Queue resource.
 */
export interface QueueArgs {
    /**
     * The ID of the organization agent pool. Conflicts with `name`.
     *
     * > **NOTE:**
     * One of `name` or `agentPoolId` must be specified, but not both.
     * When `agentPoolId` is specified, the agent queue name will be derived from the agent pool name.
     */
    agentPoolId?: pulumi.Input<number>;
    /**
     * The name of the agent queue. Defaults to the ID of the agent pool. Conflicts with `agentPoolId`.
     */
    name?: pulumi.Input<string>;
    /**
     * The ID of the project in which to create the resource.
     */
    projectId: pulumi.Input<string>;
}
