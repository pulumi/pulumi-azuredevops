// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";
import * as utilities from "../utilities";

/**
 * Use this data source to access information about an existing Git Repositories within Azure DevOps.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azuredevops from "@pulumi/azuredevops";
 *
 * const project = azuredevops.Core.getProject({
 *     projectName: "contoso-project",
 * });
 * const allRepos = project.then(project => azuredevops.Repository.getRepositories({
 *     projectId: project.id,
 *     includeHidden: true,
 * }));
 * const singleRepo = project.then(project => azuredevops.Repository.getRepositories({
 *     projectId: project.id,
 *     name: "contoso-repo",
 * }));
 * ```
 * ## Relevant Links
 *
 * - [Azure DevOps Service REST API 5.1 - Git API](https://docs.microsoft.com/en-us/rest/api/azure/devops/git/?view=azure-devops-rest-5.1)
 */
export function getRepositories(args?: GetRepositoriesArgs, opts?: pulumi.InvokeOptions): Promise<GetRepositoriesResult> {
    args = args || {};
    if (!opts) {
        opts = {}
    }

    if (!opts.version) {
        opts.version = utilities.getVersion();
    }
    return pulumi.runtime.invoke("azuredevops:Repository/getRepositories:getRepositories", {
        "includeHidden": args.includeHidden,
        "name": args.name,
        "projectId": args.projectId,
    }, opts);
}

/**
 * A collection of arguments for invoking getRepositories.
 */
export interface GetRepositoriesArgs {
    readonly includeHidden?: boolean;
    /**
     * Name of the Git repository to retrieve; requires `projectId` to be specified as well
     */
    readonly name?: string;
    /**
     * ID of project to list Git repositories
     */
    readonly projectId?: string;
}

/**
 * A collection of values returned by getRepositories.
 */
export interface GetRepositoriesResult {
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    readonly includeHidden?: boolean;
    /**
     * Git repository name.
     */
    readonly name?: string;
    /**
     * Project identifier to which the Git repository belongs.
     */
    readonly projectId?: string;
    /**
     * A list of existing projects in your Azure DevOps Organization with details about every project which includes:
     */
    readonly repositories: outputs.Repository.GetRepositoriesRepository[];
}
