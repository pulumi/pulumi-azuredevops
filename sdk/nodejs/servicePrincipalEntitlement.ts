// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Manages a Service Principal Entitlement.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azuredevops from "@pulumi/azuredevops";
 *
 * const example = new azuredevops.ServicePrincipalEntitlement("example", {originId: "00000000-0000-0000-0000-000000000000"});
 * ```
 *
 * ## Import
 *
 * Service Principal Entitlements can be imported using the `resource id`.
 *
 * The `resource id` can be found using DEV Tools in the `Users` section of the ADO organization.
 *
 * ```sh
 * $ pulumi import azuredevops:index/servicePrincipalEntitlement:ServicePrincipalEntitlement example 8480c6eb-ce60-47e9-88df-eca3c801638b
 * ```
 */
export class ServicePrincipalEntitlement extends pulumi.CustomResource {
    /**
     * Get an existing ServicePrincipalEntitlement resource's state with the given name, ID, and optional extra
     * properties used to qualify the lookup.
     *
     * @param name The _unique_ name of the resulting resource.
     * @param id The _unique_ provider ID of the resource to lookup.
     * @param state Any extra arguments used during the lookup.
     * @param opts Optional settings to control the behavior of the CustomResource.
     */
    public static get(name: string, id: pulumi.Input<pulumi.ID>, state?: ServicePrincipalEntitlementState, opts?: pulumi.CustomResourceOptions): ServicePrincipalEntitlement {
        return new ServicePrincipalEntitlement(name, <any>state, { ...opts, id: id });
    }

    /** @internal */
    public static readonly __pulumiType = 'azuredevops:index/servicePrincipalEntitlement:ServicePrincipalEntitlement';

    /**
     * Returns true if the given object is an instance of ServicePrincipalEntitlement.  This is designed to work even
     * when multiple copies of the Pulumi SDK have been loaded into the same process.
     */
    public static isInstance(obj: any): obj is ServicePrincipalEntitlement {
        if (obj === undefined || obj === null) {
            return false;
        }
        return obj['__pulumiType'] === ServicePrincipalEntitlement.__pulumiType;
    }

    /**
     * Type of Account License. Possible values are: `advanced`, `earlyAdopter`, `express`, `none`, `professional`, or `stakeholder`. Defaults to `express`. In addition the value `basic` is allowed which is an alias for `express` and reflects the name of the `express` license used in the Azure DevOps web interface.
     */
    public readonly accountLicenseType!: pulumi.Output<string | undefined>;
    /**
     * The descriptor is the primary way to reference the graph subject while the system is running. This field will uniquely identify the user graph subject.
     */
    public /*out*/ readonly descriptor!: pulumi.Output<string>;
    /**
     * The display name of service principal.
     */
    public /*out*/ readonly displayName!: pulumi.Output<string>;
    /**
     * The source of the licensing (e.g. Account. MSDN etc.) Possible values are: `account` (Default), `auto`, `msdn`, `none`, `profile`, `trial`
     */
    public readonly licensingSource!: pulumi.Output<string | undefined>;
    /**
     * The type of source provider for the origin identifier.
     */
    public readonly origin!: pulumi.Output<string>;
    /**
     * The Object ID of the service principal in Entra ID. Changing this forces a new Service Principal Entitlement to be created.
     */
    public readonly originId!: pulumi.Output<string>;

    /**
     * Create a ServicePrincipalEntitlement resource with the given unique name, arguments, and options.
     *
     * @param name The _unique_ name of the resource.
     * @param args The arguments to use to populate this resource's properties.
     * @param opts A bag of options that control this resource's behavior.
     */
    constructor(name: string, args: ServicePrincipalEntitlementArgs, opts?: pulumi.CustomResourceOptions)
    constructor(name: string, argsOrState?: ServicePrincipalEntitlementArgs | ServicePrincipalEntitlementState, opts?: pulumi.CustomResourceOptions) {
        let resourceInputs: pulumi.Inputs = {};
        opts = opts || {};
        if (opts.id) {
            const state = argsOrState as ServicePrincipalEntitlementState | undefined;
            resourceInputs["accountLicenseType"] = state ? state.accountLicenseType : undefined;
            resourceInputs["descriptor"] = state ? state.descriptor : undefined;
            resourceInputs["displayName"] = state ? state.displayName : undefined;
            resourceInputs["licensingSource"] = state ? state.licensingSource : undefined;
            resourceInputs["origin"] = state ? state.origin : undefined;
            resourceInputs["originId"] = state ? state.originId : undefined;
        } else {
            const args = argsOrState as ServicePrincipalEntitlementArgs | undefined;
            if ((!args || args.originId === undefined) && !opts.urn) {
                throw new Error("Missing required property 'originId'");
            }
            resourceInputs["accountLicenseType"] = args ? args.accountLicenseType : undefined;
            resourceInputs["licensingSource"] = args ? args.licensingSource : undefined;
            resourceInputs["origin"] = args ? args.origin : undefined;
            resourceInputs["originId"] = args ? args.originId : undefined;
            resourceInputs["descriptor"] = undefined /*out*/;
            resourceInputs["displayName"] = undefined /*out*/;
        }
        opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts);
        super(ServicePrincipalEntitlement.__pulumiType, name, resourceInputs, opts);
    }
}

/**
 * Input properties used for looking up and filtering ServicePrincipalEntitlement resources.
 */
export interface ServicePrincipalEntitlementState {
    /**
     * Type of Account License. Possible values are: `advanced`, `earlyAdopter`, `express`, `none`, `professional`, or `stakeholder`. Defaults to `express`. In addition the value `basic` is allowed which is an alias for `express` and reflects the name of the `express` license used in the Azure DevOps web interface.
     */
    accountLicenseType?: pulumi.Input<string>;
    /**
     * The descriptor is the primary way to reference the graph subject while the system is running. This field will uniquely identify the user graph subject.
     */
    descriptor?: pulumi.Input<string>;
    /**
     * The display name of service principal.
     */
    displayName?: pulumi.Input<string>;
    /**
     * The source of the licensing (e.g. Account. MSDN etc.) Possible values are: `account` (Default), `auto`, `msdn`, `none`, `profile`, `trial`
     */
    licensingSource?: pulumi.Input<string>;
    /**
     * The type of source provider for the origin identifier.
     */
    origin?: pulumi.Input<string>;
    /**
     * The Object ID of the service principal in Entra ID. Changing this forces a new Service Principal Entitlement to be created.
     */
    originId?: pulumi.Input<string>;
}

/**
 * The set of arguments for constructing a ServicePrincipalEntitlement resource.
 */
export interface ServicePrincipalEntitlementArgs {
    /**
     * Type of Account License. Possible values are: `advanced`, `earlyAdopter`, `express`, `none`, `professional`, or `stakeholder`. Defaults to `express`. In addition the value `basic` is allowed which is an alias for `express` and reflects the name of the `express` license used in the Azure DevOps web interface.
     */
    accountLicenseType?: pulumi.Input<string>;
    /**
     * The source of the licensing (e.g. Account. MSDN etc.) Possible values are: `account` (Default), `auto`, `msdn`, `none`, `profile`, `trial`
     */
    licensingSource?: pulumi.Input<string>;
    /**
     * The type of source provider for the origin identifier.
     */
    origin?: pulumi.Input<string>;
    /**
     * The Object ID of the service principal in Entra ID. Changing this forces a new Service Principal Entitlement to be created.
     */
    originId: pulumi.Input<string>;
}
