// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export * from "./azureRM";
export * from "./bitBucket";
export * from "./dockerRegistry";
export * from "./gitHub";
export * from "./kubernetes";

// Import resources to register:
import { AzureRM } from "./azureRM";
import { BitBucket } from "./bitBucket";
import { DockerRegistry } from "./dockerRegistry";
import { GitHub } from "./gitHub";
import { Kubernetes } from "./kubernetes";

const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azuredevops:ServiceEndpoint/azureRM:AzureRM":
                return new AzureRM(name, <any>undefined, { urn })
            case "azuredevops:ServiceEndpoint/bitBucket:BitBucket":
                return new BitBucket(name, <any>undefined, { urn })
            case "azuredevops:ServiceEndpoint/dockerRegistry:DockerRegistry":
                return new DockerRegistry(name, <any>undefined, { urn })
            case "azuredevops:ServiceEndpoint/gitHub:GitHub":
                return new GitHub(name, <any>undefined, { urn })
            case "azuredevops:ServiceEndpoint/kubernetes:Kubernetes":
                return new Kubernetes(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azuredevops", "ServiceEndpoint/azureRM", _module)
pulumi.runtime.registerResourceModule("azuredevops", "ServiceEndpoint/bitBucket", _module)
pulumi.runtime.registerResourceModule("azuredevops", "ServiceEndpoint/dockerRegistry", _module)
pulumi.runtime.registerResourceModule("azuredevops", "ServiceEndpoint/gitHub", _module)
pulumi.runtime.registerResourceModule("azuredevops", "ServiceEndpoint/kubernetes", _module)
