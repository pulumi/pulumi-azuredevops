// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "../utilities";

// Export members:
export { AzureRMArgs, AzureRMState } from "./azureRM";
export type AzureRM = import("./azureRM").AzureRM;
export const AzureRM: typeof import("./azureRM").AzureRM = null as any;
utilities.lazyLoad(exports, ["AzureRM"], () => require("./azureRM"));

export { BitBucketArgs, BitBucketState } from "./bitBucket";
export type BitBucket = import("./bitBucket").BitBucket;
export const BitBucket: typeof import("./bitBucket").BitBucket = null as any;
utilities.lazyLoad(exports, ["BitBucket"], () => require("./bitBucket"));

export { DockerRegistryArgs, DockerRegistryState } from "./dockerRegistry";
export type DockerRegistry = import("./dockerRegistry").DockerRegistry;
export const DockerRegistry: typeof import("./dockerRegistry").DockerRegistry = null as any;
utilities.lazyLoad(exports, ["DockerRegistry"], () => require("./dockerRegistry"));

export { GitHubArgs, GitHubState } from "./gitHub";
export type GitHub = import("./gitHub").GitHub;
export const GitHub: typeof import("./gitHub").GitHub = null as any;
utilities.lazyLoad(exports, ["GitHub"], () => require("./gitHub"));

export { KubernetesArgs, KubernetesState } from "./kubernetes";
export type Kubernetes = import("./kubernetes").Kubernetes;
export const Kubernetes: typeof import("./kubernetes").Kubernetes = null as any;
utilities.lazyLoad(exports, ["Kubernetes"], () => require("./kubernetes"));


const _module = {
    version: utilities.getVersion(),
    construct: (name: string, type: string, urn: string): pulumi.Resource => {
        switch (type) {
            case "azuredevops:ServiceEndpoint/azureRM:AzureRM":
                return new AzureRM(name, <any>undefined, { urn })
            case "azuredevops:ServiceEndpoint/bitBucket:BitBucket":
                return new BitBucket(name, <any>undefined, { urn })
            case "azuredevops:ServiceEndpoint/dockerRegistry:DockerRegistry":
                return new DockerRegistry(name, <any>undefined, { urn })
            case "azuredevops:ServiceEndpoint/gitHub:GitHub":
                return new GitHub(name, <any>undefined, { urn })
            case "azuredevops:ServiceEndpoint/kubernetes:Kubernetes":
                return new Kubernetes(name, <any>undefined, { urn })
            default:
                throw new Error(`unknown resource type ${type}`);
        }
    },
};
pulumi.runtime.registerResourceModule("azuredevops", "ServiceEndpoint/azureRM", _module)
pulumi.runtime.registerResourceModule("azuredevops", "ServiceEndpoint/bitBucket", _module)
pulumi.runtime.registerResourceModule("azuredevops", "ServiceEndpoint/dockerRegistry", _module)
pulumi.runtime.registerResourceModule("azuredevops", "ServiceEndpoint/gitHub", _module)
pulumi.runtime.registerResourceModule("azuredevops", "ServiceEndpoint/kubernetes", _module)
