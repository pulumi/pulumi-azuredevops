// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as utilities from "./utilities";

/**
 * Use this data source to access information about an existing Service Principal.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azuredevops from "@pulumi/azuredevops";
 *
 * const example = azuredevops.getServicePrincipal({
 *     displayName: "existing",
 * });
 * export const id = example.then(example => example.id);
 * ```
 */
export function getServicePrincipal(args: GetServicePrincipalArgs, opts?: pulumi.InvokeOptions): Promise<GetServicePrincipalResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invoke("azuredevops:index/getServicePrincipal:getServicePrincipal", {
        "displayName": args.displayName,
    }, opts);
}

/**
 * A collection of arguments for invoking getServicePrincipal.
 */
export interface GetServicePrincipalArgs {
    /**
     * The Display Name of the Service Principal. Changing this forces a new Service Principal to be created.
     */
    displayName: string;
}

/**
 * A collection of values returned by getServicePrincipal.
 */
export interface GetServicePrincipalResult {
    /**
     * The descriptor of the Service Principal.
     */
    readonly descriptor: string;
    readonly displayName: string;
    /**
     * The provider-assigned unique ID for this managed resource.
     */
    readonly id: string;
    /**
     * The origin of the Service Principal.
     */
    readonly origin: string;
    /**
     * The origin ID of the Service Principal..
     */
    readonly originId: string;
}
/**
 * Use this data source to access information about an existing Service Principal.
 *
 * ## Example Usage
 *
 * ```typescript
 * import * as pulumi from "@pulumi/pulumi";
 * import * as azuredevops from "@pulumi/azuredevops";
 *
 * const example = azuredevops.getServicePrincipal({
 *     displayName: "existing",
 * });
 * export const id = example.then(example => example.id);
 * ```
 */
export function getServicePrincipalOutput(args: GetServicePrincipalOutputArgs, opts?: pulumi.InvokeOutputOptions): pulumi.Output<GetServicePrincipalResult> {
    opts = pulumi.mergeOptions(utilities.resourceOptsDefaults(), opts || {});
    return pulumi.runtime.invokeOutput("azuredevops:index/getServicePrincipal:getServicePrincipal", {
        "displayName": args.displayName,
    }, opts);
}

/**
 * A collection of arguments for invoking getServicePrincipal.
 */
export interface GetServicePrincipalOutputArgs {
    /**
     * The Display Name of the Service Principal. Changing this forces a new Service Principal to be created.
     */
    displayName: pulumi.Input<string>;
}
