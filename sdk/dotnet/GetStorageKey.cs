// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureDevOps
{
    public static class GetStorageKey
    {
        /// <summary>
        /// Use this data source to access information about an existing Storage Key.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AzureDevOps = Pulumi.AzureDevOps;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = AzureDevOps.GetStorageKey.Invoke(new()
        ///     {
        ///         Descriptor = "aad.000000000000000000000000000000000000",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getStorageKeyResult =&gt; getStorageKeyResult.Id),
        ///     };
        /// });
        /// ```
        /// 
        /// ## Relevant Links
        /// 
        /// - [Azure DevOps Service REST API 7.1 - Storage Key - Get](https://learn.microsoft.com/en-us/rest/api/azure/devops/graph/storage-keys/get?view=azure-devops-rest-7.1)
        /// </summary>
        public static Task<GetStorageKeyResult> InvokeAsync(GetStorageKeyArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetStorageKeyResult>("azuredevops:index/getStorageKey:getStorageKey", args ?? new GetStorageKeyArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Storage Key.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AzureDevOps = Pulumi.AzureDevOps;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = AzureDevOps.GetStorageKey.Invoke(new()
        ///     {
        ///         Descriptor = "aad.000000000000000000000000000000000000",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getStorageKeyResult =&gt; getStorageKeyResult.Id),
        ///     };
        /// });
        /// ```
        /// 
        /// ## Relevant Links
        /// 
        /// - [Azure DevOps Service REST API 7.1 - Storage Key - Get](https://learn.microsoft.com/en-us/rest/api/azure/devops/graph/storage-keys/get?view=azure-devops-rest-7.1)
        /// </summary>
        public static Output<GetStorageKeyResult> Invoke(GetStorageKeyInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetStorageKeyResult>("azuredevops:index/getStorageKey:getStorageKey", args ?? new GetStorageKeyInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Storage Key.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AzureDevOps = Pulumi.AzureDevOps;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = AzureDevOps.GetStorageKey.Invoke(new()
        ///     {
        ///         Descriptor = "aad.000000000000000000000000000000000000",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getStorageKeyResult =&gt; getStorageKeyResult.Id),
        ///     };
        /// });
        /// ```
        /// 
        /// ## Relevant Links
        /// 
        /// - [Azure DevOps Service REST API 7.1 - Storage Key - Get](https://learn.microsoft.com/en-us/rest/api/azure/devops/graph/storage-keys/get?view=azure-devops-rest-7.1)
        /// </summary>
        public static Output<GetStorageKeyResult> Invoke(GetStorageKeyInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetStorageKeyResult>("azuredevops:index/getStorageKey:getStorageKey", args ?? new GetStorageKeyInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetStorageKeyArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The descriptor that will be resolved to a storage key.
        /// </summary>
        [Input("descriptor", required: true)]
        public string Descriptor { get; set; } = null!;

        public GetStorageKeyArgs()
        {
        }
        public static new GetStorageKeyArgs Empty => new GetStorageKeyArgs();
    }

    public sealed class GetStorageKeyInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The descriptor that will be resolved to a storage key.
        /// </summary>
        [Input("descriptor", required: true)]
        public Input<string> Descriptor { get; set; } = null!;

        public GetStorageKeyInvokeArgs()
        {
        }
        public static new GetStorageKeyInvokeArgs Empty => new GetStorageKeyInvokeArgs();
    }


    [OutputType]
    public sealed class GetStorageKeyResult
    {
        public readonly string Descriptor;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The Storage Key of the descriptor.
        /// </summary>
        public readonly string StorageKey;

        [OutputConstructor]
        private GetStorageKeyResult(
            string descriptor,

            string id,

            string storageKey)
        {
            Descriptor = descriptor;
            Id = id;
            StorageKey = storageKey;
        }
    }
}
