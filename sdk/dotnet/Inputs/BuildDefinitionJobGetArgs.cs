// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureDevOps.Inputs
{

    public sealed class BuildDefinitionJobGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Enables scripts and other processes launched by tasks to access the OAuth token through the `System.AccessToken` variable. Possible values: `true`, `false`. Defaults to `false`. Available when Job type is `AgentJob`
        /// </summary>
        [Input("allowScriptsAuthAccessOption")]
        public Input<bool>? AllowScriptsAuthAccessOption { get; set; }

        /// <summary>
        /// Specifies when this job should run. Can **Custom conditions** to specify more complex conditions. Possible values: `succeeded()`, `succeededOrFailed()`, `always()`, `failed()` etc. More details: [Pipeline conditions](https://learn.microsoft.com/en-us/azure/devops/pipelines/process/conditions?view=azure-devops)
        /// </summary>
        [Input("condition", required: true)]
        public Input<string> Condition { get; set; } = null!;

        [Input("dependencies")]
        private InputList<Inputs.BuildDefinitionJobDependencyGetArgs>? _dependencies;

        /// <summary>
        /// A `dependencies` blocks as documented below. Define the job dependencies.
        /// </summary>
        public InputList<Inputs.BuildDefinitionJobDependencyGetArgs> Dependencies
        {
            get => _dependencies ?? (_dependencies = new InputList<Inputs.BuildDefinitionJobDependencyGetArgs>());
            set => _dependencies = value;
        }

        /// <summary>
        /// The job authorization scope for builds queued against this definition. Possible values are: `project`, `projectCollection`. Defaults to `projectCollection`.
        /// </summary>
        [Input("jobAuthorizationScope")]
        public Input<string>? JobAuthorizationScope { get; set; }

        /// <summary>
        /// The job cancel timeout (in minutes) for builds cancelled by user for this definition. Possible values are between `0` and `60`. Defaults to `0`.
        /// </summary>
        [Input("jobCancelTimeoutInMinutes")]
        public Input<int>? JobCancelTimeoutInMinutes { get; set; }

        /// <summary>
        /// The job execution timeout (in minutes) for builds queued against this definition. Possible values are between `0` and `1000000000`. Defaults to `0`.
        /// </summary>
        [Input("jobTimeoutInMinutes")]
        public Input<int>? JobTimeoutInMinutes { get; set; }

        /// <summary>
        /// The name of the job.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The reference name of the job, can be used to define the job dependencies.
        /// </summary>
        [Input("refName", required: true)]
        public Input<string> RefName { get; set; } = null!;

        /// <summary>
        /// A `target` blocks as documented below.
        /// </summary>
        [Input("target", required: true)]
        public Input<Inputs.BuildDefinitionJobTargetGetArgs> Target { get; set; } = null!;

        public BuildDefinitionJobGetArgs()
        {
        }
        public static new BuildDefinitionJobGetArgs Empty => new BuildDefinitionJobGetArgs();
    }
}
