// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureDevOps.Inputs
{

    public sealed class GitInitializationGetArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The type of repository to create. Valid values: `Uninitialized`, `Clean` or `Import`.
        /// </summary>
        [Input("initType", required: true)]
        public Input<string> InitType { get; set; } = null!;

        /// <summary>
        /// The ID of service connection used to authenticate to a private repository for import initialization. Conflicts with `username` and `password`.
        /// </summary>
        [Input("serviceConnectionId")]
        public Input<string>? ServiceConnectionId { get; set; }

        /// <summary>
        /// Type of the source repository. Used if the `init_type` is `Import`. Valid values: `Git`.
        /// </summary>
        [Input("sourceType")]
        public Input<string>? SourceType { get; set; }

        /// <summary>
        /// The URL of the source repository. Used if the `init_type` is `Import`.
        /// </summary>
        [Input("sourceUrl")]
        public Input<string>? SourceUrl { get; set; }

        /// <summary>
        /// The username used to authenticate to a private repository for import initialization. Conflicts with `service_connection_id`.
        /// </summary>
        [Input("username")]
        public Input<string>? Username { get; set; }

        public GitInitializationGetArgs()
        {
        }
        public static new GitInitializationGetArgs Empty => new GitInitializationGetArgs();
    }
}
