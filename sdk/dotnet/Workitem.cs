// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureDevOps
{
    /// <summary>
    /// Manages a Work Item in Azure Devops.
    /// 
    /// ## Example Usage
    /// 
    /// ### Basic usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AzureDevOps = Pulumi.AzureDevOps;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new AzureDevOps.Project("example", new()
    ///     {
    ///         Name = "Example Project",
    ///         WorkItemTemplate = "Agile",
    ///         VersionControl = "Git",
    ///         Visibility = "private",
    ///         Description = "Managed by Pulumi",
    ///     });
    /// 
    ///     var exampleWorkitem = new AzureDevOps.Workitem("example", new()
    ///     {
    ///         ProjectId = exampleAzuredevopsProject.Id,
    ///         Title = "Example Work Item",
    ///         Type = "Issue",
    ///         State = "Active",
    ///         Tags = new[]
    ///         {
    ///             "Tag",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ### With custom fields
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AzureDevOps = Pulumi.AzureDevOps;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new AzureDevOps.Project("example", new()
    ///     {
    ///         Name = "Example Project",
    ///         WorkItemTemplate = "Agile",
    ///         VersionControl = "Git",
    ///         Visibility = "private",
    ///         Description = "Managed by Pulumi",
    ///     });
    /// 
    ///     var exampleWorkitem = new AzureDevOps.Workitem("example", new()
    ///     {
    ///         ProjectId = exampleAzuredevopsProject.Id,
    ///         Title = "Example Work Item",
    ///         Type = "Issue",
    ///         State = "Active",
    ///         Tags = new[]
    ///         {
    ///             "Tag",
    ///         },
    ///         CustomFields = 
    ///         {
    ///             { "example", "example" },
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Import
    /// 
    /// Work Item resource does not support import.
    /// </summary>
    [AzureDevOpsResourceType("azuredevops:index/workitem:Workitem")]
    public partial class Workitem : global::Pulumi.CustomResource
    {
        /// <summary>
        /// Specifies the area where the Work Item is used.
        /// </summary>
        [Output("areaPath")]
        public Output<string> AreaPath { get; private set; } = null!;

        /// <summary>
        /// Specifies a list with Custom Fields for the Work Item.
        /// </summary>
        [Output("customFields")]
        public Output<ImmutableDictionary<string, string>?> CustomFields { get; private set; } = null!;

        /// <summary>
        /// Specifies the iteration in which the Work Item is used.
        /// </summary>
        [Output("iterationPath")]
        public Output<string> IterationPath { get; private set; } = null!;

        /// <summary>
        /// The ID of the Project.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// The state of the Work Item. The four main states that are defined for the User Story (`Agile`) are `New`, `Active`, `Resolved`, and `Closed`. See [Workflow states](https://learn.microsoft.com/en-us/azure/devops/boards/work-items/workflow-and-state-categories?view=azure-devops&amp;tabs=agile-process#workflow-states) for more details.
        /// </summary>
        [Output("state")]
        public Output<string> State { get; private set; } = null!;

        /// <summary>
        /// Specifies a list of Tags.
        /// </summary>
        [Output("tags")]
        public Output<ImmutableArray<string>> Tags { get; private set; } = null!;

        /// <summary>
        /// The Title of the Work Item.
        /// </summary>
        [Output("title")]
        public Output<string> Title { get; private set; } = null!;

        /// <summary>
        /// The Type of the Work Item. The work item type varies depending on the process used when creating the project(`Agile`, `Basic`, `Scrum`, `Scrum`). See [Work Item Types](https://learn.microsoft.com/en-us/azure/devops/boards/work-items/about-work-items?view=azure-devops) for more details.
        /// </summary>
        [Output("type")]
        public Output<string> Type { get; private set; } = null!;


        /// <summary>
        /// Create a Workitem resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Workitem(string name, WorkitemArgs args, CustomResourceOptions? options = null)
            : base("azuredevops:index/workitem:Workitem", name, args ?? new WorkitemArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Workitem(string name, Input<string> id, WorkitemState? state = null, CustomResourceOptions? options = null)
            : base("azuredevops:index/workitem:Workitem", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Workitem resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Workitem Get(string name, Input<string> id, WorkitemState? state = null, CustomResourceOptions? options = null)
        {
            return new Workitem(name, id, state, options);
        }
    }

    public sealed class WorkitemArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the area where the Work Item is used.
        /// </summary>
        [Input("areaPath")]
        public Input<string>? AreaPath { get; set; }

        [Input("customFields")]
        private InputMap<string>? _customFields;

        /// <summary>
        /// Specifies a list with Custom Fields for the Work Item.
        /// </summary>
        public InputMap<string> CustomFields
        {
            get => _customFields ?? (_customFields = new InputMap<string>());
            set => _customFields = value;
        }

        /// <summary>
        /// Specifies the iteration in which the Work Item is used.
        /// </summary>
        [Input("iterationPath")]
        public Input<string>? IterationPath { get; set; }

        /// <summary>
        /// The ID of the Project.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        /// <summary>
        /// The state of the Work Item. The four main states that are defined for the User Story (`Agile`) are `New`, `Active`, `Resolved`, and `Closed`. See [Workflow states](https://learn.microsoft.com/en-us/azure/devops/boards/work-items/workflow-and-state-categories?view=azure-devops&amp;tabs=agile-process#workflow-states) for more details.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// Specifies a list of Tags.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The Title of the Work Item.
        /// </summary>
        [Input("title", required: true)]
        public Input<string> Title { get; set; } = null!;

        /// <summary>
        /// The Type of the Work Item. The work item type varies depending on the process used when creating the project(`Agile`, `Basic`, `Scrum`, `Scrum`). See [Work Item Types](https://learn.microsoft.com/en-us/azure/devops/boards/work-items/about-work-items?view=azure-devops) for more details.
        /// </summary>
        [Input("type", required: true)]
        public Input<string> Type { get; set; } = null!;

        public WorkitemArgs()
        {
        }
        public static new WorkitemArgs Empty => new WorkitemArgs();
    }

    public sealed class WorkitemState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// Specifies the area where the Work Item is used.
        /// </summary>
        [Input("areaPath")]
        public Input<string>? AreaPath { get; set; }

        [Input("customFields")]
        private InputMap<string>? _customFields;

        /// <summary>
        /// Specifies a list with Custom Fields for the Work Item.
        /// </summary>
        public InputMap<string> CustomFields
        {
            get => _customFields ?? (_customFields = new InputMap<string>());
            set => _customFields = value;
        }

        /// <summary>
        /// Specifies the iteration in which the Work Item is used.
        /// </summary>
        [Input("iterationPath")]
        public Input<string>? IterationPath { get; set; }

        /// <summary>
        /// The ID of the Project.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// The state of the Work Item. The four main states that are defined for the User Story (`Agile`) are `New`, `Active`, `Resolved`, and `Closed`. See [Workflow states](https://learn.microsoft.com/en-us/azure/devops/boards/work-items/workflow-and-state-categories?view=azure-devops&amp;tabs=agile-process#workflow-states) for more details.
        /// </summary>
        [Input("state")]
        public Input<string>? State { get; set; }

        [Input("tags")]
        private InputList<string>? _tags;

        /// <summary>
        /// Specifies a list of Tags.
        /// </summary>
        public InputList<string> Tags
        {
            get => _tags ?? (_tags = new InputList<string>());
            set => _tags = value;
        }

        /// <summary>
        /// The Title of the Work Item.
        /// </summary>
        [Input("title")]
        public Input<string>? Title { get; set; }

        /// <summary>
        /// The Type of the Work Item. The work item type varies depending on the process used when creating the project(`Agile`, `Basic`, `Scrum`, `Scrum`). See [Work Item Types](https://learn.microsoft.com/en-us/azure/devops/boards/work-items/about-work-items?view=azure-devops) for more details.
        /// </summary>
        [Input("type")]
        public Input<string>? Type { get; set; }

        public WorkitemState()
        {
        }
        public static new WorkitemState Empty => new WorkitemState();
    }
}
