// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureDevOps
{
    /// <summary>
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AzureDevOps = Pulumi.AzureDevOps;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new AzureDevOps.Project("example", new()
    ///     {
    ///         Name = "Example Project",
    ///         Visibility = "private",
    ///         VersionControl = "Git",
    ///         WorkItemTemplate = "Agile",
    ///         Description = "Managed by Pulumi",
    ///     });
    /// 
    ///     var exampleServiceendpointGcpTerraform = new AzureDevOps.ServiceendpointGcpTerraform("example", new()
    ///     {
    ///         ProjectId = example.Id,
    ///         TokenUri = "https://oauth2.example.com/token",
    ///         ClientEmail = "gcp-sa-example@example.iam.gserviceaccount.com",
    ///         PrivateKey = "0000000000000000000000000000000000000",
    ///         ServiceEndpointName = "Example GCP Terraform extension",
    ///         GcpProjectId = "Example GCP Project",
    ///         Description = "Managed by Pulumi",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Relevant Links
    /// 
    /// - [Azure DevOps Service REST API 7.1 - Service Endpoints](https://docs.microsoft.com/en-us/rest/api/azure/devops/serviceendpoint/endpoints?view=azure-devops-rest-7.1)
    /// 
    /// ## Import
    /// 
    /// Azure DevOps Service Endpoint GCP can be imported using **projectID/serviceEndpointID** or **projectName/serviceEndpointID**
    /// 
    /// ```sh
    /// $ pulumi import azuredevops:index/serviceendpointGcpTerraform:ServiceendpointGcpTerraform azuredevops_serviceendpoint_gcp_terraform.example 00000000-0000-0000-0000-000000000000/00000000-0000-0000-0000-000000000000
    /// ```
    /// </summary>
    [AzureDevOpsResourceType("azuredevops:index/serviceendpointGcpTerraform:ServiceendpointGcpTerraform")]
    public partial class ServiceendpointGcpTerraform : global::Pulumi.CustomResource
    {
        [Output("authorization")]
        public Output<ImmutableDictionary<string, string>> Authorization { get; private set; } = null!;

        /// <summary>
        /// The client email field in the JSON key file for creating the JSON Web Token.
        /// </summary>
        [Output("clientEmail")]
        public Output<string?> ClientEmail { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// GCP project associated with the Service Connection.
        /// </summary>
        [Output("gcpProjectId")]
        public Output<string> GcpProjectId { get; private set; } = null!;

        /// <summary>
        /// The client email field in the JSON key file for creating the JSON Web Token.
        /// </summary>
        [Output("privateKey")]
        public Output<string> PrivateKey { get; private set; } = null!;

        /// <summary>
        /// The ID of the project.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// Scope to be provided.
        /// </summary>
        [Output("scope")]
        public Output<string?> Scope { get; private set; } = null!;

        /// <summary>
        /// The Service Endpoint name.
        /// </summary>
        [Output("serviceEndpointName")]
        public Output<string> ServiceEndpointName { get; private set; } = null!;

        /// <summary>
        /// The token uri field in the JSON key file for creating the JSON Web Token.
        /// </summary>
        [Output("tokenUri")]
        public Output<string> TokenUri { get; private set; } = null!;


        /// <summary>
        /// Create a ServiceendpointGcpTerraform resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServiceendpointGcpTerraform(string name, ServiceendpointGcpTerraformArgs args, CustomResourceOptions? options = null)
            : base("azuredevops:index/serviceendpointGcpTerraform:ServiceendpointGcpTerraform", name, args ?? new ServiceendpointGcpTerraformArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServiceendpointGcpTerraform(string name, Input<string> id, ServiceendpointGcpTerraformState? state = null, CustomResourceOptions? options = null)
            : base("azuredevops:index/serviceendpointGcpTerraform:ServiceendpointGcpTerraform", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
                AdditionalSecretOutputs =
                {
                    "privateKey",
                },
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServiceendpointGcpTerraform resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServiceendpointGcpTerraform Get(string name, Input<string> id, ServiceendpointGcpTerraformState? state = null, CustomResourceOptions? options = null)
        {
            return new ServiceendpointGcpTerraform(name, id, state, options);
        }
    }

    public sealed class ServiceendpointGcpTerraformArgs : global::Pulumi.ResourceArgs
    {
        [Input("authorization")]
        private InputMap<string>? _authorization;
        public InputMap<string> Authorization
        {
            get => _authorization ?? (_authorization = new InputMap<string>());
            set => _authorization = value;
        }

        /// <summary>
        /// The client email field in the JSON key file for creating the JSON Web Token.
        /// </summary>
        [Input("clientEmail")]
        public Input<string>? ClientEmail { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// GCP project associated with the Service Connection.
        /// </summary>
        [Input("gcpProjectId", required: true)]
        public Input<string> GcpProjectId { get; set; } = null!;

        [Input("privateKey", required: true)]
        private Input<string>? _privateKey;

        /// <summary>
        /// The client email field in the JSON key file for creating the JSON Web Token.
        /// </summary>
        public Input<string>? PrivateKey
        {
            get => _privateKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _privateKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The ID of the project.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        /// <summary>
        /// Scope to be provided.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        /// <summary>
        /// The Service Endpoint name.
        /// </summary>
        [Input("serviceEndpointName", required: true)]
        public Input<string> ServiceEndpointName { get; set; } = null!;

        /// <summary>
        /// The token uri field in the JSON key file for creating the JSON Web Token.
        /// </summary>
        [Input("tokenUri", required: true)]
        public Input<string> TokenUri { get; set; } = null!;

        public ServiceendpointGcpTerraformArgs()
        {
        }
        public static new ServiceendpointGcpTerraformArgs Empty => new ServiceendpointGcpTerraformArgs();
    }

    public sealed class ServiceendpointGcpTerraformState : global::Pulumi.ResourceArgs
    {
        [Input("authorization")]
        private InputMap<string>? _authorization;
        public InputMap<string> Authorization
        {
            get => _authorization ?? (_authorization = new InputMap<string>());
            set => _authorization = value;
        }

        /// <summary>
        /// The client email field in the JSON key file for creating the JSON Web Token.
        /// </summary>
        [Input("clientEmail")]
        public Input<string>? ClientEmail { get; set; }

        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// GCP project associated with the Service Connection.
        /// </summary>
        [Input("gcpProjectId")]
        public Input<string>? GcpProjectId { get; set; }

        [Input("privateKey")]
        private Input<string>? _privateKey;

        /// <summary>
        /// The client email field in the JSON key file for creating the JSON Web Token.
        /// </summary>
        public Input<string>? PrivateKey
        {
            get => _privateKey;
            set
            {
                var emptySecret = Output.CreateSecret(0);
                _privateKey = Output.Tuple<Input<string>?, int>(value, emptySecret).Apply(t => t.Item1);
            }
        }

        /// <summary>
        /// The ID of the project.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// Scope to be provided.
        /// </summary>
        [Input("scope")]
        public Input<string>? Scope { get; set; }

        /// <summary>
        /// The Service Endpoint name.
        /// </summary>
        [Input("serviceEndpointName")]
        public Input<string>? ServiceEndpointName { get; set; }

        /// <summary>
        /// The token uri field in the JSON key file for creating the JSON Web Token.
        /// </summary>
        [Input("tokenUri")]
        public Input<string>? TokenUri { get; set; }

        public ServiceendpointGcpTerraformState()
        {
        }
        public static new ServiceendpointGcpTerraformState Empty => new ServiceendpointGcpTerraformState();
    }
}
