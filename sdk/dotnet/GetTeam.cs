// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureDevOps
{
    public static class GetTeam
    {
        /// <summary>
        /// Use this data source to access information about an existing Team in a Project within Azure DevOps.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AzureDevOps = Pulumi.AzureDevOps;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleProject = new AzureDevOps.Project("example", new()
        ///     {
        ///         Name = "Example Project",
        ///         WorkItemTemplate = "Agile",
        ///         VersionControl = "Git",
        ///         Visibility = "private",
        ///         Description = "Managed by Terraform",
        ///     });
        /// 
        ///     var example = AzureDevOps.GetTeam.Invoke(new()
        ///     {
        ///         ProjectId = exampleProject.Id,
        ///         Name = "Example Project Team",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// 
        /// ## Relevant Links
        /// 
        /// - [Azure DevOps Service REST API 7.0 - Teams - Get](https://docs.microsoft.com/en-us/rest/api/azure/devops/core/teams/get?view=azure-devops-rest-7.0)
        /// 
        /// ## PAT Permissions Required
        /// 
        /// - **vso.project**:	Grants the ability to read projects and teams.
        /// </summary>
        public static Task<GetTeamResult> InvokeAsync(GetTeamArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetTeamResult>("azuredevops:index/getTeam:getTeam", args ?? new GetTeamArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Team in a Project within Azure DevOps.
        /// 
        /// ## Example Usage
        /// 
        /// &lt;!--Start PulumiCodeChooser --&gt;
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AzureDevOps = Pulumi.AzureDevOps;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var exampleProject = new AzureDevOps.Project("example", new()
        ///     {
        ///         Name = "Example Project",
        ///         WorkItemTemplate = "Agile",
        ///         VersionControl = "Git",
        ///         Visibility = "private",
        ///         Description = "Managed by Terraform",
        ///     });
        /// 
        ///     var example = AzureDevOps.GetTeam.Invoke(new()
        ///     {
        ///         ProjectId = exampleProject.Id,
        ///         Name = "Example Project Team",
        ///     });
        /// 
        /// });
        /// ```
        /// &lt;!--End PulumiCodeChooser --&gt;
        /// 
        /// ## Relevant Links
        /// 
        /// - [Azure DevOps Service REST API 7.0 - Teams - Get](https://docs.microsoft.com/en-us/rest/api/azure/devops/core/teams/get?view=azure-devops-rest-7.0)
        /// 
        /// ## PAT Permissions Required
        /// 
        /// - **vso.project**:	Grants the ability to read projects and teams.
        /// </summary>
        public static Output<GetTeamResult> Invoke(GetTeamInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetTeamResult>("azuredevops:index/getTeam:getTeam", args ?? new GetTeamInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetTeamArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Team.
        /// </summary>
        [Input("name", required: true)]
        public string Name { get; set; } = null!;

        /// <summary>
        /// The Project ID.
        /// </summary>
        [Input("projectId", required: true)]
        public string ProjectId { get; set; } = null!;

        /// <summary>
        /// The maximum number of teams to return. Defaults to `100`.
        /// </summary>
        [Input("top")]
        public int? Top { get; set; }

        public GetTeamArgs()
        {
        }
        public static new GetTeamArgs Empty => new GetTeamArgs();
    }

    public sealed class GetTeamInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The name of the Team.
        /// </summary>
        [Input("name", required: true)]
        public Input<string> Name { get; set; } = null!;

        /// <summary>
        /// The Project ID.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        /// <summary>
        /// The maximum number of teams to return. Defaults to `100`.
        /// </summary>
        [Input("top")]
        public Input<int>? Top { get; set; }

        public GetTeamInvokeArgs()
        {
        }
        public static new GetTeamInvokeArgs Empty => new GetTeamInvokeArgs();
    }


    [OutputType]
    public sealed class GetTeamResult
    {
        /// <summary>
        /// List of subject descriptors for `administrators` of the team.
        /// </summary>
        public readonly ImmutableArray<string> Administrators;
        /// <summary>
        /// Team description.
        /// </summary>
        public readonly string Description;
        /// <summary>
        /// The descriptor of the Team.
        /// </summary>
        public readonly string Descriptor;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// List of subject descriptors for `members` of the team.
        /// </summary>
        public readonly ImmutableArray<string> Members;
        public readonly string Name;
        public readonly string ProjectId;
        public readonly int? Top;

        [OutputConstructor]
        private GetTeamResult(
            ImmutableArray<string> administrators,

            string description,

            string descriptor,

            string id,

            ImmutableArray<string> members,

            string name,

            string projectId,

            int? top)
        {
            Administrators = administrators;
            Description = description;
            Descriptor = descriptor;
            Id = id;
            Members = members;
            Name = name;
            ProjectId = projectId;
            Top = top;
        }
    }
}
