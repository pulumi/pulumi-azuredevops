// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureDevOps.ServiceEndpoint
{
    /// <summary>
    /// Manages a Kubernetes service endpoint within Azure DevOps.
    /// 
    /// ## Relevant Links
    /// 
    /// - [Azure DevOps Service REST API 6.0 - Endpoints](https://docs.microsoft.com/en-us/rest/api/azure/devops/serviceendpoint/endpoints?view=azure-devops-rest-6.0)
    /// 
    /// ## Import
    /// 
    /// Azure DevOps Service Endpoint Kubernetes can be imported using **projectID/serviceEndpointID** or **projectName/serviceEndpointID**
    /// 
    /// ```sh
    ///  $ pulumi import azuredevops:ServiceEndpoint/kubernetes:Kubernetes example 00000000-0000-0000-0000-000000000000/00000000-0000-0000-0000-000000000000
    /// ```
    /// </summary>
    [Obsolete(@"azuredevops.serviceendpoint.Kubernetes has been deprecated in favor of azuredevops.ServiceEndpointKubernetes")]
    [AzureDevOpsResourceType("azuredevops:ServiceEndpoint/kubernetes:Kubernetes")]
    public partial class Kubernetes : Pulumi.CustomResource
    {
        /// <summary>
        /// The hostname (in form of URI) of the Kubernetes API.
        /// </summary>
        [Output("apiserverUrl")]
        public Output<string> ApiserverUrl { get; private set; } = null!;

        [Output("authorization")]
        public Output<ImmutableDictionary<string, string>> Authorization { get; private set; } = null!;

        /// <summary>
        /// The authentication method used to authenticate on the Kubernetes cluster. The value should be one of AzureSubscription, Kubeconfig, ServiceAccount.
        /// </summary>
        [Output("authorizationType")]
        public Output<string> AuthorizationType { get; private set; } = null!;

        /// <summary>
        /// A `azure_subscription` block defined blow.
        /// </summary>
        [Output("azureSubscriptions")]
        public Output<ImmutableArray<Outputs.KubernetesAzureSubscription>> AzureSubscriptions { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// A `kubeconfig` block defined blow.
        /// </summary>
        [Output("kubeconfigs")]
        public Output<ImmutableArray<Outputs.KubernetesKubeconfig>> Kubeconfigs { get; private set; } = null!;

        /// <summary>
        /// The ID of the project.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// A `service_account` block defined blow.
        /// </summary>
        [Output("serviceAccounts")]
        public Output<ImmutableArray<Outputs.KubernetesServiceAccount>> ServiceAccounts { get; private set; } = null!;

        /// <summary>
        /// The Service Endpoint name.
        /// </summary>
        [Output("serviceEndpointName")]
        public Output<string> ServiceEndpointName { get; private set; } = null!;


        /// <summary>
        /// Create a Kubernetes resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public Kubernetes(string name, KubernetesArgs args, CustomResourceOptions? options = null)
            : base("azuredevops:ServiceEndpoint/kubernetes:Kubernetes", name, args ?? new KubernetesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private Kubernetes(string name, Input<string> id, KubernetesState? state = null, CustomResourceOptions? options = null)
            : base("azuredevops:ServiceEndpoint/kubernetes:Kubernetes", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing Kubernetes resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static Kubernetes Get(string name, Input<string> id, KubernetesState? state = null, CustomResourceOptions? options = null)
        {
            return new Kubernetes(name, id, state, options);
        }
    }

    public sealed class KubernetesArgs : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The hostname (in form of URI) of the Kubernetes API.
        /// </summary>
        [Input("apiserverUrl", required: true)]
        public Input<string> ApiserverUrl { get; set; } = null!;

        [Input("authorization")]
        private InputMap<string>? _authorization;
        public InputMap<string> Authorization
        {
            get => _authorization ?? (_authorization = new InputMap<string>());
            set => _authorization = value;
        }

        /// <summary>
        /// The authentication method used to authenticate on the Kubernetes cluster. The value should be one of AzureSubscription, Kubeconfig, ServiceAccount.
        /// </summary>
        [Input("authorizationType", required: true)]
        public Input<string> AuthorizationType { get; set; } = null!;

        [Input("azureSubscriptions")]
        private InputList<Inputs.KubernetesAzureSubscriptionArgs>? _azureSubscriptions;

        /// <summary>
        /// A `azure_subscription` block defined blow.
        /// </summary>
        public InputList<Inputs.KubernetesAzureSubscriptionArgs> AzureSubscriptions
        {
            get => _azureSubscriptions ?? (_azureSubscriptions = new InputList<Inputs.KubernetesAzureSubscriptionArgs>());
            set => _azureSubscriptions = value;
        }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("kubeconfigs")]
        private InputList<Inputs.KubernetesKubeconfigArgs>? _kubeconfigs;

        /// <summary>
        /// A `kubeconfig` block defined blow.
        /// </summary>
        public InputList<Inputs.KubernetesKubeconfigArgs> Kubeconfigs
        {
            get => _kubeconfigs ?? (_kubeconfigs = new InputList<Inputs.KubernetesKubeconfigArgs>());
            set => _kubeconfigs = value;
        }

        /// <summary>
        /// The ID of the project.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        [Input("serviceAccounts")]
        private InputList<Inputs.KubernetesServiceAccountArgs>? _serviceAccounts;

        /// <summary>
        /// A `service_account` block defined blow.
        /// </summary>
        public InputList<Inputs.KubernetesServiceAccountArgs> ServiceAccounts
        {
            get => _serviceAccounts ?? (_serviceAccounts = new InputList<Inputs.KubernetesServiceAccountArgs>());
            set => _serviceAccounts = value;
        }

        /// <summary>
        /// The Service Endpoint name.
        /// </summary>
        [Input("serviceEndpointName", required: true)]
        public Input<string> ServiceEndpointName { get; set; } = null!;

        public KubernetesArgs()
        {
        }
    }

    public sealed class KubernetesState : Pulumi.ResourceArgs
    {
        /// <summary>
        /// The hostname (in form of URI) of the Kubernetes API.
        /// </summary>
        [Input("apiserverUrl")]
        public Input<string>? ApiserverUrl { get; set; }

        [Input("authorization")]
        private InputMap<string>? _authorization;
        public InputMap<string> Authorization
        {
            get => _authorization ?? (_authorization = new InputMap<string>());
            set => _authorization = value;
        }

        /// <summary>
        /// The authentication method used to authenticate on the Kubernetes cluster. The value should be one of AzureSubscription, Kubeconfig, ServiceAccount.
        /// </summary>
        [Input("authorizationType")]
        public Input<string>? AuthorizationType { get; set; }

        [Input("azureSubscriptions")]
        private InputList<Inputs.KubernetesAzureSubscriptionGetArgs>? _azureSubscriptions;

        /// <summary>
        /// A `azure_subscription` block defined blow.
        /// </summary>
        public InputList<Inputs.KubernetesAzureSubscriptionGetArgs> AzureSubscriptions
        {
            get => _azureSubscriptions ?? (_azureSubscriptions = new InputList<Inputs.KubernetesAzureSubscriptionGetArgs>());
            set => _azureSubscriptions = value;
        }

        [Input("description")]
        public Input<string>? Description { get; set; }

        [Input("kubeconfigs")]
        private InputList<Inputs.KubernetesKubeconfigGetArgs>? _kubeconfigs;

        /// <summary>
        /// A `kubeconfig` block defined blow.
        /// </summary>
        public InputList<Inputs.KubernetesKubeconfigGetArgs> Kubeconfigs
        {
            get => _kubeconfigs ?? (_kubeconfigs = new InputList<Inputs.KubernetesKubeconfigGetArgs>());
            set => _kubeconfigs = value;
        }

        /// <summary>
        /// The ID of the project.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        [Input("serviceAccounts")]
        private InputList<Inputs.KubernetesServiceAccountGetArgs>? _serviceAccounts;

        /// <summary>
        /// A `service_account` block defined blow.
        /// </summary>
        public InputList<Inputs.KubernetesServiceAccountGetArgs> ServiceAccounts
        {
            get => _serviceAccounts ?? (_serviceAccounts = new InputList<Inputs.KubernetesServiceAccountGetArgs>());
            set => _serviceAccounts = value;
        }

        /// <summary>
        /// The Service Endpoint name.
        /// </summary>
        [Input("serviceEndpointName")]
        public Input<string>? ServiceEndpointName { get; set; }

        public KubernetesState()
        {
        }
    }
}
