// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureDevOps
{
    /// <summary>
    /// Manages a Visual Studio Marketplace service endpoint within Azure DevOps. Using this service endpoint requires you to install: [Azure DevOps Extension Tasks](https://marketplace.visualstudio.com/items?itemName=ms-devlabs.vsts-developer-tools-build-tasks)
    /// 
    /// ## Example Usage
    /// 
    /// ### With Token
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AzureDevOps = Pulumi.AzureDevOps;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new AzureDevOps.Project("example", new()
    ///     {
    ///         Name = "Example Project",
    ///         Visibility = "private",
    ///         VersionControl = "Git",
    ///         WorkItemTemplate = "Agile",
    ///         Description = "Managed by Pulumi",
    ///     });
    /// 
    ///     var exampleServiceendpointVisualstudiomarketplace = new AzureDevOps.ServiceendpointVisualstudiomarketplace("example", new()
    ///     {
    ///         ProjectId = example.Id,
    ///         ServiceEndpointName = "Example Marketplace",
    ///         Url = "https://markpetplace.com",
    ///         AuthenticationToken = new AzureDevOps.Inputs.ServiceendpointVisualstudiomarketplaceAuthenticationTokenArgs
    ///         {
    ///             Token = "token",
    ///         },
    ///         Description = "Managed by Pulumi",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ### With Username And Password
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AzureDevOps = Pulumi.AzureDevOps;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new AzureDevOps.Project("example", new()
    ///     {
    ///         Name = "Example Project",
    ///         Visibility = "private",
    ///         VersionControl = "Git",
    ///         WorkItemTemplate = "Agile",
    ///         Description = "Managed by Pulumi",
    ///     });
    /// 
    ///     var exampleServiceendpointVisualstudiomarketplace = new AzureDevOps.ServiceendpointVisualstudiomarketplace("example", new()
    ///     {
    ///         ProjectId = example.Id,
    ///         ServiceEndpointName = "Example Marketplace",
    ///         Url = "https://markpetplace.com",
    ///         AuthenticationBasic = new AzureDevOps.Inputs.ServiceendpointVisualstudiomarketplaceAuthenticationBasicArgs
    ///         {
    ///             Username = "username",
    ///             Password = "password",
    ///         },
    ///         Description = "Managed by Pulumi",
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Relevant Links
    /// 
    /// - [Azure DevOps Service REST API 7.0 - Endpoints](https://docs.microsoft.com/en-us/rest/api/azure/devops/serviceendpoint/endpoints?view=azure-devops-rest-7.0)
    /// 
    /// ## Import
    /// 
    /// Azure DevOps Visual Studio Marketplace Service Endpoint can be imported using **projectID/serviceEndpointID** or **projectName/serviceEndpointID**
    /// 
    /// ```sh
    /// $ pulumi import azuredevops:index/serviceendpointVisualstudiomarketplace:ServiceendpointVisualstudiomarketplace example 00000000-0000-0000-0000-000000000000/00000000-0000-0000-0000-000000000000
    /// ```
    /// </summary>
    [AzureDevOpsResourceType("azuredevops:index/serviceendpointVisualstudiomarketplace:ServiceendpointVisualstudiomarketplace")]
    public partial class ServiceendpointVisualstudiomarketplace : global::Pulumi.CustomResource
    {
        /// <summary>
        /// An `authentication_basic` block as documented below.
        /// 
        /// &gt; **NOTE:** `authentication_basic` and `authentication_token` conflict with each other, only one is required.
        /// </summary>
        [Output("authenticationBasic")]
        public Output<Outputs.ServiceendpointVisualstudiomarketplaceAuthenticationBasic?> AuthenticationBasic { get; private set; } = null!;

        /// <summary>
        /// An `authentication_token` block as documented below.
        /// </summary>
        [Output("authenticationToken")]
        public Output<Outputs.ServiceendpointVisualstudiomarketplaceAuthenticationToken?> AuthenticationToken { get; private set; } = null!;

        [Output("authorization")]
        public Output<ImmutableDictionary<string, string>> Authorization { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// The ID of the project.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// The Service Endpoint name.
        /// </summary>
        [Output("serviceEndpointName")]
        public Output<string> ServiceEndpointName { get; private set; } = null!;

        /// <summary>
        /// The server URL for Visual Studio Marketplace.
        /// </summary>
        [Output("url")]
        public Output<string> Url { get; private set; } = null!;


        /// <summary>
        /// Create a ServiceendpointVisualstudiomarketplace resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServiceendpointVisualstudiomarketplace(string name, ServiceendpointVisualstudiomarketplaceArgs args, CustomResourceOptions? options = null)
            : base("azuredevops:index/serviceendpointVisualstudiomarketplace:ServiceendpointVisualstudiomarketplace", name, args ?? new ServiceendpointVisualstudiomarketplaceArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServiceendpointVisualstudiomarketplace(string name, Input<string> id, ServiceendpointVisualstudiomarketplaceState? state = null, CustomResourceOptions? options = null)
            : base("azuredevops:index/serviceendpointVisualstudiomarketplace:ServiceendpointVisualstudiomarketplace", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServiceendpointVisualstudiomarketplace resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServiceendpointVisualstudiomarketplace Get(string name, Input<string> id, ServiceendpointVisualstudiomarketplaceState? state = null, CustomResourceOptions? options = null)
        {
            return new ServiceendpointVisualstudiomarketplace(name, id, state, options);
        }
    }

    public sealed class ServiceendpointVisualstudiomarketplaceArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// An `authentication_basic` block as documented below.
        /// 
        /// &gt; **NOTE:** `authentication_basic` and `authentication_token` conflict with each other, only one is required.
        /// </summary>
        [Input("authenticationBasic")]
        public Input<Inputs.ServiceendpointVisualstudiomarketplaceAuthenticationBasicArgs>? AuthenticationBasic { get; set; }

        /// <summary>
        /// An `authentication_token` block as documented below.
        /// </summary>
        [Input("authenticationToken")]
        public Input<Inputs.ServiceendpointVisualstudiomarketplaceAuthenticationTokenArgs>? AuthenticationToken { get; set; }

        [Input("authorization")]
        private InputMap<string>? _authorization;
        public InputMap<string> Authorization
        {
            get => _authorization ?? (_authorization = new InputMap<string>());
            set => _authorization = value;
        }

        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The ID of the project.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        /// <summary>
        /// The Service Endpoint name.
        /// </summary>
        [Input("serviceEndpointName", required: true)]
        public Input<string> ServiceEndpointName { get; set; } = null!;

        /// <summary>
        /// The server URL for Visual Studio Marketplace.
        /// </summary>
        [Input("url", required: true)]
        public Input<string> Url { get; set; } = null!;

        public ServiceendpointVisualstudiomarketplaceArgs()
        {
        }
        public static new ServiceendpointVisualstudiomarketplaceArgs Empty => new ServiceendpointVisualstudiomarketplaceArgs();
    }

    public sealed class ServiceendpointVisualstudiomarketplaceState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// An `authentication_basic` block as documented below.
        /// 
        /// &gt; **NOTE:** `authentication_basic` and `authentication_token` conflict with each other, only one is required.
        /// </summary>
        [Input("authenticationBasic")]
        public Input<Inputs.ServiceendpointVisualstudiomarketplaceAuthenticationBasicGetArgs>? AuthenticationBasic { get; set; }

        /// <summary>
        /// An `authentication_token` block as documented below.
        /// </summary>
        [Input("authenticationToken")]
        public Input<Inputs.ServiceendpointVisualstudiomarketplaceAuthenticationTokenGetArgs>? AuthenticationToken { get; set; }

        [Input("authorization")]
        private InputMap<string>? _authorization;
        public InputMap<string> Authorization
        {
            get => _authorization ?? (_authorization = new InputMap<string>());
            set => _authorization = value;
        }

        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// The ID of the project.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// The Service Endpoint name.
        /// </summary>
        [Input("serviceEndpointName")]
        public Input<string>? ServiceEndpointName { get; set; }

        /// <summary>
        /// The server URL for Visual Studio Marketplace.
        /// </summary>
        [Input("url")]
        public Input<string>? Url { get; set; }

        public ServiceendpointVisualstudiomarketplaceState()
        {
        }
        public static new ServiceendpointVisualstudiomarketplaceState Empty => new ServiceendpointVisualstudiomarketplaceState();
    }
}
