// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureDevOps
{
    /// <summary>
    /// Manages a Kubernetes service endpoint within Azure DevOps.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AzureDevOps = Pulumi.AzureDevOps;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new AzureDevOps.Project("example", new()
    ///     {
    ///         Name = "Example Project",
    ///         Visibility = "private",
    ///         VersionControl = "Git",
    ///         WorkItemTemplate = "Agile",
    ///         Description = "Managed by Pulumi",
    ///     });
    /// 
    ///     var example_azure = new AzureDevOps.ServiceEndpointKubernetes("example-azure", new()
    ///     {
    ///         ProjectId = example.Id,
    ///         ServiceEndpointName = "Example Kubernetes",
    ///         ApiserverUrl = "https://sample-kubernetes-cluster.hcp.westeurope.azmk8s.io",
    ///         AuthorizationType = "AzureSubscription",
    ///         AzureSubscriptions = new[]
    ///         {
    ///             new AzureDevOps.Inputs.ServiceEndpointKubernetesAzureSubscriptionArgs
    ///             {
    ///                 SubscriptionId = "00000000-0000-0000-0000-000000000000",
    ///                 SubscriptionName = "Example",
    ///                 TenantId = "00000000-0000-0000-0000-000000000000",
    ///                 ResourcegroupId = "example-rg",
    ///                 Namespace = "default",
    ///                 ClusterName = "example-aks",
    ///             },
    ///         },
    ///     });
    /// 
    ///     var example_kubeconfig = new AzureDevOps.ServiceEndpointKubernetes("example-kubeconfig", new()
    ///     {
    ///         ProjectId = example.Id,
    ///         ServiceEndpointName = "Example Kubernetes",
    ///         ApiserverUrl = "https://sample-kubernetes-cluster.hcp.westeurope.azmk8s.io",
    ///         AuthorizationType = "Kubeconfig",
    ///         Kubeconfig = new AzureDevOps.Inputs.ServiceEndpointKubernetesKubeconfigArgs
    ///         {
    ///             KubeConfig = @"                              apiVersion: v1
    ///                               clusters:
    ///                               - cluster:
    ///                                   certificate-authority: fake-ca-file
    ///                                   server: https://1.2.3.4
    ///                                 name: development
    ///                               contexts:
    ///                               - context:
    ///                                   cluster: development
    ///                                   namespace: frontend
    ///                                   user: developer
    ///                                 name: dev-frontend
    ///                               current-context: dev-frontend
    ///                               kind: Config
    ///                               preferences: {}
    ///                               users:
    ///                               - name: developer
    ///                                 user:
    ///                                   client-certificate: fake-cert-file
    ///                                   client-key: fake-key-file
    /// ",
    ///             AcceptUntrustedCerts = true,
    ///             ClusterContext = "dev-frontend",
    ///         },
    ///     });
    /// 
    ///     var example_service_account = new AzureDevOps.ServiceEndpointKubernetes("example-service-account", new()
    ///     {
    ///         ProjectId = example.Id,
    ///         ServiceEndpointName = "Example Kubernetes",
    ///         ApiserverUrl = "https://sample-kubernetes-cluster.hcp.westeurope.azmk8s.io",
    ///         AuthorizationType = "ServiceAccount",
    ///         ServiceAccount = new AzureDevOps.Inputs.ServiceEndpointKubernetesServiceAccountArgs
    ///         {
    ///             Token = "000000000000000000000000",
    ///             CaCert = "0000000000000000000000000000000",
    ///         },
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Relevant Links
    /// 
    /// - [Azure DevOps Service REST API 7.0 - Endpoints](https://docs.microsoft.com/en-us/rest/api/azure/devops/serviceendpoint/endpoints?view=azure-devops-rest-7.0)
    /// 
    /// ## Import
    /// 
    /// Azure DevOps Kubernetes Service Endpoint can be imported using **projectID/serviceEndpointID** or **projectName/serviceEndpointID**
    /// 
    /// ```sh
    /// $ pulumi import azuredevops:index/serviceEndpointKubernetes:ServiceEndpointKubernetes example 00000000-0000-0000-0000-000000000000/00000000-0000-0000-0000-000000000000
    /// ```
    /// </summary>
    [AzureDevOpsResourceType("azuredevops:index/serviceEndpointKubernetes:ServiceEndpointKubernetes")]
    public partial class ServiceEndpointKubernetes : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The hostname (in form of URI) of the Kubernetes API.
        /// </summary>
        [Output("apiserverUrl")]
        public Output<string> ApiserverUrl { get; private set; } = null!;

        [Output("authorization")]
        public Output<ImmutableDictionary<string, string>> Authorization { get; private set; } = null!;

        /// <summary>
        /// The authentication method used to authenticate on the Kubernetes cluster. The value should be one of AzureSubscription, Kubeconfig, ServiceAccount.
        /// </summary>
        [Output("authorizationType")]
        public Output<string> AuthorizationType { get; private set; } = null!;

        /// <summary>
        /// An `AzureSubscription` block as defined below.
        /// </summary>
        [Output("azureSubscriptions")]
        public Output<ImmutableArray<Outputs.ServiceEndpointKubernetesAzureSubscription>> AzureSubscriptions { get; private set; } = null!;

        [Output("description")]
        public Output<string?> Description { get; private set; } = null!;

        /// <summary>
        /// A `Kubeconfig` block as defined below.
        /// </summary>
        [Output("kubeconfig")]
        public Output<Outputs.ServiceEndpointKubernetesKubeconfig?> Kubeconfig { get; private set; } = null!;

        /// <summary>
        /// The ID of the project.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// A `ServiceAccount` block as defined below.
        /// </summary>
        [Output("serviceAccount")]
        public Output<Outputs.ServiceEndpointKubernetesServiceAccount?> ServiceAccount { get; private set; } = null!;

        /// <summary>
        /// The Service Endpoint name.
        /// </summary>
        [Output("serviceEndpointName")]
        public Output<string> ServiceEndpointName { get; private set; } = null!;


        /// <summary>
        /// Create a ServiceEndpointKubernetes resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public ServiceEndpointKubernetes(string name, ServiceEndpointKubernetesArgs args, CustomResourceOptions? options = null)
            : base("azuredevops:index/serviceEndpointKubernetes:ServiceEndpointKubernetes", name, args ?? new ServiceEndpointKubernetesArgs(), MakeResourceOptions(options, ""))
        {
        }

        private ServiceEndpointKubernetes(string name, Input<string> id, ServiceEndpointKubernetesState? state = null, CustomResourceOptions? options = null)
            : base("azuredevops:index/serviceEndpointKubernetes:ServiceEndpointKubernetes", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing ServiceEndpointKubernetes resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static ServiceEndpointKubernetes Get(string name, Input<string> id, ServiceEndpointKubernetesState? state = null, CustomResourceOptions? options = null)
        {
            return new ServiceEndpointKubernetes(name, id, state, options);
        }
    }

    public sealed class ServiceEndpointKubernetesArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The hostname (in form of URI) of the Kubernetes API.
        /// </summary>
        [Input("apiserverUrl", required: true)]
        public Input<string> ApiserverUrl { get; set; } = null!;

        /// <summary>
        /// The authentication method used to authenticate on the Kubernetes cluster. The value should be one of AzureSubscription, Kubeconfig, ServiceAccount.
        /// </summary>
        [Input("authorizationType", required: true)]
        public Input<string> AuthorizationType { get; set; } = null!;

        [Input("azureSubscriptions")]
        private InputList<Inputs.ServiceEndpointKubernetesAzureSubscriptionArgs>? _azureSubscriptions;

        /// <summary>
        /// An `AzureSubscription` block as defined below.
        /// </summary>
        public InputList<Inputs.ServiceEndpointKubernetesAzureSubscriptionArgs> AzureSubscriptions
        {
            get => _azureSubscriptions ?? (_azureSubscriptions = new InputList<Inputs.ServiceEndpointKubernetesAzureSubscriptionArgs>());
            set => _azureSubscriptions = value;
        }

        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// A `Kubeconfig` block as defined below.
        /// </summary>
        [Input("kubeconfig")]
        public Input<Inputs.ServiceEndpointKubernetesKubeconfigArgs>? Kubeconfig { get; set; }

        /// <summary>
        /// The ID of the project.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        /// <summary>
        /// A `ServiceAccount` block as defined below.
        /// </summary>
        [Input("serviceAccount")]
        public Input<Inputs.ServiceEndpointKubernetesServiceAccountArgs>? ServiceAccount { get; set; }

        /// <summary>
        /// The Service Endpoint name.
        /// </summary>
        [Input("serviceEndpointName", required: true)]
        public Input<string> ServiceEndpointName { get; set; } = null!;

        public ServiceEndpointKubernetesArgs()
        {
        }
        public static new ServiceEndpointKubernetesArgs Empty => new ServiceEndpointKubernetesArgs();
    }

    public sealed class ServiceEndpointKubernetesState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The hostname (in form of URI) of the Kubernetes API.
        /// </summary>
        [Input("apiserverUrl")]
        public Input<string>? ApiserverUrl { get; set; }

        [Input("authorization")]
        private InputMap<string>? _authorization;
        public InputMap<string> Authorization
        {
            get => _authorization ?? (_authorization = new InputMap<string>());
            set => _authorization = value;
        }

        /// <summary>
        /// The authentication method used to authenticate on the Kubernetes cluster. The value should be one of AzureSubscription, Kubeconfig, ServiceAccount.
        /// </summary>
        [Input("authorizationType")]
        public Input<string>? AuthorizationType { get; set; }

        [Input("azureSubscriptions")]
        private InputList<Inputs.ServiceEndpointKubernetesAzureSubscriptionGetArgs>? _azureSubscriptions;

        /// <summary>
        /// An `AzureSubscription` block as defined below.
        /// </summary>
        public InputList<Inputs.ServiceEndpointKubernetesAzureSubscriptionGetArgs> AzureSubscriptions
        {
            get => _azureSubscriptions ?? (_azureSubscriptions = new InputList<Inputs.ServiceEndpointKubernetesAzureSubscriptionGetArgs>());
            set => _azureSubscriptions = value;
        }

        [Input("description")]
        public Input<string>? Description { get; set; }

        /// <summary>
        /// A `Kubeconfig` block as defined below.
        /// </summary>
        [Input("kubeconfig")]
        public Input<Inputs.ServiceEndpointKubernetesKubeconfigGetArgs>? Kubeconfig { get; set; }

        /// <summary>
        /// The ID of the project.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// A `ServiceAccount` block as defined below.
        /// </summary>
        [Input("serviceAccount")]
        public Input<Inputs.ServiceEndpointKubernetesServiceAccountGetArgs>? ServiceAccount { get; set; }

        /// <summary>
        /// The Service Endpoint name.
        /// </summary>
        [Input("serviceEndpointName")]
        public Input<string>? ServiceEndpointName { get; set; }

        public ServiceEndpointKubernetesState()
        {
        }
        public static new ServiceEndpointKubernetesState Empty => new ServiceEndpointKubernetesState();
    }
}
