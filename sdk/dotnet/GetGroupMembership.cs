// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureDevOps
{
    public static class GetGroupMembership
    {
        /// <summary>
        /// Use this data source to access information about an existing Group Memberships within Azure DevOps
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AzureDevOps = Pulumi.AzureDevOps;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = AzureDevOps.GetGroupMembership.Invoke(new()
        ///     {
        ///         GroupDescriptor = "groupdescroptpr",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ## Relevant Links
        /// 
        /// - [Azure DevOps Service REST API 7.1 - Memberships](https://docs.microsoft.com/en-us/rest/api/azure/devops/graph/memberships?view=azure-devops-rest-7.1)
        /// </summary>
        public static Task<GetGroupMembershipResult> InvokeAsync(GetGroupMembershipArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetGroupMembershipResult>("azuredevops:index/getGroupMembership:getGroupMembership", args ?? new GetGroupMembershipArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Group Memberships within Azure DevOps
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AzureDevOps = Pulumi.AzureDevOps;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = AzureDevOps.GetGroupMembership.Invoke(new()
        ///     {
        ///         GroupDescriptor = "groupdescroptpr",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ## Relevant Links
        /// 
        /// - [Azure DevOps Service REST API 7.1 - Memberships](https://docs.microsoft.com/en-us/rest/api/azure/devops/graph/memberships?view=azure-devops-rest-7.1)
        /// </summary>
        public static Output<GetGroupMembershipResult> Invoke(GetGroupMembershipInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetGroupMembershipResult>("azuredevops:index/getGroupMembership:getGroupMembership", args ?? new GetGroupMembershipInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Group Memberships within Azure DevOps
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AzureDevOps = Pulumi.AzureDevOps;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = AzureDevOps.GetGroupMembership.Invoke(new()
        ///     {
        ///         GroupDescriptor = "groupdescroptpr",
        ///     });
        /// 
        /// });
        /// ```
        /// 
        /// ## Relevant Links
        /// 
        /// - [Azure DevOps Service REST API 7.1 - Memberships](https://docs.microsoft.com/en-us/rest/api/azure/devops/graph/memberships?view=azure-devops-rest-7.1)
        /// </summary>
        public static Output<GetGroupMembershipResult> Invoke(GetGroupMembershipInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetGroupMembershipResult>("azuredevops:index/getGroupMembership:getGroupMembership", args ?? new GetGroupMembershipInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetGroupMembershipArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The descriptor of the group.
        /// </summary>
        [Input("groupDescriptor", required: true)]
        public string GroupDescriptor { get; set; } = null!;

        public GetGroupMembershipArgs()
        {
        }
        public static new GetGroupMembershipArgs Empty => new GetGroupMembershipArgs();
    }

    public sealed class GetGroupMembershipInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The descriptor of the group.
        /// </summary>
        [Input("groupDescriptor", required: true)]
        public Input<string> GroupDescriptor { get; set; } = null!;

        public GetGroupMembershipInvokeArgs()
        {
        }
        public static new GetGroupMembershipInvokeArgs Empty => new GetGroupMembershipInvokeArgs();
    }


    [OutputType]
    public sealed class GetGroupMembershipResult
    {
        public readonly string GroupDescriptor;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// A list of user or group descriptors.
        /// </summary>
        public readonly ImmutableArray<string> Members;

        [OutputConstructor]
        private GetGroupMembershipResult(
            string groupDescriptor,

            string id,

            ImmutableArray<string> members)
        {
            GroupDescriptor = groupDescriptor;
            Id = id;
            Members = members;
        }
    }
}
