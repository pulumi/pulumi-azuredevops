// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureDevOps.Outputs
{

    [OutputType]
    public sealed class BranchPolicyBuildValidationSettings
    {
        /// <summary>
        /// The ID of the build to monitor for the policy.
        /// </summary>
        public readonly int BuildDefinitionId;
        /// <summary>
        /// The display name for the policy.
        /// </summary>
        public readonly string DisplayName;
        /// <summary>
        /// If a path filter is set, the policy will only apply when files which match the filter are changes. Not setting this field means that the policy will always apply. You can specify absolute paths and wildcards. Example: `["/WebApp/Models/Data.cs", "/WebApp/*", "*.cs"]`. Paths prefixed with "!" are excluded. Example: `["/WebApp/*", "!/WebApp/Tests/*"]`. Order is significant.
        /// </summary>
        public readonly ImmutableArray<string> FilenamePatterns;
        /// <summary>
        /// If set to true, the build will need to be manually queued. Defaults to `false`
        /// </summary>
        public readonly bool? ManualQueueOnly;
        /// <summary>
        /// True if the build should queue on source updates only. Defaults to `true`.
        /// </summary>
        public readonly bool? QueueOnSourceUpdateOnly;
        /// <summary>
        /// Controls which repositories and branches the policy will be enabled for. This block must be defined at least once.
        /// </summary>
        public readonly ImmutableArray<Outputs.BranchPolicyBuildValidationSettingsScope> Scopes;
        /// <summary>
        /// The number of minutes for which the build is valid. If `0`, the build will not expire. Defaults to `720` (12 hours).
        /// </summary>
        public readonly int? ValidDuration;

        [OutputConstructor]
        private BranchPolicyBuildValidationSettings(
            int buildDefinitionId,

            string displayName,

            ImmutableArray<string> filenamePatterns,

            bool? manualQueueOnly,

            bool? queueOnSourceUpdateOnly,

            ImmutableArray<Outputs.BranchPolicyBuildValidationSettingsScope> scopes,

            int? validDuration)
        {
            BuildDefinitionId = buildDefinitionId;
            DisplayName = displayName;
            FilenamePatterns = filenamePatterns;
            ManualQueueOnly = manualQueueOnly;
            QueueOnSourceUpdateOnly = queueOnSourceUpdateOnly;
            Scopes = scopes;
            ValidDuration = validDuration;
        }
    }
}
