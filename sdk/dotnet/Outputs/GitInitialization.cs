// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureDevOps.Outputs
{

    [OutputType]
    public sealed class GitInitialization
    {
        /// <summary>
        /// The type of repository to create. Valid values: `Uninitialized`, `Clean` or `Import`.
        /// </summary>
        public readonly string InitType;
        /// <summary>
        /// **NOTE:** This field is write-only and its value will not be updated in state as part of read operations.
        /// The password used to authenticate to a private repository for import initialization. Conflicts with `ServiceConnectionId`. Note: This is a write-only attribute, which allows ephemeral resources to be used.
        /// 
        /// ~&gt;**Note** At least `ServiceConnectionId` or `username/password` needs to be set to import private repository.
        /// </summary>
        public readonly string? Password;
        /// <summary>
        /// The ID of service connection used to authenticate to a private repository for import initialization. Conflicts with `Username` and `Password`.
        /// </summary>
        public readonly string? ServiceConnectionId;
        /// <summary>
        /// Type of the source repository. Used if the `InitType` is `Import`. Valid values: `Git`.
        /// </summary>
        public readonly string? SourceType;
        /// <summary>
        /// The URL of the source repository. Used if the `InitType` is `Import`.
        /// </summary>
        public readonly string? SourceUrl;
        /// <summary>
        /// The username used to authenticate to a private repository for import initialization. Conflicts with `ServiceConnectionId`.
        /// </summary>
        public readonly string? Username;

        [OutputConstructor]
        private GitInitialization(
            string initType,

            string? password,

            string? serviceConnectionId,

            string? sourceType,

            string? sourceUrl,

            string? username)
        {
            InitType = initType;
            Password = password;
            ServiceConnectionId = serviceConnectionId;
            SourceType = sourceType;
            SourceUrl = sourceUrl;
            Username = username;
        }
    }
}
