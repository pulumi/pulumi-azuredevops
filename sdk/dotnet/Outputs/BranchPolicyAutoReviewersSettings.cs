// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureDevOps.Outputs
{

    [OutputType]
    public sealed class BranchPolicyAutoReviewersSettings
    {
        /// <summary>
        /// Required reviewers ids. Supports multiples user Ids.
        /// </summary>
        public readonly ImmutableArray<string> AutoReviewerIds;
        /// <summary>
        /// Activity feed message, Message will appear in the activity feed of pull requests with automatically added reviewers.
        /// </summary>
        public readonly string? Message;
        /// <summary>
        /// Minimum number of required reviewers. Defaults to `1`.
        /// 
        /// &gt; **Note** Has to be greater than `0`. Can only be greater than `1` when attribute `auto_reviewer_ids` contains exactly one group! Only has an effect when attribute `blocking` is set to `true`.
        /// </summary>
        public readonly int? MinimumNumberOfReviewers;
        /// <summary>
        /// Filter path(s) on which the policy is applied. Supports absolute paths, wildcards and multiple paths. Example: /WebApp/Models/Data.cs, /WebApp/* or *.cs,/WebApp/Models/Data.cs;ClientApp/Models/Data.cs.
        /// </summary>
        public readonly ImmutableArray<string> PathFilters;
        /// <summary>
        /// A `scope` block as defined below. Controls which repositories and branches the policy will be enabled for. This block must be defined at least once.
        /// </summary>
        public readonly ImmutableArray<Outputs.BranchPolicyAutoReviewersSettingsScope> Scopes;
        /// <summary>
        /// Controls whether or not the submitter's vote counts. Defaults to `false`.
        /// </summary>
        public readonly bool? SubmitterCanVote;

        [OutputConstructor]
        private BranchPolicyAutoReviewersSettings(
            ImmutableArray<string> autoReviewerIds,

            string? message,

            int? minimumNumberOfReviewers,

            ImmutableArray<string> pathFilters,

            ImmutableArray<Outputs.BranchPolicyAutoReviewersSettingsScope> scopes,

            bool? submitterCanVote)
        {
            AutoReviewerIds = autoReviewerIds;
            Message = message;
            MinimumNumberOfReviewers = minimumNumberOfReviewers;
            PathFilters = pathFilters;
            Scopes = scopes;
            SubmitterCanVote = submitterCanVote;
        }
    }
}
