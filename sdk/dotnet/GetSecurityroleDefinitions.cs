// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureDevOps
{
    public static class GetSecurityroleDefinitions
    {
        /// <summary>
        /// Use this data source to access information about existing Security Role Definitions within a given scope in Azure DevOps.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AzureDevOps = Pulumi.AzureDevOps;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = AzureDevOps.GetSecurityroleDefinitions.Invoke(new()
        ///     {
        ///         Scope = "distributedtask.environmentreferencerole",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["securityroleDefinitions"] = exampleAazuredevopsSecurityroleDefinitions.Definitions,
        ///     };
        /// });
        /// ```
        /// 
        /// ## Relevant Links
        /// 
        /// - [Azure DevOps Service REST API 7.0 - Role Definitions - List](https://learn.microsoft.com/en-us/rest/api/azure/devops/securityroles/roledefinitions/list?view=azure-devops-rest-7.1)
        /// </summary>
        public static Task<GetSecurityroleDefinitionsResult> InvokeAsync(GetSecurityroleDefinitionsArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetSecurityroleDefinitionsResult>("azuredevops:index/getSecurityroleDefinitions:getSecurityroleDefinitions", args ?? new GetSecurityroleDefinitionsArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about existing Security Role Definitions within a given scope in Azure DevOps.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AzureDevOps = Pulumi.AzureDevOps;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = AzureDevOps.GetSecurityroleDefinitions.Invoke(new()
        ///     {
        ///         Scope = "distributedtask.environmentreferencerole",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["securityroleDefinitions"] = exampleAazuredevopsSecurityroleDefinitions.Definitions,
        ///     };
        /// });
        /// ```
        /// 
        /// ## Relevant Links
        /// 
        /// - [Azure DevOps Service REST API 7.0 - Role Definitions - List](https://learn.microsoft.com/en-us/rest/api/azure/devops/securityroles/roledefinitions/list?view=azure-devops-rest-7.1)
        /// </summary>
        public static Output<GetSecurityroleDefinitionsResult> Invoke(GetSecurityroleDefinitionsInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetSecurityroleDefinitionsResult>("azuredevops:index/getSecurityroleDefinitions:getSecurityroleDefinitions", args ?? new GetSecurityroleDefinitionsInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about existing Security Role Definitions within a given scope in Azure DevOps.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AzureDevOps = Pulumi.AzureDevOps;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = AzureDevOps.GetSecurityroleDefinitions.Invoke(new()
        ///     {
        ///         Scope = "distributedtask.environmentreferencerole",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["securityroleDefinitions"] = exampleAazuredevopsSecurityroleDefinitions.Definitions,
        ///     };
        /// });
        /// ```
        /// 
        /// ## Relevant Links
        /// 
        /// - [Azure DevOps Service REST API 7.0 - Role Definitions - List](https://learn.microsoft.com/en-us/rest/api/azure/devops/securityroles/roledefinitions/list?view=azure-devops-rest-7.1)
        /// </summary>
        public static Output<GetSecurityroleDefinitionsResult> Invoke(GetSecurityroleDefinitionsInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetSecurityroleDefinitionsResult>("azuredevops:index/getSecurityroleDefinitions:getSecurityroleDefinitions", args ?? new GetSecurityroleDefinitionsInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetSecurityroleDefinitionsArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Scope for which Security Role Definitions will be returned.
        /// 
        /// &gt; **NOTE:** DataSource without specifying any arguments will return all projects.
        /// </summary>
        [Input("scope", required: true)]
        public string Scope { get; set; } = null!;

        public GetSecurityroleDefinitionsArgs()
        {
        }
        public static new GetSecurityroleDefinitionsArgs Empty => new GetSecurityroleDefinitionsArgs();
    }

    public sealed class GetSecurityroleDefinitionsInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// Name of the Scope for which Security Role Definitions will be returned.
        /// 
        /// &gt; **NOTE:** DataSource without specifying any arguments will return all projects.
        /// </summary>
        [Input("scope", required: true)]
        public Input<string> Scope { get; set; } = null!;

        public GetSecurityroleDefinitionsInvokeArgs()
        {
        }
        public static new GetSecurityroleDefinitionsInvokeArgs Empty => new GetSecurityroleDefinitionsInvokeArgs();
    }


    [OutputType]
    public sealed class GetSecurityroleDefinitionsResult
    {
        /// <summary>
        /// A list of existing Security Role Definitions in a Scope in your Azure DevOps Organization with details about every definition which includes. A `Definitions` block as defined below.
        /// </summary>
        public readonly ImmutableArray<Outputs.GetSecurityroleDefinitionsDefinitionResult> Definitions;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The scope of the Security Role Definition.
        /// </summary>
        public readonly string Scope;

        [OutputConstructor]
        private GetSecurityroleDefinitionsResult(
            ImmutableArray<Outputs.GetSecurityroleDefinitionsDefinitionResult> definitions,

            string id,

            string scope)
        {
            Definitions = definitions;
            Id = id;
            Scope = scope;
        }
    }
}
