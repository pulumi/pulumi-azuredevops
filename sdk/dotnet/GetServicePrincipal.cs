// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureDevOps
{
    public static class GetServicePrincipal
    {
        /// <summary>
        /// Use this data source to access information about an existing Service Principal.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AzureDevOps = Pulumi.AzureDevOps;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = AzureDevOps.GetServicePrincipal.Invoke(new()
        ///     {
        ///         DisplayName = "existing",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getServicePrincipalResult =&gt; getServicePrincipalResult.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Task<GetServicePrincipalResult> InvokeAsync(GetServicePrincipalArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.InvokeAsync<GetServicePrincipalResult>("azuredevops:index/getServicePrincipal:getServicePrincipal", args ?? new GetServicePrincipalArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Service Principal.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AzureDevOps = Pulumi.AzureDevOps;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = AzureDevOps.GetServicePrincipal.Invoke(new()
        ///     {
        ///         DisplayName = "existing",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getServicePrincipalResult =&gt; getServicePrincipalResult.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetServicePrincipalResult> Invoke(GetServicePrincipalInvokeArgs args, InvokeOptions? options = null)
            => global::Pulumi.Deployment.Instance.Invoke<GetServicePrincipalResult>("azuredevops:index/getServicePrincipal:getServicePrincipal", args ?? new GetServicePrincipalInvokeArgs(), options.WithDefaults());

        /// <summary>
        /// Use this data source to access information about an existing Service Principal.
        /// 
        /// ## Example Usage
        /// 
        /// ```csharp
        /// using System.Collections.Generic;
        /// using System.Linq;
        /// using Pulumi;
        /// using AzureDevOps = Pulumi.AzureDevOps;
        /// 
        /// return await Deployment.RunAsync(() =&gt; 
        /// {
        ///     var example = AzureDevOps.GetServicePrincipal.Invoke(new()
        ///     {
        ///         DisplayName = "existing",
        ///     });
        /// 
        ///     return new Dictionary&lt;string, object?&gt;
        ///     {
        ///         ["id"] = example.Apply(getServicePrincipalResult =&gt; getServicePrincipalResult.Id),
        ///     };
        /// });
        /// ```
        /// </summary>
        public static Output<GetServicePrincipalResult> Invoke(GetServicePrincipalInvokeArgs args, InvokeOutputOptions options)
            => global::Pulumi.Deployment.Instance.Invoke<GetServicePrincipalResult>("azuredevops:index/getServicePrincipal:getServicePrincipal", args ?? new GetServicePrincipalInvokeArgs(), options.WithDefaults());
    }


    public sealed class GetServicePrincipalArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Display Name of the Service Principal. Changing this forces a new Service Principal to be created.
        /// </summary>
        [Input("displayName", required: true)]
        public string DisplayName { get; set; } = null!;

        public GetServicePrincipalArgs()
        {
        }
        public static new GetServicePrincipalArgs Empty => new GetServicePrincipalArgs();
    }

    public sealed class GetServicePrincipalInvokeArgs : global::Pulumi.InvokeArgs
    {
        /// <summary>
        /// The Display Name of the Service Principal. Changing this forces a new Service Principal to be created.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        public GetServicePrincipalInvokeArgs()
        {
        }
        public static new GetServicePrincipalInvokeArgs Empty => new GetServicePrincipalInvokeArgs();
    }


    [OutputType]
    public sealed class GetServicePrincipalResult
    {
        /// <summary>
        /// The descriptor of the Service Principal.
        /// </summary>
        public readonly string Descriptor;
        public readonly string DisplayName;
        /// <summary>
        /// The provider-assigned unique ID for this managed resource.
        /// </summary>
        public readonly string Id;
        /// <summary>
        /// The origin of the Service Principal.
        /// </summary>
        public readonly string Origin;
        /// <summary>
        /// The origin ID of the Service Principal..
        /// </summary>
        public readonly string OriginId;

        [OutputConstructor]
        private GetServicePrincipalResult(
            string descriptor,

            string displayName,

            string id,

            string origin,

            string originId)
        {
            Descriptor = descriptor;
            DisplayName = displayName;
            Id = id;
            Origin = origin;
            OriginId = originId;
        }
    }
}
