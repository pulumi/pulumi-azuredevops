// *** WARNING: this file was generated by pulumi-language-dotnet. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

using System;
using System.Collections.Generic;
using System.Collections.Immutable;
using System.Threading.Tasks;
using Pulumi.Serialization;

namespace Pulumi.AzureDevOps
{
    /// <summary>
    /// Manages a Rest API check on a resource within Azure DevOps.
    /// 
    /// ## Example Usage
    /// 
    /// ```csharp
    /// using System.Collections.Generic;
    /// using System.Linq;
    /// using Pulumi;
    /// using AzureDevOps = Pulumi.AzureDevOps;
    /// 
    /// return await Deployment.RunAsync(() =&gt; 
    /// {
    ///     var example = new AzureDevOps.Project("example", new()
    ///     {
    ///         Name = "Example Project",
    ///     });
    /// 
    ///     var exampleServiceEndpointGeneric = new AzureDevOps.ServiceEndpointGeneric("example", new()
    ///     {
    ///         ProjectId = example.Id,
    ///         ServerUrl = "https://some-server.example.com",
    ///         ServiceEndpointName = "Example Generic",
    ///         Username = "username",
    ///         Password = "password",
    ///         Description = "Managed by Pulumi",
    ///     });
    /// 
    ///     var exampleAzure = new AzureDevOps.ServiceEndpointGeneric("example_azure", new()
    ///     {
    ///         ProjectId = example.Id,
    ///         ServerUrl = "https://dev.azure.com/",
    ///         ServiceEndpointName = "Example Generic Azure",
    ///         Username = "username",
    ///         Password = "dummy",
    ///     });
    /// 
    ///     var exampleVariableGroup = new AzureDevOps.VariableGroup("example", new()
    ///     {
    ///         ProjectId = example.Id,
    ///         Name = "Example Variable Group",
    ///         AllowAccess = true,
    ///         Variables = new[]
    ///         {
    ///             new AzureDevOps.Inputs.VariableGroupVariableArgs
    ///             {
    ///                 Name = "FOO",
    ///                 Value = "BAR",
    ///             },
    ///         },
    ///     });
    /// 
    ///     var exampleCheckRestApi = new AzureDevOps.CheckRestApi("example", new()
    ///     {
    ///         ProjectId = example.Id,
    ///         TargetResourceId = exampleServiceEndpointGeneric.Id,
    ///         TargetResourceType = "endpoint",
    ///         DisplayName = "Example REST API Check",
    ///         ConnectedServiceNameSelector = "connectedServiceName",
    ///         ConnectedServiceName = exampleAzure.ServiceEndpointName,
    ///         Method = "POST",
    ///         Headers = "{\"contentType\":\"application/json\"}",
    ///         Body = "{\"params\":\"value\"}",
    ///         CompletionEvent = "ApiResponse",
    ///         SuccessCriteria = "eq(root['status'], '200')",
    ///         UrlSuffix = "user/1",
    ///         RetryInterval = 4000,
    ///         VariableGroupName = exampleVariableGroup.Name,
    ///         Timeout = 40000,
    ///     });
    /// 
    /// });
    /// ```
    /// 
    /// ## Relevant Links
    /// 
    /// - [Define approvals and checks](https://learn.microsoft.com/en-us/azure/devops/pipelines/process/approvals?view=azure-devops&amp;tabs=check-pass)
    /// 
    /// ## Import
    /// 
    /// Importing this resource is not supported.
    /// </summary>
    [AzureDevOpsResourceType("azuredevops:index/checkRestApi:CheckRestApi")]
    public partial class CheckRestApi : global::Pulumi.CustomResource
    {
        /// <summary>
        /// The Rest API request body.
        /// </summary>
        [Output("body")]
        public Output<string?> Body { get; private set; } = null!;

        /// <summary>
        /// The completion event of the Rest API call. Possible values: `Callback`, `ApiResponse`. Defaults to `Callback`.
        /// </summary>
        [Output("completionEvent")]
        public Output<string?> CompletionEvent { get; private set; } = null!;

        /// <summary>
        /// The name of the Service Connection.
        /// </summary>
        [Output("connectedServiceName")]
        public Output<string> ConnectedServiceName { get; private set; } = null!;

        /// <summary>
        /// The type of the Service Connection used to invoke the REST API. Possible values: `connectedServiceName`(**Generic** type service connection) and `connectedServiceNameARM`(**Azure Resource Manager** type service connection).
        /// </summary>
        [Output("connectedServiceNameSelector")]
        public Output<string> ConnectedServiceNameSelector { get; private set; } = null!;

        /// <summary>
        /// The Name of the Rest API check.
        /// </summary>
        [Output("displayName")]
        public Output<string> DisplayName { get; private set; } = null!;

        /// <summary>
        /// The headers of the request in JSON format.
        /// </summary>
        [Output("headers")]
        public Output<string?> Headers { get; private set; } = null!;

        /// <summary>
        /// The HTTP method of the request. Possible values: `OPTIONS`, `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `TRACE`, `PATCH`
        /// </summary>
        [Output("method")]
        public Output<string> Method { get; private set; } = null!;

        /// <summary>
        /// The ID of the project. Changing this forces a new resource to be created.
        /// </summary>
        [Output("projectId")]
        public Output<string> ProjectId { get; private set; } = null!;

        /// <summary>
        /// The time between evaluations (minutes). 
        /// 
        /// ~&gt;**NOTE** 1. The retry times should less them 10 based on the timeout. For example: `timeout` is `4000` then `retry_interval` should be `0` or no less then `400`.
        /// &lt;br&gt;2. `retry_interval` is not required when `completion_event=Callback`.
        /// </summary>
        [Output("retryInterval")]
        public Output<int?> RetryInterval { get; private set; } = null!;

        /// <summary>
        /// The Criteria which defines when to pass the task. No criteria means response content does not influence the result.
        /// 
        /// ~&gt;**NOTE** `success_criteria` is used when `completion_event=ApiResponse`
        /// </summary>
        [Output("successCriteria")]
        public Output<string?> SuccessCriteria { get; private set; } = null!;

        /// <summary>
        /// The ID of the resource being protected by the check. Changing this forces a new resource to be created
        /// </summary>
        [Output("targetResourceId")]
        public Output<string> TargetResourceId { get; private set; } = null!;

        /// <summary>
        /// The type of resource being protected by the check. Possible values: `endpoint`, `environment`, `queue`, `repository`, `securefile`, `variablegroup`. Changing this forces a new resource to be created.
        /// </summary>
        [Output("targetResourceType")]
        public Output<string> TargetResourceType { get; private set; } = null!;

        /// <summary>
        /// The timeout in minutes for the Rest API check. Defaults to `1440`.
        /// </summary>
        [Output("timeout")]
        public Output<int?> Timeout { get; private set; } = null!;

        /// <summary>
        /// The URL suffix and parameters.
        /// </summary>
        [Output("urlSuffix")]
        public Output<string?> UrlSuffix { get; private set; } = null!;

        /// <summary>
        /// The name of the Variable Group.
        /// </summary>
        [Output("variableGroupName")]
        public Output<string?> VariableGroupName { get; private set; } = null!;

        /// <summary>
        /// The version of the Rest API check.
        /// </summary>
        [Output("version")]
        public Output<int> Version { get; private set; } = null!;


        /// <summary>
        /// Create a CheckRestApi resource with the given unique name, arguments, and options.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resource</param>
        /// <param name="args">The arguments used to populate this resource's properties</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public CheckRestApi(string name, CheckRestApiArgs args, CustomResourceOptions? options = null)
            : base("azuredevops:index/checkRestApi:CheckRestApi", name, args ?? new CheckRestApiArgs(), MakeResourceOptions(options, ""))
        {
        }

        private CheckRestApi(string name, Input<string> id, CheckRestApiState? state = null, CustomResourceOptions? options = null)
            : base("azuredevops:index/checkRestApi:CheckRestApi", name, state, MakeResourceOptions(options, id))
        {
        }

        private static CustomResourceOptions MakeResourceOptions(CustomResourceOptions? options, Input<string>? id)
        {
            var defaultOptions = new CustomResourceOptions
            {
                Version = Utilities.Version,
            };
            var merged = CustomResourceOptions.Merge(defaultOptions, options);
            // Override the ID if one was specified for consistency with other language SDKs.
            merged.Id = id ?? merged.Id;
            return merged;
        }
        /// <summary>
        /// Get an existing CheckRestApi resource's state with the given name, ID, and optional extra
        /// properties used to qualify the lookup.
        /// </summary>
        ///
        /// <param name="name">The unique name of the resulting resource.</param>
        /// <param name="id">The unique provider ID of the resource to lookup.</param>
        /// <param name="state">Any extra arguments used during the lookup.</param>
        /// <param name="options">A bag of options that control this resource's behavior</param>
        public static CheckRestApi Get(string name, Input<string> id, CheckRestApiState? state = null, CustomResourceOptions? options = null)
        {
            return new CheckRestApi(name, id, state, options);
        }
    }

    public sealed class CheckRestApiArgs : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Rest API request body.
        /// </summary>
        [Input("body")]
        public Input<string>? Body { get; set; }

        /// <summary>
        /// The completion event of the Rest API call. Possible values: `Callback`, `ApiResponse`. Defaults to `Callback`.
        /// </summary>
        [Input("completionEvent")]
        public Input<string>? CompletionEvent { get; set; }

        /// <summary>
        /// The name of the Service Connection.
        /// </summary>
        [Input("connectedServiceName", required: true)]
        public Input<string> ConnectedServiceName { get; set; } = null!;

        /// <summary>
        /// The type of the Service Connection used to invoke the REST API. Possible values: `connectedServiceName`(**Generic** type service connection) and `connectedServiceNameARM`(**Azure Resource Manager** type service connection).
        /// </summary>
        [Input("connectedServiceNameSelector", required: true)]
        public Input<string> ConnectedServiceNameSelector { get; set; } = null!;

        /// <summary>
        /// The Name of the Rest API check.
        /// </summary>
        [Input("displayName", required: true)]
        public Input<string> DisplayName { get; set; } = null!;

        /// <summary>
        /// The headers of the request in JSON format.
        /// </summary>
        [Input("headers")]
        public Input<string>? Headers { get; set; }

        /// <summary>
        /// The HTTP method of the request. Possible values: `OPTIONS`, `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `TRACE`, `PATCH`
        /// </summary>
        [Input("method", required: true)]
        public Input<string> Method { get; set; } = null!;

        /// <summary>
        /// The ID of the project. Changing this forces a new resource to be created.
        /// </summary>
        [Input("projectId", required: true)]
        public Input<string> ProjectId { get; set; } = null!;

        /// <summary>
        /// The time between evaluations (minutes). 
        /// 
        /// ~&gt;**NOTE** 1. The retry times should less them 10 based on the timeout. For example: `timeout` is `4000` then `retry_interval` should be `0` or no less then `400`.
        /// &lt;br&gt;2. `retry_interval` is not required when `completion_event=Callback`.
        /// </summary>
        [Input("retryInterval")]
        public Input<int>? RetryInterval { get; set; }

        /// <summary>
        /// The Criteria which defines when to pass the task. No criteria means response content does not influence the result.
        /// 
        /// ~&gt;**NOTE** `success_criteria` is used when `completion_event=ApiResponse`
        /// </summary>
        [Input("successCriteria")]
        public Input<string>? SuccessCriteria { get; set; }

        /// <summary>
        /// The ID of the resource being protected by the check. Changing this forces a new resource to be created
        /// </summary>
        [Input("targetResourceId", required: true)]
        public Input<string> TargetResourceId { get; set; } = null!;

        /// <summary>
        /// The type of resource being protected by the check. Possible values: `endpoint`, `environment`, `queue`, `repository`, `securefile`, `variablegroup`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("targetResourceType", required: true)]
        public Input<string> TargetResourceType { get; set; } = null!;

        /// <summary>
        /// The timeout in minutes for the Rest API check. Defaults to `1440`.
        /// </summary>
        [Input("timeout")]
        public Input<int>? Timeout { get; set; }

        /// <summary>
        /// The URL suffix and parameters.
        /// </summary>
        [Input("urlSuffix")]
        public Input<string>? UrlSuffix { get; set; }

        /// <summary>
        /// The name of the Variable Group.
        /// </summary>
        [Input("variableGroupName")]
        public Input<string>? VariableGroupName { get; set; }

        public CheckRestApiArgs()
        {
        }
        public static new CheckRestApiArgs Empty => new CheckRestApiArgs();
    }

    public sealed class CheckRestApiState : global::Pulumi.ResourceArgs
    {
        /// <summary>
        /// The Rest API request body.
        /// </summary>
        [Input("body")]
        public Input<string>? Body { get; set; }

        /// <summary>
        /// The completion event of the Rest API call. Possible values: `Callback`, `ApiResponse`. Defaults to `Callback`.
        /// </summary>
        [Input("completionEvent")]
        public Input<string>? CompletionEvent { get; set; }

        /// <summary>
        /// The name of the Service Connection.
        /// </summary>
        [Input("connectedServiceName")]
        public Input<string>? ConnectedServiceName { get; set; }

        /// <summary>
        /// The type of the Service Connection used to invoke the REST API. Possible values: `connectedServiceName`(**Generic** type service connection) and `connectedServiceNameARM`(**Azure Resource Manager** type service connection).
        /// </summary>
        [Input("connectedServiceNameSelector")]
        public Input<string>? ConnectedServiceNameSelector { get; set; }

        /// <summary>
        /// The Name of the Rest API check.
        /// </summary>
        [Input("displayName")]
        public Input<string>? DisplayName { get; set; }

        /// <summary>
        /// The headers of the request in JSON format.
        /// </summary>
        [Input("headers")]
        public Input<string>? Headers { get; set; }

        /// <summary>
        /// The HTTP method of the request. Possible values: `OPTIONS`, `GET`, `HEAD`, `POST`, `PUT`, `DELETE`, `TRACE`, `PATCH`
        /// </summary>
        [Input("method")]
        public Input<string>? Method { get; set; }

        /// <summary>
        /// The ID of the project. Changing this forces a new resource to be created.
        /// </summary>
        [Input("projectId")]
        public Input<string>? ProjectId { get; set; }

        /// <summary>
        /// The time between evaluations (minutes). 
        /// 
        /// ~&gt;**NOTE** 1. The retry times should less them 10 based on the timeout. For example: `timeout` is `4000` then `retry_interval` should be `0` or no less then `400`.
        /// &lt;br&gt;2. `retry_interval` is not required when `completion_event=Callback`.
        /// </summary>
        [Input("retryInterval")]
        public Input<int>? RetryInterval { get; set; }

        /// <summary>
        /// The Criteria which defines when to pass the task. No criteria means response content does not influence the result.
        /// 
        /// ~&gt;**NOTE** `success_criteria` is used when `completion_event=ApiResponse`
        /// </summary>
        [Input("successCriteria")]
        public Input<string>? SuccessCriteria { get; set; }

        /// <summary>
        /// The ID of the resource being protected by the check. Changing this forces a new resource to be created
        /// </summary>
        [Input("targetResourceId")]
        public Input<string>? TargetResourceId { get; set; }

        /// <summary>
        /// The type of resource being protected by the check. Possible values: `endpoint`, `environment`, `queue`, `repository`, `securefile`, `variablegroup`. Changing this forces a new resource to be created.
        /// </summary>
        [Input("targetResourceType")]
        public Input<string>? TargetResourceType { get; set; }

        /// <summary>
        /// The timeout in minutes for the Rest API check. Defaults to `1440`.
        /// </summary>
        [Input("timeout")]
        public Input<int>? Timeout { get; set; }

        /// <summary>
        /// The URL suffix and parameters.
        /// </summary>
        [Input("urlSuffix")]
        public Input<string>? UrlSuffix { get; set; }

        /// <summary>
        /// The name of the Variable Group.
        /// </summary>
        [Input("variableGroupName")]
        public Input<string>? VariableGroupName { get; set; }

        /// <summary>
        /// The version of the Rest API check.
        /// </summary>
        [Input("version")]
        public Input<int>? Version { get; set; }

        public CheckRestApiState()
        {
        }
        public static new CheckRestApiState Empty => new CheckRestApiState();
    }
}
